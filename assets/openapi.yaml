basePath: /
consumes: []
definitions:
  Account:
    description: ''
    properties:
      service:
        type: string
    type: object
  AdditionalInformation:
    description: ''
    properties:
      html:
        description: Hypertext Markup Language (HTML) representation of the content.
        example: ''
        type: string
      text:
        description: Textual representation of the content.
        example: ''
        type: string
    type: object
  Address:
    description: ''
    properties:
      ip:
        description: The IPv4 or IPv6 address.
        example: 123.245.34.235
        type: string
      mac:
        description: The Media Access Control (MAC) address. The format is six groups
          of two hexadecimal digits separated by colons.
        example: 12:34:56:78:90:AB
        type: string
    type: object
  AdhocScan:
    description: ''
    properties:
      assetGroupIds:
        description: The asset groups that should be included as a part of the scan.
          Only asset groups assigned to the site can be specified for a scan. This
          value should be an array of integers representing the unique identifiers
          of the asset groups.
        items:
          format: int32
          type: integer
        type: array
      engineId:
        description: The identifier of the scan engine.
        example: ''
        format: int32
        type: integer
      hosts:
        description: The hosts that should be included as a part of the scan. This
          should be a mixture of IP Addresses and Hostnames as a String array.
        items:
          type: string
        type: array
      name:
        description: The user-driven scan name for the scan.
        example: ''
        type: string
      templateId:
        description: The identifier of the scan template
        example: ''
        type: string
    type: object
  AdvisoryLink:
    description: ''
    properties:
      href:
        description: The hypertext reference for the vulnerability reference.
        example: https://support.microsoft.com/en-us/kb/4041689
        type: string
      rel:
        description: The relation of the hypermedia link, `"Advisory"`.
        example: Advisory
        type: string
    type: object
  Alert:
    description: ''
    properties:
      enabled:
        description: Flag indicating the alert is enabled.
        example: false
        type: boolean
      enabledScanEvents:
        $ref: '#/definitions/ScanEvents'
        description: Allows the user to specify which scan events generate an alert.
          Default values will be chosen if property is not specified as apart of the
          request. The default values are documented in the properties of `enabledScanEvents`.
        example: ''
      enabledVulnerabilityEvents:
        $ref: '#/definitions/VulnerabilityEvents'
        description: Allows the user to specify which vulnerability result events
          generate an alert. Default values will be chosen if property is not specified
          as apart of the request. The default values are documented in the properties
          of `enabledVulnerabilityEvents`.
        example: ''
      id:
        description: The identifier of the alert.
        example: ''
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      maximumAlerts:
        description: The maximum number of alerts that will be issued. To disable
          maximum alerts, omit the property in the request or specify the property
          with a value of `null`.
        example: ''
        format: int32
        minimum: 1
        type: integer
      name:
        description: The name of the alert.
        example: ''
        type: string
      notification:
        description: The type of alert.
        enum:
        - SMTP
        - SNMP
        - Syslog
        example: ''
        type: string
    required:
    - enabled
    - name
    - notification
    type: object
  AssessmentResult:
    description: ''
    properties:
      checkId:
        description: The identifier of the vulnerability check.
        example: ssh-openssh-x11uselocalhost-x11-forwarding-session-hijack
        type: string
      exceptions:
        description: If the result is vulnerable with exceptions applied, the identifier(s)
          of the exceptions actively applied to the result.
        items:
          format: int32
          type: integer
        type: array
      key:
        description: An additional discriminating key used to uniquely identify between
          multiple instances of results on the same finding.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      port:
        description: The port of the service the result was discovered on.
        example: 22
        format: int32
        type: integer
      proof:
        description: The proof explaining why the result was found vulnerable. The
          proof may container embedded HTML formatting markup.
        example: <p><p>OpenBSD OpenSSH 4.3 on Linux</p></p>
        type: string
      protocol:
        description: The protocol of the service the result was discovered on.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        example: tcp
        type: string
      since:
        description: The date and time the result was first recorded, in the ISO8601
          format. If the result changes status this value is the date and time of
          the status change.
        example: '2017-08-09T11:32:33.658Z'
        type: string
      status:
        description: The status of the vulnerability check result.
        enum:
        - unknown
        - not-vulnerable
        - vulnerable
        - vulnerable-version
        - vulnerable-potential
        - vulnerable-with-exception-applied
        - vulnerable-version-with-exception-applied
        - vulnerable-potential-with-exception-applied
        example: vulnerable-version
        type: string
    required:
    - status
    type: object
  Asset:
    description: ''
    properties:
      addresses:
        description: All addresses discovered on the asset.
        items:
          $ref: '#/definitions/Address'
        type: array
      assessedForPolicies:
        description: Whether the asset has been assessed for policies at least once.
        example: false
        readOnly: true
        type: boolean
      assessedForVulnerabilities:
        description: Whether the asset has been assessed for vulnerabilities at least
          once.
        example: true
        readOnly: true
        type: boolean
      configurations:
        description: Configuration key-values pairs enumerated on the asset.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      databases:
        description: The databases enumerated on the asset.
        items:
          $ref: '#/definitions/Database'
        type: array
      files:
        description: The files discovered with searching on the asset.
        items:
          $ref: '#/definitions/File'
        type: array
      history:
        description: The history of changes to the asset over time.
        items:
          $ref: '#/definitions/AssetHistory'
        readOnly: true
        type: array
      hostName:
        description: The primary host name (local or FQDN) of the asset.
        example: corporate-workstation-1102DC.acme.com
        type: string
      hostNames:
        description: All host names or aliases discovered on the asset.
        items:
          $ref: '#/definitions/HostName'
        type: array
      id:
        description: The identifier of the asset.
        example: 282
        format: int64
        type: integer
      ids:
        description: Unique identifiers found on the asset, such as hardware or operating
          system identifiers.
        items:
          $ref: '#/definitions/UniqueId'
        type: array
      ip:
        description: The primary IPv4 or IPv6 address of the asset.
        example: 182.34.74.202
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      mac:
        description: The primary Media Access Control (MAC) address of the asset.
          The format is six groups of two hexadecimal digits separated by colons.
        example: AB:12:CD:34:EF:56
        type: string
      os:
        description: The full description of the operating system of the asset.
        example: Microsoft Windows Server 2008 Enterprise Edition SP1
        type: string
      osFingerprint:
        $ref: '#/definitions/OperatingSystem'
        description: The details of the operating system of the asset.
        example: ''
      rawRiskScore:
        description: The base risk score of the asset.
        example: 31214.3
        format: double
        readOnly: true
        type: number
      riskScore:
        description: The risk score (with criticality adjustments) of the asset.
        example: 37457.16
        format: double
        readOnly: true
        type: number
      services:
        description: The services discovered on the asset.
        items:
          $ref: '#/definitions/Service'
        type: array
      software:
        description: The software discovered on the asset.
        items:
          $ref: '#/definitions/Software'
        type: array
      type:
        description: The type of asset.
        enum:
        - unknown
        - guest
        - hypervisor
        - physical
        - mobile
        example: ''
        type: string
      userGroups:
        description: The group accounts enumerated on the asset.
        items:
          $ref: '#/definitions/GroupAccount'
        type: array
      users:
        description: The user accounts enumerated on the asset.
        items:
          $ref: '#/definitions/UserAccount'
        type: array
      vulnerabilities:
        $ref: '#/definitions/AssetVulnerabilities'
        description: Summary information for vulnerabilities on the asset.
        example: ''
        readOnly: true
    type: object
  AssetCreate:
    description: ''
    properties:
      addresses:
        description: All addresses discovered on the asset.
        items:
          $ref: '#/definitions/Address'
        type: array
      assessedForPolicies:
        description: Whether the asset has been assessed for policies at least once.
        example: false
        readOnly: true
        type: boolean
      assessedForVulnerabilities:
        description: Whether the asset has been assessed for vulnerabilities at least
          once.
        example: true
        readOnly: true
        type: boolean
      configurations:
        description: Configuration key-values pairs enumerated on the asset.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      cpe:
        description: The Common Platform Enumeration (CPE) of the operating system.
          This is the tertiary means of specifying the operating system fingerprint.
          Use `"osFingerprint"` or `"os"` as a more accurate means of defining the
          operating system.
        example: ''
        type: string
      databases:
        description: The databases enumerated on the asset.
        items:
          $ref: '#/definitions/Database'
        type: array
      date:
        description: The date the data was collected on the asset.
        example: ''
        type: string
      description:
        description: The description of the source or collection of information on
          the asset. This description will appear in the history of the asset for
          future auditing purposes.
        example: ''
        type: string
      files:
        description: The files discovered with searching on the asset.
        items:
          $ref: '#/definitions/File'
        type: array
      history:
        description: The history of changes to the asset over time.
        items:
          $ref: '#/definitions/AssetHistory'
        readOnly: true
        type: array
      hostName:
        $ref: '#/definitions/HostName'
        description: The primary host name (local or FQDN) of the asset.
        example: corporate-workstation-1102DC.acme.com
      hostNames:
        description: Additional host names for the asset.
        items:
          $ref: '#/definitions/HostName'
        type: array
      id:
        description: The identifier of the asset.
        example: 282
        format: int64
        type: integer
      ids:
        description: Unique identifiers found on the asset, such as hardware or operating
          system identifiers.
        items:
          $ref: '#/definitions/UniqueId'
        type: array
      ip:
        description: The primary IPv4 or IPv6 address of the asset.
        example: 182.34.74.202
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      mac:
        description: The primary Media Access Control (MAC) address of the asset.
          The format is six groups of two hexadecimal digits separated by colons.
        example: AB:12:CD:34:EF:56
        type: string
      os:
        description: Free-form textual description of the operating system of the
          asset, typically from a fingerprinting source. This input will be parsed
          to produce a full fingerprint. This is the secondary means of specifying
          the operating system. Use `osFingerprint` for a more accurate definition.
        example: ''
        type: string
      osFingerprint:
        $ref: '#/definitions/OperatingSystem'
        description: The details of the operating system of the asset. At least one
          of `vendor`, `family`, or `product` must be supplied. This is the preferred
          means of defining the operating system.
        example: ''
      rawRiskScore:
        description: The base risk score of the asset.
        example: 31214.3
        format: double
        readOnly: true
        type: number
      riskScore:
        description: The risk score (with criticality adjustments) of the asset.
        example: 37457.16
        format: double
        readOnly: true
        type: number
      services:
        description: The services discovered on the asset.
        items:
          $ref: '#/definitions/Service'
        type: array
      software:
        description: The software discovered on the asset.
        items:
          $ref: '#/definitions/Software'
        type: array
      type:
        description: The type of asset.
        example: ''
        type: string
      userGroups:
        description: The group accounts enumerated on the asset.
        items:
          $ref: '#/definitions/GroupAccount'
        type: array
      users:
        description: The user accounts enumerated on the asset.
        items:
          $ref: '#/definitions/UserAccount'
        type: array
      vulnerabilities:
        $ref: '#/definitions/AssetVulnerabilities'
        description: Summary information for vulnerabilities on the asset.
        example: ''
        readOnly: true
    required:
    - date
    type: object
  AssetCreatedOrUpdatedReference:
    description: ''
    properties:
      body:
        $ref: '#/definitions/ReferenceWith«AssetID,Link»'
      statusCode:
        enum:
        - '100'
        - '101'
        - '102'
        - '103'
        - '200'
        - '201'
        - '202'
        - '203'
        - '204'
        - '205'
        - '206'
        - '207'
        - '208'
        - '226'
        - '300'
        - '301'
        - '302'
        - '303'
        - '304'
        - '305'
        - '307'
        - '308'
        - '400'
        - '401'
        - '402'
        - '403'
        - '404'
        - '405'
        - '406'
        - '407'
        - '408'
        - '409'
        - '410'
        - '411'
        - '412'
        - '413'
        - '414'
        - '415'
        - '416'
        - '417'
        - '418'
        - '419'
        - '420'
        - '421'
        - '422'
        - '423'
        - '424'
        - '426'
        - '428'
        - '429'
        - '431'
        - '500'
        - '501'
        - '502'
        - '503'
        - '504'
        - '505'
        - '506'
        - '507'
        - '508'
        - '509'
        - '510'
        - '511'
        type: string
    type: object
  AssetGroup:
    description: ''
    properties:
      assets:
        description: The number of assets that belong to the asset group.
        example: 768
        format: int32
        readOnly: true
        type: integer
      description:
        description: The description of the asset group.
        example: Assets with unacceptable high risk required immediate remediation.
        type: string
      id:
        description: The identifier of the asset group.
        example: 61
        format: int32
        readOnly: true
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the asset group.
        example: High Risk Assets
        type: string
      riskScore:
        description: The total risk score of all assets that belong to the asset group.
        example: 4457823.78
        format: double
        readOnly: true
        type: number
      searchCriteria:
        $ref: '#/definitions/SearchCriteria'
        description: 'Search criteria used to determine dynamic membership, if `type`
          is `"dynamic"`. '
        example: ''
      type:
        description: The type of the asset group.
        enum:
        - static
        - dynamic
        example: dynamic
        type: string
      vulnerabilities:
        $ref: '#/definitions/Vulnerabilities'
        description: Summary information for distinct vulnerabilities found on the
          assets.
        example: ''
        readOnly: true
    required:
    - name
    - type
    type: object
  AssetHistory:
    description: ''
    properties:
      date:
        description: The date the asset information was collected or changed.
        example: '2018-04-09T06:23:49Z'
        type: string
      description:
        description: Additional information describing the change.
        example: ''
        type: string
      scanId:
        description: If a scan-oriented change, the identifier of the corresponding
          scan the asset was scanned in.
        example: 12
        format: int64
        type: integer
      type:
        description: "The type of change. May be one of: \n| Type                \
          \                | Source of Data                                      \
          \        | \n| ----------------------------------- | -----------------------------------------------------------\
          \ | \n| `ASSET-IMPORT`, `EXTERNAL-IMPORT`   | External source such as the\
          \ API                             | \n| `EXTERNAL-IMPORT-APPSPIDER`    \
          \     | Rapid7 InsightAppSec (previously known as AppSpider)        | \n\
          | `SCAN`                              | Scan engine scan               \
          \                             | \n| `ACTIVE-SYNC`                      \
          \ | ActiveSync                                                  | \n| `SCAN-LOG-IMPORT`\
          \                   | Manual import of a scan log                      \
          \           | \n| `VULNERABILITY_EXCEPTION_APPLIED`   | Vulnerability exception\
          \ applied                             | \n| `VULNERABILITY_EXCEPTION_UNAPPLIED`\
          \ | Vulnerability exception unapplied                           |"
        example: SCAN
        type: string
      user:
        description: If a vulnerability exception change, the login name of the user
          that performed the operation.
        example: ''
        type: string
      version:
        description: 'The version number of the change (a chronological incrementing
          number starting from 1). '
        example: 8
        format: int32
        type: integer
      vulnerabilityExceptionId:
        description: If a vulnerability exception change, the identifier of the vulnerability
          exception that caused the change.
        example: ''
        format: int32
        type: integer
    type: object
  AssetPolicy:
    description: ''
    properties:
      benchmarkName:
        description: The name of the policy's benchmark.
        example: ''
        type: string
      benchmarkVersion:
        description: The version number of the benchmark that includes the policy.
        example: ''
        type: string
      category:
        description: A grouping of similar benchmarks based on their source, purpose,
          or other criteria. Examples include FDCC, USGCB, and CIS.
        example: ''
        type: string
      description:
        description: The description of the policy.
        example: ''
        type: string
      failedAssetsCount:
        description: The number of assets that are not compliant with the policy.
          The assets considered in the calculation are based on the user's list of
          accessible assets.
        example: ''
        format: int32
        type: integer
      failedRulesCount:
        description: The number of rules in the policy that are not compliant with
          any scanned assets. The assets considered in the calculation are based on
          the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      id:
        description: The textual representation of the policy identifier.
        example: ''
        type: string
      isCustom:
        description: A flag indicating whether the policy is custom.
        example: false
        type: boolean
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      notApplicableAssetsCount:
        description: The number of assets that were attempted to be scanned, but are
          not applicable to the policy. The assets considered in the calculation are
          based on the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      notApplicableRulesCount:
        description: The number of rules in the policy that are not applicable with
          any scanned assets. The assets considered in the calculation are based on
          the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      passedAssetsCount:
        description: The number of assets that are compliant with the policy. The
          assets considered in the calculation are based on the user's list of accessible
          assets.
        example: ''
        format: int32
        type: integer
      passedRulesCount:
        description: The number of rules in the policy that are compliant with all
          scanned assets. The assets considered in the calculation are based on the
          user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      policyName:
        description: The name of the policy.
        example: ''
        type: string
      ruleCompliance:
        description: The ratio of PASS results for the rules to the total number of
          rules in each policy.
        example: ''
        format: double
        type: number
      ruleComplianceDelta:
        description: The change in rule compliance between the last two scans of all
          assets. The list of scanned policies is based on the user's list of accessible
          assets.
        example: ''
        format: double
        type: number
      scope:
        description: The textual representation of the policy scope. Policies that
          are automatically available have `"Built-in"` scope, whereas policies created
          by users have scope as `"Custom"`.
        example: ''
        type: string
      status:
        description: The overall compliance status of the policy.
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
      surrogateId:
        description: The identifier of the policy
        example: ''
        format: int64
        type: integer
      title:
        description: The title of the policy as visible to the user.
        example: ''
        type: string
      unscoredRules:
        description: The number of rules defined in the policy with a role of "unscored".
          These rules will not affect rule compliance scoring for the policy.
        example: ''
        format: int32
        type: integer
    type: object
  AssetPolicyAssessment:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      total:
        description: The total number of assets.
        example: ''
        format: int32
        type: integer
      totalFailed:
        description: The total number of assets that are not compliant.
        example: ''
        format: int32
        type: integer
      totalNotApplicable:
        description: The total number of assets that are not applicable.
        example: ''
        format: int32
        type: integer
      totalPassed:
        format: int32
        type: integer
    type: object
  AssetPolicyItem:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/AssetPolicyAssessment'
        description: A summary of asset compliance.
        example: ''
      description:
        description: A description of the policy rule or group.
        example: ''
        type: string
      hasOverride:
        description: 'A flag indicating whether the policy rule has an active override
          applied to it. This field only applies to resources representing policy
          rules. '
        example: false
        type: boolean
      id:
        description: The identifier of the policy rule or group.
        example: ''
        format: int64
        type: integer
      isUnscored:
        description: A flag indicating whether the policy rule has a role of `"unscored"`.
          This field only applies to resources representing policy rules.
        example: false
        type: boolean
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the policy rule or group.
        example: ''
        type: string
      policy:
        $ref: '#/definitions/PolicyMetadataResource'
        description: Information about the policy.
        example: ''
      rules:
        $ref: '#/definitions/PolicyRuleAssessmentResource'
        description: A summary of rule compliance for multiple policy rules. This
          field only applies to resources representing policy groups.
        example: ''
      scope:
        description: The textual representation of the policy rule/group scope. Policy
          rules or groups that are automatically available have `"Built-in"` scope,
          whereas policy rules or groups created by users have scope as `"Custom"`.
        example: ''
        type: string
      status:
        description: The asset's rule compliance status.
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
      title:
        description: The title of the policy rule, or group, as visible to the user.
        example: ''
        type: string
      type:
        description: Indicates whether the resource represents either a policy rule
          or group.
        enum:
        - rule
        - group
        example: ''
        type: string
    type: object
  AssetTag:
    description: ''
    properties:
      color:
        description: The color to use when rendering the tag in a user interface.
        enum:
        - default
        - blue
        - green
        - orange
        - red
        - purple
        example: default
        type: string
      created:
        description: The date and time the tag was created.
        example: '2017-10-07T23:50:01.205Z'
        type: string
      id:
        description: The identifier of the tag.
        example: 6
        format: int32
        readOnly: true
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name (label) of the tab.
        example: Very High
        type: string
      riskModifier:
        description: 'The amount to adjust risk of an asset tagged with this tag. '
        example: '2.0'
        type: object
      searchCriteria:
        $ref: '#/definitions/SearchCriteria'
      source:
        description: The source of the tag.
        enum:
        - built-in
        - custom
        example: built-in
        readOnly: true
        type: string
      sources:
        description: The source(s) by which a tag is applied to an asset.
        items:
          $ref: '#/definitions/TagAssetSource'
        type: array
      type:
        description: The type of the tag.
        enum:
        - custom
        - location
        - owner
        - criticality
        example: criticality
        type: string
    required:
    - name
    - type
    type: object
  AssetVulnerabilities:
    description: ''
    properties:
      critical:
        description: The number of critical vulnerabilities.
        example: 16
        format: int64
        readOnly: true
        type: integer
      exploits:
        description: The number of distinct exploits that can exploit any of the vulnerabilities
          on the asset.
        example: 4
        format: int64
        readOnly: true
        type: integer
      malwareKits:
        description: The number of distinct malware kits that vulnerabilities on the
          asset are susceptible to.
        example: 0
        format: int64
        readOnly: true
        type: integer
      moderate:
        description: The number of moderate vulnerabilities.
        example: 3
        format: int64
        readOnly: true
        type: integer
      severe:
        description: The number of severe vulnerabilities.
        example: 76
        format: int64
        readOnly: true
        type: integer
      total:
        description: The total number of vulnerabilities.
        example: 95
        format: int64
        readOnly: true
        type: integer
    type: object
  AuthenticationSettings:
    description: ''
    properties:
      2fa:
        description: Whether two-factor authentication is enabled.
        example: false
        type: boolean
      loginLockThreshold:
        description: The maximum number of failed login attempts for an account becomes
          locked.
        example: 'true'
        format: int32
        type: integer
    type: object
  AuthenticationSource:
    description: ''
    properties:
      external:
        description: Whether the authentication source is external (true) or internal
          (false).
        example: false
        type: boolean
      id:
        description: The identifier of the authentication source.
        example: ''
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the authentication source.
        example: ''
        type: string
      type:
        description: The type of the authentication source.
        enum:
        - normal
        - kerberos
        - ldap
        - saml
        - admin
        example: ''
        type: string
    type: object
  AvailableReportFormat:
    description: ''
    properties:
      format:
        description: The output file-format of a report.
        enum:
        - arf-xml
        - csv-export
        - cyberscope-xml
        - database-export
        - pdf
        - html
        - nexpose-simple-xml
        - oval-xml
        - qualys-xml
        - rtf
        - scap-xml
        - sql-query
        - text
        - xccdf-xml
        - xccdf-csv
        - xml
        - xml-export
        - xml-export-v2
        example: pdf
        type: string
      templates:
        description: The report template identifiers that can be used within a report
          format.
        items:
          type: string
        type: array
    type: object
  BackupsSize:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 0
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 0 bytes
        type: string
    type: object
  BadRequestError:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '400'
        example: '400'
        type: string
    required:
    - status
    type: object
  CPUInfo:
    description: ''
    properties:
      clockSpeed:
        description: The clock speed of the host, in MHz.
        example: 2600
        format: int32
        type: integer
      count:
        description: The number of CPUs.
        example: 8
        format: int32
        type: integer
    type: object
  Configuration:
    description: ''
    properties:
      name:
        description: The name of the configuration value.
        example: <name>
        type: string
      value:
        description: The configuration value.
        example: <value>
        type: string
    required:
    - name
    type: object
  ConsoleCommandOutput:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      output:
        description: The output of the command that was executed.
        example: ''
        type: string
    type: object
  ContentDescription:
    description: ''
    properties:
      html:
        description: Hypertext Markup Language (HTML) representation of the content.
        example: A remote code execution vulnerability exists in the way that the
          scripting engine handles objects in memory in Microsoft Edge. ...
        type: string
      text:
        description: Textual representation of the content.
        example: <p>A remote code execution vulnerability exists in the way that the
          scripting engine handles objects in memory in Microsoft Edge. ...</p>
        type: string
    type: object
  CreateAuthenticationSource:
    description: ''
    properties:
      id:
        description: The identifier of the authentication source to use to authenticate
          the user. The source with the specified identifier must be of the type specified
          by `type`. If `id` is omitted, then one source of the specified `type` is
          selected.
        example: ''
        format: int32
        type: integer
      type:
        description: The type of the authentication source to use to authenticate
          the user.
        example: ''
        type: string
    required:
    - type
    type: object
  CreatedOrUpdatedReference:
    description: ''
    properties:
      id:
        description: The identifier of the resource created or updated.
        example: '3'
        type: object
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: '1'
        type: object
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«AssetGroupID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«CredentialID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«DiscoveryQueryID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«EngineID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«PolicyOverrideID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«ScanID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«ScanTemplateID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: '1'
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«UserID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«VulnerabilityExceptionID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«VulnerabilityValidationID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  CreatedReference«int,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource created.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  Criterion:
    description: ''
    type: object
  Database:
    description: ''
    properties:
      description:
        description: The description of the database instance.
        example: Microsoft SQL Server
        type: string
      id:
        description: The identifier of the database.
        example: 13
        format: int32
        type: integer
      name:
        description: The name of the database instance.
        example: MSSQL
        type: string
    required:
    - name
    type: object
  DatabaseConnectionSettings:
    description: ''
    properties:
      maximumAdministrationPoolSize:
        description: The maximum number of administrative connections in the connection
          pool. -1 means unlimited.
        example: -1
        format: int32
        type: integer
      maximumPoolSize:
        description: ${settings.database.connection.max}
        example: -1
        format: int32
        type: integer
      maximumPreparedStatementPoolSize:
        description: The maximum number of prepared statements in the prepared statement
          pool. -1 means unlimited.
        example: 256
        format: int32
        type: integer
    type: object
  DatabaseSettings:
    description: ''
    properties:
      connection:
        $ref: '#/definitions/DatabaseConnectionSettings'
        description: Details connection settings for the database.
        example: ''
      host:
        description: The database host.
        example: 127.0.0.1
        type: string
      maintenanceThreadPoolSize:
        description: The maximum number of parallel tasks when executing maintenance
          tasks.
        example: 20
        format: int32
        type: integer
      port:
        description: The database port.
        example: 5432
        format: int32
        type: integer
      url:
        description: The database connection URL.
        example: //127.0.0.1:5432/nexpose
        type: string
      user:
        description: The database user.
        example: nxpgsql
        type: string
      vendor:
        description: The database vendor.
        example: postgresql
        type: string
    type: object
  DatabaseSize:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 5364047843
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 5 GB
        type: string
    type: object
  DiscoveryAsset:
    description: ''
    properties:
      address:
        description: The IP address of a discovered asset.
        example: 12.83.99.203
        readOnly: true
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The host name of a discovered asset.
        example: desktop-27.acme.com
        readOnly: true
        type: string
    type: object
  DiscoveryConnection:
    description: ''
    properties:
      accessKeyId:
        description: The AWS credential access key identifier (only used for the AWS
          connection).
        example: ''
        type: string
      address:
        description: ${discovery.connection.address}
        example: ''
        type: string
      arn:
        description: The AWS credential ARN (only used for the AWS connection).
        example: ''
        type: string
      awsSessionName:
        description: The AWS credential session name (only used for the AWS connection).
        example: ''
        type: string
      connectionType:
        description: The type of the discovery connection.
        example: ''
        type: string
      eventSource:
        description: The event source type to use.
        example: ''
        type: string
      exchangeServerHostname:
        description: The hostname of the exchange server to connect to.
        example: ''
        type: string
      exchangeUser:
        description: The username used to connect to the exchange server.
        example: ''
        type: string
      folderPath:
        description: The folder path to pull logs from.
        example: ''
        type: string
      id:
        description: The identifier of the discovery connection.
        example: ''
        format: int64
        readOnly: true
        type: integer
      ldapServer:
        description: The LDAP server to connect to.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The discovery connection name.
        example: Connection 1
        type: string
      port:
        description: The address used to connect to the discovery connection source.
        example: ''
        format: int32
        type: integer
      protocol:
        description: The protocol used to connect to the discovery connection source.
        example: ''
        type: string
      region:
        description: The AWS region (only used for the AWS connection).
        example: ''
        type: string
      scanEngineIsInsideAWS:
        description: Flag denoting whether the scan engine is in AWS, this is used
          for AWS discovery connections for scanning purposes (only used for the AWS
          connection).
        example: false
        type: boolean
      secretAccessKey:
        description: The AWS credential secret access key (only used for the AWS connection).
        example: ''
        type: string
      status:
        description: The status of the discovery connection.
        example: ''
        type: string
      username:
        description: The username used to authenticate to the discovery connection
          source.
        example: ''
        type: string
      winRMServer:
        description: 'The WinRM server to connect to. '
        example: ''
        type: string
    type: object
  DiscoverySearchCriteria:
    description: ''
    properties:
      connectionType:
        description: The type of discovery connection configured for the site. This
          property only applies to dynamic sites.
        enum:
        - activesync-ldap
        - activesync-office365
        - activesync-powershell
        - aws
        - dhcp
        - sonar
        - vsphere
        example: ''
        type: string
      filters:
        description: Filters used to match assets from a discovery connection. See
          <a href="#section/Responses/DiscoverySearchCriteria">Discovery Connection
          Search Criteria</a> for more information on the structure and format.
        items:
          $ref: '#/definitions/SwaggerDiscoverySearchCriteriaFilter'
        type: array
      match:
        description: Operator to determine how to match filters. `all` requires that
          all filters match for an asset to be included. `any` requires only one filter
          to match for an asset to be included.
        enum:
        - any
        - all
        example: all
        type: string
    type: object
  DiskFree:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 166532222976
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 155.1 GB
        type: string
    type: object
  DiskInfo:
    description: ''
    properties:
      free:
        $ref: '#/definitions/DiskFree'
        description: Available disk space.
        example: ''
      installation:
        $ref: '#/definitions/InstallSize'
        description: Details regarding the size of disk used by the console installation.
        example: ''
      total:
        $ref: '#/definitions/DiskTotal'
        description: Total disk space.
        example: ''
    type: object
  DiskTotal:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 499004735488
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 464.7 GB
        type: string
    type: object
  DynamicSite:
    description: ''
    properties:
      id:
        description: The identifier of the discovery connection.
        example: ''
        format: int64
        type: integer
    required:
    - id
    type: object
  EnginePool:
    description: ''
    properties:
      engines:
        description: The identifiers of the scan engines in the engine pool.
        items:
          format: int32
          type: integer
        type: array
      id:
        description: The identifier of the scan engine.
        example: 6
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The name of the scan engine.
        example: Corporate Scan Engine 001
        type: string
    required:
    - id
    - name
    type: object
  EnvironmentProperties:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      properties:
        description: Key-value pairs for system and environment properties that are
          currently defined.
        example: ''
        type: object
    type: object
  Error:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '100'
        - '101'
        - '102'
        - '103'
        - '200'
        - '201'
        - '202'
        - '203'
        - '204'
        - '205'
        - '206'
        - '207'
        - '208'
        - '226'
        - '300'
        - '301'
        - '302'
        - '303'
        - '304'
        - '305'
        - '307'
        - '308'
        - '400'
        - '401'
        - '402'
        - '403'
        - '404'
        - '405'
        - '406'
        - '407'
        - '408'
        - '409'
        - '410'
        - '411'
        - '412'
        - '413'
        - '414'
        - '415'
        - '416'
        - '417'
        - '418'
        - '419'
        - '420'
        - '421'
        - '422'
        - '423'
        - '424'
        - '426'
        - '428'
        - '429'
        - '431'
        - '500'
        - '501'
        - '502'
        - '503'
        - '504'
        - '505'
        - '506'
        - '507'
        - '508'
        - '509'
        - '510'
        - '511'
        example: ''
        type: string
    type: object
  ExceptionScope:
    description: ''
    properties:
      id:
        description: The identifier of the scope type to which the exception applies.
          For example in a site scoped vulnerability exception this is the site id,
          in an asset group vulnerability exception this is the asset group id.
        example: ''
        format: int64
        type: integer
      key:
        description: If the scope type is `"Instance"`, an optional key to discriminate
          the instance the exception applies to.
        example: ''
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      port:
        description: If the scope type is `"Instance"` and the vulnerability is detected
          on a service, the port on which the exception applies.
        example: ''
        format: int32
        type: integer
      type:
        description: 'The type of the exception scope. One of: `"Global"`, `"Site"`,
          `"Asset"`, `"Asset Group"`, `"Instance"`'
        example: ''
        type: string
      vulnerability:
        description: The identifier of the vulnerability to which the exception applies.
        example: ''
        type: string
    type: object
  ExcludedAssetGroups:
    description: ''
    properties:
      assetGroupIDs:
        description: List of asset group identifiers. Each element is an integer.
        items:
          format: int32
          type: integer
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ExcludedScanTargets:
    description: ''
    properties:
      addresses:
        description: List of addresses. Each address is a string that can represent
          either a hostname, ipv4 address, ipv4 address range, ipv6 address, or CIDR
          notation.
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  Exploit:
    description: ''
    properties:
      id:
        description: The identifier of the exploit.
        example: 4924
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      skillLevel:
        description: The level of skill required to use the exploit.
        enum:
        - novice
        - intermediate
        - expert
        example: expert
        type: string
      source:
        $ref: '#/definitions/ExploitSource'
        description: Details about where the exploit is defined.
        example: ''
      title:
        description: The title (short summary) of the exploit.
        example: Microsoft IIS WebDav ScStoragePathFromUrl Overflow
        type: string
    type: object
  ExploitSource:
    description: ''
    properties:
      key:
        description: The identifier of the exploit in the source library.
        example: exploit/windows/iis/iis_webdav_scstoragepathfromurl
        type: string
      link:
        $ref: '#/definitions/ExploitSourceLink'
        description: ${exploit.source.link.description}
        example: ''
      name:
        description: The source library of the exploit, typically the name of the
          vendor that maintains and/or defined the exploit.
        enum:
        - metasploit
        - exploitdb
        example: metasploit
        type: string
    type: object
  ExploitSourceLink:
    description: ''
    properties:
      href:
        description: The hypertext reference for the exploit source.
        example: http://www.metasploit.com/modules/exploit/windows/iis/iis_webdav_scstoragepathfromurl
        type: string
      id:
        description: Hypermedia link to the destination of the exploit source.
        example: exploit/windows/iis/iis_webdav_scstoragepathfromurl
        type: string
      rel:
        description: The relation of the hypermedia link, `"Source"`.
        example: Source
        type: string
    type: object
  Features:
    description: ''
    properties:
      adaptiveSecurity:
        description: Whether Adaptive Security features are available.
        example: false
        type: boolean
      agents:
        description: Whether the use of agents is allowed.
        example: true
        type: boolean
      dynamicDiscovery:
        description: Whether dynamic discovery sources may be used.
        example: true
        type: boolean
      earlyAccess:
        description: Whether early-access features are available prior to general
          availability.
        example: false
        type: boolean
      enginePool:
        description: Whether scan engine pools may be used.
        example: true
        type: boolean
      insightPlatform:
        description: Whether the usage of the Insight platform is allowed.
        example: true
        type: boolean
      mobile:
        description: Whether mobile features are allowed.
        example: true
        type: boolean
      multitenancy:
        description: Whether multitenancy is allowed.
        example: false
        type: boolean
      policyEditor:
        description: Whether the editing of policies is allowed.
        example: true
        type: boolean
      policyManager:
        description: Whether the policy manager is allowed.
        example: true
        type: boolean
      remediationAnalytics:
        description: Whether Remediation Analytics features are available.
        example: true
        type: boolean
      reporting:
        $ref: '#/definitions/LicenseReporting'
        description: The reporting features available in the license.
        example: ''
      scanning:
        $ref: '#/definitions/LicenseScanning'
        description: The scanning features available in the license.
        example: ''
    type: object
  File:
    description: ''
    properties:
      attributes:
        description: Attributes detected on the file.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      name:
        description: The name of the file.
        example: ADMIN$
        type: string
      size:
        description: The size of the regular file (in bytes). If the file is a directory,
          no value is returned.
        example: -1
        format: int64
        type: integer
      type:
        description: The type of the file.
        enum:
        - file
        - directory
        example: directory
        type: string
    required:
    - name
    - type
    type: object
  Fingerprint:
    description: ''
    properties:
      description:
        description: The description of the matched fingerprint.
        example: Ubuntu libexpat1 2.1.0-4ubuntu1.2
        type: string
      family:
        description: The family of the matched fingerprint.
        example: ''
        type: string
      product:
        description: The product of the matched fingerprint.
        example: libexpat1
        type: string
      vendor:
        description: The description of the matched fingerprint.
        example: Ubuntu
        type: string
      version:
        description: The version of the matched fingerprint.
        example: 2.1.0-4ubuntu1.2
        type: string
    type: object
  GlobalScan:
    description: ''
    properties:
      assets:
        description: The number of assets found in the scan.
        example: ''
        format: int32
        type: integer
      duration:
        description: The duration of the scan in ISO8601 format.
        example: ''
        type: string
      endTime:
        description: The end time of the scan in ISO8601 format.
        example: ''
        type: string
      engineId:
        description: The identifier of the scan engine.
        example: ''
        format: int32
        type: integer
      engineName:
        description: The name of the scan engine.
        example: ''
        type: string
      id:
        description: The identifier of the scan.
        example: ''
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      message:
        description: The reason for the scan status.
        example: ''
        type: string
      scanName:
        description: The user-driven scan name for the scan.
        example: ''
        type: string
      scanType:
        description: 'The scan type (automated, manual, scheduled). '
        example: ''
        type: string
      siteId:
        format: int32
        type: integer
      siteName:
        type: string
      startTime:
        description: The start time of the scan in ISO8601 format.
        example: ''
        type: string
      startedBy:
        description: The name of the user that started the scan.
        example: ''
        type: string
      status:
        description: The scan status.
        enum:
        - aborted
        - unknown
        - running
        - finished
        - stopped
        - error
        - paused
        - dispatched
        - integrating
        example: ''
        type: string
      vulnerabilities:
        $ref: '#/definitions/Vulnerabilities'
        description: The vulnerability synopsis of the scan.
        example: ''
    type: object
  GroupAccount:
    description: ''
    properties:
      id:
        description: The identifier of the user group.
        example: 972
        format: int32
        type: integer
      name:
        description: The name of the user group.
        example: Administrators
        type: string
    required:
    - name
    type: object
  HostName:
    description: ''
    properties:
      name:
        description: The host name (local or FQDN).
        example: corporate-workstation-1102DC.acme.com
        type: string
      source:
        description: The source used to detect the host name. `user` indicates the
          host name source is user-supplied (e.g. in a site target definition).
        enum:
        - user
        - dns
        - netbios
        - dce
        - epsec
        - ldap
        - other
        example: DNS
        type: string
    required:
    - name
    type: object
  IMetaData:
    description: ''
    properties:
      fieldName:
        type: string
      supportedOperators:
        items:
          enum:
          - IS
          - IS_NOT
          - IS_APPLIED
          - IS_NOT_APPLIED
          - IN
          - NOT_IN
          - STARTS_WITH
          - ENDS_WITH
          - CONTAINS
          - NOT_CONTAINS
          - LESS_THAN
          - GREATER_THAN
          - IN_RANGE
          - NOT_IN_RANGE
          - INCLUDE
          - DO_NOT_INCLUDE
          - ON_OR_BEFORE
          - ON_OR_AFTER
          - BETWEEN
          - EARLIER_THAN
          - WITHIN_THE_LAST
          - IS_EMPTY
          - IS_NOT_EMPTY
          - ARE
          - LIKE
          - NOT_LIKE
          type: string
        type: array
      type:
        enum:
        - NUMERIC
        - STRING
        - SET
        - SET_STRING
        - SINGLE
        - DATE
        type: string
    type: object
  IncludedAssetGroups:
    description: ''
    properties:
      assetGroupIDs:
        description: List of asset group identifiers. Each element is an integer.
        items:
          format: int32
          type: integer
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  IncludedScanTargets:
    description: ''
    properties:
      addresses:
        description: List of addresses. Each address is a string that can represent
          either a hostname, ipv4 address, ipv4 address range, ipv6 address, or CIDR
          notation.
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  Info:
    description: ''
    properties:
      cpu:
        $ref: '#/definitions/CPUInfo'
        description: Details regarding the host CPU.
        example: ''
      disk:
        $ref: '#/definitions/DiskInfo'
        description: Details regarding host disk usage.
        example: ''
      distinguishedName:
        description: The distinguished name of the console.
        example: CN=Rapid7 Security Console/ O=Rapid7
        type: string
      fqdn:
        description: The fully-qualified domain name of the local host the service
          is running on.
        example: server.acme.com
        type: string
      host:
        description: The name of the local host the service is running on.
        example: SERVER
        type: string
      ip:
        description: The IP address of the local host the service is running on.
        example: 192.168.1.99
        type: string
      jvm:
        $ref: '#/definitions/JVMInfo'
        description: Details regarding the Java Virtual Machine.
        example: ''
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      memory:
        $ref: '#/definitions/MemoryInfo'
        description: Details regarding host memory usage.
        example: ''
      operatingSystem:
        description: The operating system of the host the service is running on.
        example: Ubuntu Linux 16.04
        type: string
      serial:
        description: The serial number of the console.
        example: 729F31B1C92F3C91DFA8A649F4D5C883C269BD45
        type: string
      superuser:
        description: Whether the service is running a super-user.
        example: true
        type: boolean
      user:
        description: The user running the service.
        example: root
        type: string
      version:
        $ref: '#/definitions/VersionInfo'
        description: Details regarding the version of the installation.
        example: ''
    type: object
  InstallSize:
    description: ''
    properties:
      backups:
        $ref: '#/definitions/BackupsSize'
        description: The disk space used by backups.
        example: ''
      database:
        $ref: '#/definitions/DatabaseSize'
        description: The disk space used by the database.
        example: ''
      directory:
        $ref: '#/definitions/File'
        description: The installation directory.
        example: ''
      reports:
        $ref: '#/definitions/ReportSize'
        description: The disk space used by reports.
        example: ''
      scans:
        $ref: '#/definitions/ScanSize'
        description: The disk space used by scans.
        example: ''
      total:
        $ref: '#/definitions/InstallationTotalSize'
        description: Total disk space used by the installation.
        example: ''
    type: object
  InstallationTotalSize:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 12125933077
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 11.3 GB
        type: string
    type: object
  InternalServerError:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '500'
        example: '500'
        type: string
    required:
    - status
    type: object
  JVMInfo:
    description: ''
    properties:
      name:
        description: The name of the Java Virtual Machine.
        example: OpenJDK 64-Bit Server VM
        type: string
      startTime:
        description: The date and time the Java Virtual Machine last started.
        example: '2018-02-13T20:35:35.076Z'
        type: string
      uptime:
        description: 'Total up-time of the Java Virtual Machine, in ISO 8601 format.
          For example: `"PT1H4M24.214S"`.'
        example: PT8H21M7.978S
        type: string
      vendor:
        description: The vendor of the Java Virtual Machine.
        example: Azul Systems, Inc.
        type: string
      version:
        description: The version of the Java Virtual Machine.
        example: 25.102-b14
        type: string
    type: object
  JsonNode:
    description: ''
    properties:
      array:
        type: boolean
      bigDecimal:
        type: boolean
      bigInteger:
        type: boolean
      binary:
        type: boolean
      boolean:
        type: boolean
      containerNode:
        type: boolean
      double:
        type: boolean
      float:
        type: boolean
      floatingPointNumber:
        type: boolean
      int:
        type: boolean
      integralNumber:
        type: boolean
      long:
        type: boolean
      missingNode:
        type: boolean
      nodeType:
        enum:
        - ARRAY
        - BINARY
        - BOOLEAN
        - MISSING
        - 'NULL'
        - NUMBER
        - OBJECT
        - POJO
        - STRING
        type: string
      'null':
        type: boolean
      number:
        type: boolean
      object:
        type: boolean
      pojo:
        type: boolean
      short:
        type: boolean
      textual:
        type: boolean
      valueNode:
        type: boolean
    type: object
  License:
    description: ''
    properties:
      edition:
        description: The edition of the product.
        example: InsightVM
        type: string
      evaluation:
        description: Whether the license is a time-restricted evaluation.
        example: false
        type: boolean
      expires:
        description: The date and time the license expires.
        example: '2018-12-31T23:59:59.999Z'
        type: string
      features:
        $ref: '#/definitions/Features'
        description: The features available in the license.
        example: ''
      limits:
        $ref: '#/definitions/LicenseLimits'
        description: The limits of the license.
        example: ''
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      perpetual:
        description: Whether the license is perpetual.
        example: false
        type: boolean
      status:
        description: The status of the license.
        enum:
        - Activated
        - Unlicensed
        - Expired
        - Evaluation Mode
        - Revoked
        - Unknown
        example: Activated
        type: string
    type: object
  LicenseLimits:
    description: ''
    properties:
      assets:
        description: The maximum number of assets that can be assessed.
        example: 100000
        format: int32
        type: integer
      assetsWithHostedEngine:
        description: The maximum number of assets that may be scanned with the hosted
          scan engine.
        example: 1000
        format: int32
        type: integer
      scanEngines:
        description: The maximum number of scan engines that may be used.
        example: 100
        format: int32
        type: integer
      users:
        description: The maximum number of users allowed.
        example: 1000
        format: int32
        type: integer
    type: object
  LicensePolicyScanning:
    description: ''
    properties:
      benchmarks:
        $ref: '#/definitions/LicensePolicyScanningBenchmarks'
        description: The benchmarks available to policy scan.
        example: ''
      scanning:
        description: Whether policy scanning is allowed.
        example: true
        type: boolean
    type: object
  LicensePolicyScanningBenchmarks:
    description: ''
    properties:
      cis:
        description: Whether policy scanning for CIS benchmarks is allowed.
        example: true
        type: boolean
      custom:
        description: Whether custom benchmarks can be used during scanning.
        example: true
        type: boolean
      disa:
        description: Whether policy scanning for DISA benchmarks is allowed.
        example: true
        type: boolean
      fdcc:
        description: Whether policy scanning for FDCC benchmarks is allowed.
        example: true
        type: boolean
      usgcb:
        description: Whether policy scanning for USGCB benchmarks is allowed.
        example: true
        type: boolean
    type: object
  LicenseReporting:
    description: ''
    properties:
      advanced:
        description: Whether advanced reporting is available.
        example: true
        type: boolean
      customizableCSVExport:
        description: Whether customizable CSV Export is available.
        example: true
        type: boolean
      pci:
        description: Whether PCI reporting is available.
        example: true
        type: boolean
    type: object
  LicenseScanning:
    description: ''
    properties:
      discovery:
        description: Whether discovery scanning may be used.
        example: true
        type: boolean
      policy:
        $ref: '#/definitions/LicensePolicyScanning'
        description: Details as to whether policy scanning and what benchmarks are
          available.
        example: 'true'
      scada:
        description: Whether SCADA scanning may be used.
        example: true
        type: boolean
      virtual:
        description: Whether virtual scanning may be used.
        example: true
        type: boolean
      webApplication:
        description: Whether web scanning may be used.
        example: true
        type: boolean
    type: object
  Link:
    description: ''
    properties:
      href:
        description: 'A hypertext reference, which is either a URI (see <a target="_blank"
          href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>) or URI template
          (see <a target="_blank" href="https://tools.ietf.org/html/rfc6570">RFC 6570</a>). '
        example: https://hostname:3780/api/3/...
        type: string
      rel:
        description: The link relation type. This value is one from the <a target="_blank"
          href="https://tools.ietf.org/html/rfc5988#section-6.2">Link Relation Type
          Registry</a> or is the type of resource being linked to.
        example: self
        type: string
    type: object
  Links:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  LocalePreferences:
    description: ''
    properties:
      default:
        description: The default language to use. The format is a <a target="_blank"
          href="https://tools.ietf.org/html/bcp47">IETF BCP 47</a> language tag.
        example: ''
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      reports:
        description: The language to use to generate reports. The format is a <a target="_blank"
          href="https://tools.ietf.org/html/bcp47">IETF BCP 47</a> language tag.
        example: ''
        type: string
    type: object
  MalwareKit:
    description: ''
    properties:
      id:
        description: The identifier of the malware kit.
        example: 152
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the malware kit.
        example: Alpha Pack
        type: string
      popularity:
        description: 'The name of the malware kit. One of: `"Rare"`, `"Uncommon"`,
          `"Occasional"`, `"Common"`, `"Popular"`, `"Favored"`, `"Unknown"`'
        example: Rare
        type: string
    type: object
  MatchedSolution:
    description: ''
    properties:
      additionalInformation:
        $ref: '#/definitions/AdditionalInformation'
        description: Additional information or resources that can assist in applying
          the remediation.
        example: ''
      appliesTo:
        description: The systems or software the solution applies to.
        example: libexpat1 on Ubuntu Linux
        type: string
      confidence:
        description: The confidence of the matching process for the solution.
        enum:
        - exact
        - partial
        - none
        example: ''
        type: string
      estimate:
        description: 'The estimated duration to apply the solution, in ISO 8601 format.
          For example: `"PT5M"`.'
        example: PT10M
        type: string
      id:
        description: The identifier of the solution.
        example: ubuntu-upgrade-libexpat1
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      matches:
        description: The raw matches that were performed in order to select the best
          solution(s).
        items:
          $ref: '#/definitions/SolutionMatch'
        type: array
      steps:
        $ref: '#/definitions/Steps'
        description: The steps required to remediate the vulnerability.
        example: ''
      summary:
        $ref: '#/definitions/Summary'
        description: The summary of the solution.
        example: ''
      type:
        description: 'The type of the solution. One of: `"Configuration"`, `"Rollup
          patch"`, `"Patch"`'
        enum:
        - configuration
        - rollup-patch
        - patch
        - unknown
        example: configuration
        type: string
    type: object
  MemoryFree:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 45006848
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 42.9 MB
        type: string
    type: object
  MemoryInfo:
    description: ''
    properties:
      free:
        $ref: '#/definitions/MemoryFree'
        description: Free memory.
        example: ''
      total:
        $ref: '#/definitions/MemoryTotal'
        description: Total memory usage.
        example: ''
    type: object
  MemoryTotal:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 17179869184
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 16 GB
        type: string
    type: object
  NotFoundError:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '404'
        example: '404'
        type: string
    required:
    - status
    type: object
  OperatingSystem:
    description: ''
    properties:
      architecture:
        description: The architecture of the operating system.
        example: x86
        type: string
      configurations:
        description: Configuration key-values pairs enumerated on the operating system.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      cpe:
        $ref: '#/definitions/OperatingSystemCpe'
        description: The Common Platform Enumeration (CPE) of the operating system.
        example: ''
      description:
        description: The description of the operating system (containing vendor, family,
          product, version and architecture in a single string).
        example: Microsoft Windows Server 2008 Enterprise Edition SP1
        type: string
      family:
        description: The family of the operating system.
        example: Windows
        type: string
      id:
        description: The identifier of the operating system.
        example: 35
        format: int64
        type: integer
      product:
        description: The name of the operating system.
        example: Windows Server 2008 Enterprise Edition
        type: string
      systemName:
        description: A combination of vendor and family (with redundancies removed),
          suitable for grouping.
        example: Microsoft Windows
        type: string
      type:
        description: The type of operating system.
        example: Workstation
        type: string
      vendor:
        description: The vendor of the operating system.
        example: Microsoft
        type: string
      version:
        description: The version of the operating system.
        example: SP1
        type: string
    type: object
  OperatingSystemCpe:
    description: ''
    properties:
      edition:
        description: 'Edition-related terms applied by the vendor to the product. '
        example: enterprise
        type: string
      language:
        description: Defines the language supported in the user interface of the product
          being described. The format is of the language tag adheres to <a target="_blank"
          href="https://tools.ietf.org/html/rfc5646">RFC5646</a>.
        example: ''
        type: string
      other:
        description: 'Captures any other general descriptive or identifying information
          which is vendor- or product-specific and which does not logically fit in
          any other attribute value. '
        example: ''
        type: string
      part:
        description: A single letter code that designates the particular platform
          part that is being identified.
        enum:
        - o
        - a
        - h
        example: o
        type: string
      product:
        description: the most common and recognizable title or name of the product.
        example: windows_server_2008
        type: string
      swEdition:
        description: 'Characterizes how the product is tailored to a particular market
          or class of end users. '
        example: ''
        type: string
      targetHW:
        description: 'Characterize the instruction set architecture on which the product
          operates. '
        example: ''
        type: string
      targetSW:
        description: Characterize the software computing environment within which
          the product operates.
        example: ''
        type: string
      update:
        description: Vendor-specific alphanumeric strings characterizing the particular
          update, service pack, or point release of the product.
        example: sp1
        type: string
      v2.2:
        description: The full CPE string in the <a target="_blank" href="https://cpe.mitre.org/files/cpe-specification_2.2.pdf">CPE
          2.2</a> format.
        example: cpe:/o:microsoft:windows_server_2008:-:sp1:enterprise
        type: string
      v2.3:
        description: The full CPE string in the <a target="_blank" href="http://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf">CPE
          2.3</a> format.
        example: cpe:2.3:o:microsoft:windows_server_2008:-:sp1:enterprise:*:*:*:*:*
        type: string
      vendor:
        description: The person or organization that manufactured or created the product.
        example: microsoft
        type: string
      version:
        description: Vendor-specific alphanumeric strings characterizing the particular
          release version of the product.
        example: '-'
        type: string
    required:
    - part
    type: object
  PCI:
    description: ''
    properties:
      adjustedCVSSScore:
        description: The CVSS score of the vulnerability, adjusted for PCI rules and
          exceptions, on a scale of 0-10.
        example: 4
        format: int32
        type: integer
      adjustedSeverityScore:
        description: The severity score of the vulnerability, adjusted for PCI rules
          and exceptions, on a scale of 0-10.
        example: 3
        format: int32
        type: integer
      fail:
        description: Whether if present on a host this vulnerability would cause a
          PCI failure. `true` if "status" is `"Fail"`, `false` otherwise.
        example: true
        type: boolean
      specialNotes:
        description: Any special notes or remarks about the vulnerability that pertain
          to PCI compliance.
        example: ''
        type: string
      status:
        description: 'The PCI compliance status of the vulnerability. One of: `"Pass"`,
          `"Fail"`.'
        example: Fail
        type: string
    type: object
  PageInfo:
    description: ''
    properties:
      number:
        description: The index (zero-based) of the current page returned.
        example: 6
        format: int64
        type: integer
      size:
        description: The maximum size of the page returned.
        example: 10
        format: int64
        type: integer
      totalPages:
        description: The total number of pages available.
        example: 13
        format: int64
        type: integer
      totalResources:
        description: The total number of resources available across all pages.
        example: 123
        format: int64
        type: integer
    type: object
  PageOf«AssetGroup»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/AssetGroup'
        type: array
    type: object
  PageOf«AssetPolicyItem»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/AssetPolicyItem'
        type: array
    type: object
  PageOf«AssetPolicy»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/AssetPolicy'
        type: array
    type: object
  PageOf«Asset»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Asset'
        type: array
    type: object
  PageOf«DiscoveryConnection»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/DiscoveryConnection'
        type: array
    type: object
  PageOf«Exploit»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Exploit'
        type: array
    type: object
  PageOf«GlobalScan»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/GlobalScan'
        type: array
    type: object
  PageOf«MalwareKit»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/MalwareKit'
        type: array
    type: object
  PageOf«OperatingSystem»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/OperatingSystem'
        type: array
    type: object
  PageOf«PolicyAsset»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyAsset'
        type: array
    type: object
  PageOf«PolicyControl»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyControl'
        type: array
    type: object
  PageOf«PolicyGroup»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyGroup'
        type: array
    type: object
  PageOf«PolicyItem»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyItem'
        type: array
    type: object
  PageOf«PolicyOverride»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyOverride'
        type: array
    type: object
  PageOf«PolicyRule»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/PolicyRule'
        type: array
    type: object
  PageOf«Policy»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Policy'
        type: array
    type: object
  PageOf«Report»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Report'
        type: array
    type: object
  PageOf«Scan»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Scan'
        type: array
    type: object
  PageOf«Site»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Site'
        type: array
    type: object
  PageOf«Software»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Software'
        type: array
    type: object
  PageOf«Tag»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Tag'
        type: array
    type: object
  PageOf«User»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/User'
        type: array
    type: object
  PageOf«VulnerabilityCategory»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/VulnerabilityCategory'
        type: array
    type: object
  PageOf«VulnerabilityCheck»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/VulnerabilityCheck'
        type: array
    type: object
  PageOf«VulnerabilityException»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/VulnerabilityException'
        type: array
    type: object
  PageOf«VulnerabilityFinding»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/VulnerabilityFinding'
        type: array
    type: object
  PageOf«VulnerabilityReference»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/VulnerabilityReference'
        type: array
    type: object
  PageOf«Vulnerability»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      page:
        $ref: '#/definitions/PageInfo'
        description: The details of pagination indicating which page was returned,
          and how the remaining pages can be retrieved.
        example: ''
      resources:
        description: The page of resources returned.
        items:
          $ref: '#/definitions/Vulnerability'
        type: array
    type: object
  Policy:
    description: ''
    properties:
      enabled:
        description: The identifiers of the policies enabled to be checked during
          a scan. No policies are enabled by default.
        items:
          format: int64
          type: integer
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      recursiveWindowsFSSearch:
        description: Whether recursive windows file searches are enabled, if your
          internal security practices require this capability. Recursive file searches
          can increase scan times by several hours, depending on the number of files
          and other factors, so this setting is disabled for Windows systems by default.
          Defaults to `false`.
        example: false
        type: boolean
      storeSCAP:
        description: Whether Asset Reporting Format (ARF) results are stored. If you
          are required to submit reports of your policy scan results to the U.S. government
          in ARF for SCAP certification, you will need to store SCAP data so that
          it can be exported in this format. Note that stored SCAP data can accumulate
          rapidly, which can have a significant impact on file storage. Defaults to
          `false`.
        example: false
        type: boolean
    type: object
  PolicyAsset:
    description: ''
    properties:
      hostname:
        description: The primary host name (local or FQDN) of the asset.
        example: ''
        type: string
      id:
        description: The identifier of the asset.
        example: ''
        format: int64
        type: integer
      ip:
        description: The primary IPv4 or IPv6 address of the asset.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      os:
        $ref: '#/definitions/OperatingSystem'
        description: The full description of the operating system of the asset.
        example: ''
      status:
        description: 'The overall compliance status of the asset. '
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
    type: object
  PolicyBenchmark:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the policy's benchmark.
        example: ''
        type: string
      title:
        description: The title of the policy benchmark.
        example: ''
        type: string
      version:
        description: The version number of the benchmark that includes the policy.
        example: ''
        type: string
    type: object
  PolicyControl:
    description: ''
    properties:
      cceItemId:
        description: The identifier of the CCE item.
        example: ''
        type: string
      ccePlatform:
        description: The platform of the CCE.
        example: ''
        type: string
      controlName:
        description: The name of the control mapping.
        example: ''
        type: string
      id:
        description: The textual representation of the control identifier.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      publishedDate:
        description: The published date of the control mapping.
        example: ''
        format: int64
        type: integer
    type: object
  PolicyGroup:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/AssetPolicyAssessment'
        description: A summary of asset compliance.
        example: ''
      benchmark:
        $ref: '#/definitions/PolicyBenchmark'
        description: Information about the policy benchmark.
        example: ''
      description:
        description: A description of the policy group.
        example: ''
        type: string
      id:
        description: The textual representation of the policy group identifier.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the policy group.
        example: ''
        type: string
      policy:
        $ref: '#/definitions/PolicyMetadataResource'
        description: Information about the policy.
        example: ''
      scope:
        description: The textual representation of the policy group scope. Policy
          groups that are automatically available have `"Built-in"` scope, whereas
          policy groups created by users have scope as `"Custom"`.
        example: ''
        type: string
      status:
        description: The overall compliance status of the policy group.
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
      surrogateId:
        description: The identifier of the policy group.
        example: ''
        format: int64
        type: integer
      title:
        description: The title of the policy group as visible to the user.
        example: ''
        type: string
    type: object
  PolicyItem:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/AssetPolicyAssessment'
        description: A summary of asset compliance.
        example: ''
      description:
        description: A description of the policy rule or group.
        example: ''
        type: string
      hasOverride:
        description: 'A flag indicating whether the policy rule has an active override
          applied to it. This field only applies to resources representing policy
          rules. '
        example: false
        type: boolean
      id:
        description: The identifier of the policy rule or group.
        example: ''
        format: int64
        type: integer
      isUnscored:
        description: A flag indicating whether the policy rule has a role of `"unscored"`.
          This field only applies to resources representing policy rules.
        example: false
        type: boolean
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the policy rule or group.
        example: ''
        type: string
      policy:
        $ref: '#/definitions/PolicyMetadataResource'
        description: Information about the policy.
        example: ''
      rules:
        $ref: '#/definitions/PolicyRuleAssessmentResource'
        description: A summary of rule compliance for multiple policy rules. This
          field only applies to resources representing policy groups.
        example: ''
      scope:
        description: The textual representation of the policy rule/group scope. Policy
          rules or groups that are automatically available have `"Built-in"` scope,
          whereas policy rules or groups created by users have scope as `"Custom"`.
        example: ''
        type: string
      status:
        description: The overall compliance status of the policy rule or group.
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
      title:
        description: The title of the policy rule, or group, as visible to the user.
        example: ''
        type: string
      type:
        description: Indicates whether the resource represents either a policy rule
          or group.
        enum:
        - rule
        - group
        example: ''
        type: string
    type: object
  PolicyMetadataResource:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the policy.
        example: ''
        type: string
      title:
        description: The title of the policy as visible to the user.
        example: ''
        type: string
      version:
        description: The version of the policy.
        example: ''
        type: string
    type: object
  PolicyOverride:
    description: ''
    properties:
      expires:
        description: The date the policy override is set to expire. Date is represented
          in ISO 8601 format.
        example: ''
        type: string
      id:
        description: The identifier of the policy override.
        example: ''
        format: int64
        readOnly: true
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      review:
        $ref: '#/definitions/PolicyOverrideReviewer'
        description: Details regarding the review and/or approval of the policy override.
        example: ''
        readOnly: true
      scope:
        $ref: '#/definitions/PolicyOverrideScope'
        description: The scope of the policy override. Indicates which assets' policy
          compliance results are to be affected by the override.
        example: ''
      state:
        description: "The state of the policy override. Can be one of the following\
          \ values: \n| Value            | Description                           \
          \                                              | Affects Compliance Results\
          \ | \n| ---------------- | -----------------------------------------------------------------------------------\
          \ |:--------------------------:| \n| `\"deleted\"`      | The policy override\
          \ has been deleted.                                               |    \
          \                        | \n| `\"expired\"`      | The policy override\
          \ had an expiration date and it has expired.                      |    \
          \                        | \n| `\"approved\"`     | The policy override\
          \ was submitted and approved.                                     | &check;\
          \                    | \n| `\"rejected\"`     | The policy override was\
          \ rejected by the reviewer.                                   |        \
          \                    | \n| `\"under-review\"` | The policy override was\
          \ submitted but not yet approved or rejected by the reviewer. |        \
          \                    | \n"
        example: ''
        type: string
      submit:
        $ref: '#/definitions/PolicyOverrideSubmitter'
        description: Details regarding the submission of the policy override.
        example: ''
    required:
    - scope
    - state
    - submit
    type: object
  PolicyOverrideReviewer:
    description: ''
    properties:
      comment:
        description: A comment from the reviewer detailing the review. Cannot exceed
          1024 characters.
        example: ''
        readOnly: true
        type: string
      date:
        description: The date the review took place.
        example: ''
        readOnly: true
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The identifier of the user that reviewed the policy override.
        example: ''
        readOnly: true
        type: string
      user:
        description: The login name of the user that reviewed the policy override.
        example: ''
        format: int32
        readOnly: true
        type: integer
    type: object
  PolicyOverrideScope:
    description: ''
    properties:
      asset:
        description: The identifier of the asset whose compliance results are to be
          overridden. Property is required if the property `scope` is set to either
          `"specific-asset"` or `"specific-asset-until-next-scan"`.
        example: ''
        format: int64
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      newResult:
        description: The new policy rule result after the override is applied.
        enum:
        - pass
        - fail
        - not-applicable
        - fixed
        example: ''
        type: string
      originalResult:
        description: The original policy rule result before the override was applied.
          This property only applies to overrides with a scope of either `"specific-asset"`
          or `"specific-asset-until-next-scan"`.
        enum:
        - pass
        - fail
        - error
        - unknown
        - not-applicable
        - not-checked
        - not-selected
        - informational
        - fixed
        example: ''
        readOnly: true
        type: string
      rule:
        description: The identifier of the policy rule whose compliance results are
          to be overridden.
        example: ''
        format: int64
        type: integer
      type:
        description: "The scope of assets affected by the policy override. Can be\
          \ one of the following values: \n| Value                              |\
          \ Description                                                          \
          \                                                                      \
          \                 | \n| ---------------------------------- | -----------------------------------------------------------------------------------------------------------------------------------------------------------\
          \ | \n| `\"all-assets\"`                     | Overrides the compliance\
          \ result of all assets evaluated with the specified policy rule.       \
          \                                                              | \n| `\"\
          specific-asset\"`                 | Overrides the compliance result of a\
          \ single asset evaluated with the specified policy rule.               \
          \                                                  | \n| `\"specific-asset-until-next-scan\"\
          ` | Overrides the compliance result of a single asset evaluated with the\
          \ specified policy rule until the next time asset is evaluated against that\
          \ policy rule. | \n"
        example: ''
        type: string
    required:
    - newResult
    - rule
    - type
    type: object
  PolicyOverrideSubmitter:
    description: ''
    properties:
      comment:
        description: A comment from the submitter as to why the policy override was
          submitted. Cannot exceed 1024 characters.
        example: ''
        type: string
      date:
        description: The date the policy override was submitted.
        example: ''
        readOnly: true
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The login name of the user that submitted the policy override.
        example: ''
        readOnly: true
        type: string
      user:
        description: The identifier of the user that submitted the policy override.
        example: ''
        format: int32
        readOnly: true
        type: integer
    required:
    - comment
    type: object
  PolicyRule:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/AssetPolicyAssessment'
        description: A summary of asset compliance.
        example: ''
      benchmark:
        $ref: '#/definitions/PolicyBenchmark'
        description: Information about the policy benchmark.
        example: ''
      description:
        description: A description of the rule.
        example: ''
        type: string
      id:
        description: The textual representation of the policy rule identifier.
        example: ''
        type: string
      isCustom:
        description: A flag indicating whether the policy rule is custom.
        example: false
        type: boolean
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the rule.
        example: ''
        type: string
      role:
        description: The role of the policy rule. It's value determines how it's results
          affect compliance.
        enum:
        - full
        - unscored
        - unchecked
        example: ''
        type: string
      scope:
        description: The textual representation of the policy rule scope. Policy rules
          that are automatically available have `"Built-in"` scope, whereas policy
          rules created by users have scope as `"Custom"`.
        example: ''
        type: string
      status:
        description: The overall compliance status of the policy rule.
        enum:
        - PASS
        - FAIL
        - NOT_APPLICABLE
        example: ''
        type: string
      surrogateId:
        description: The identifier of the policy rule.
        example: ''
        format: int64
        type: integer
      title:
        description: The title of the policy rule as visible to the user.
        example: ''
        type: string
    type: object
  PolicyRuleAssessmentResource:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      total:
        description: The total number of policy rules.
        example: ''
        format: int32
        type: integer
      totalFailed:
        description: The total number of policy rules that are not compliant against
          all assets.
        example: ''
        format: int32
        type: integer
      totalNotApplicable:
        description: The total number of policy rules that are not applicable against
          all assets.
        example: ''
        format: int32
        type: integer
      totalPassed:
        description: The total number of policy rules that are compliant against all
          assets.
        example: ''
        format: int32
        type: integer
      unscored:
        description: The total number of policy rules that have a role of `"unscored"`.
        example: ''
        format: int32
        type: integer
    type: object
  PolicySummaryResource:
    description: ''
    properties:
      decreasedCompliance:
        description: The total number of policies whose overall compliance has decreased
          between the last two scans of all assets. The list of scanned policies is
          based on the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      increasedCompliance:
        description: The total number of policies whose overall compliance has increased
          between the last two scans of all assets. The list of scanned policies is
          based on the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      numberOfPolicies:
        description: The total number of policies available in the Security Console.
        example: ''
        format: int32
        type: integer
      overallCompliance:
        description: The ratio of compliant rules to the total number of rules across
          all policies.
        example: ''
        format: float
        type: number
      scannedPolicies:
        description: The total number of policies that were evaluated against assets
          and have applicable results. The assets considered in the calculation are
          based on the user's list of accessible assets.
        example: ''
        format: int32
        type: integer
    type: object
  Privileges:
    description: ''
    properties:
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        items:
          enum:
          - all-permissions
          - create-reports
          - configure-global-settings
          - manage-sites
          - manage-tags
          - manage-static-asset-groups
          - manage-dynamic-asset-groups
          - manage-scan-templates
          - manage-report-templates
          - manage-scan-engines
          - submit-vulnerability-exceptions
          - approve-vulnerability-exceptions
          - delete-vulnerability-exceptions
          - create-tickets
          - close-tickets
          - assign-ticket-assignee
          - manage-site-access
          - manage-asset-group-access
          - manage-report-access
          - use-restricted-report-sections
          - manage-policies
          - view-asset-group-asset-data
          - manage-asset-group-assets
          - view-site-asset-data
          - specify-site-metadata
          - purge-site-asset-data
          - specify-scan-targets
          - assign-scan-engine
          - assign-scan-template
          - manage-site-credentials
          - manage-scan-alerts
          - schedule-automatic-scans
          - start-unscheduled-scans
          type: string
        type: array
    type: object
  RangeResource:
    description: ''
    properties:
      every:
        description: If `from` is a custom date the interval amount between reporting
          periods.
        enum:
        - day
        - month
        - year
        example: day
        type: string
      from:
        description: The start date of the trend, which can either be a duration or
          a specific date and time.
        enum:
        - P1Y
        - P6M
        - P3M
        - P1M
        - <date>
        example: ''
        type: string
      interval:
        description: 'If `from` is a custom date the interval between reporting periods. '
        example: 7
        format: int32
        type: integer
      to:
        description: The end date of the trend (empty if `from` is a duration).
        example: ''
        type: string
    type: object
  ReferenceWithEndpointIDLink:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      port:
        description: The port of the service.
        example: 22
        format: int32
        type: integer
      protocol:
        description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        example: tcp
        type: string
    type: object
  ReferenceWithReportIDLink:
    description: ''
    properties:
      id:
        description: The identifier of the report instance.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«AlertID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«AssetID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«EngineID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«ScanScheduleID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«SiteID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«TagID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferenceWith«UserID,Link»:
    description: ''
    properties:
      id:
        description: The identifier of the resource.
        example: <id>
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReferencesWith«AssetGroupID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReferencesWith«AssetID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int64
          type: integer
        type: array
    type: object
  ReferencesWith«EngineID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReferencesWith«ReferenceWithEndpointIDLink,ServiceLink»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/ServiceLink'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          $ref: '#/definitions/ReferenceWithEndpointIDLink'
        type: array
    type: object
  ReferencesWith«SiteID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReferencesWith«SolutionNaturalID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          type: string
        type: array
    type: object
  ReferencesWith«TagID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReferencesWith«UserID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReferencesWith«VulnerabilityCheckID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          type: string
        type: array
    type: object
  ReferencesWith«VulnerabilityCheckTypeID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          type: string
        type: array
    type: object
  ReferencesWith«VulnerabilityNaturalID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          type: string
        type: array
    type: object
  ReferencesWith«WebApplicationID,Link»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          format: int64
          type: integer
        type: array
    type: object
  RemediationResource:
    description: ''
    properties:
      solutions:
        description: The number of remediations to display.
        example: 25
        format: int32
        minimum: 1
        type: integer
      sort:
        description: The attribute to prioritize remediation impact. Only supported
          for the `prioritized-remediations` and `prioritized-remediations-with-details`
          templates.
        enum:
        - assets
        - vulnerabilities
        - malware_kits
        - exploits
        - riskscore
        example: ''
        type: string
    type: object
  Repeat:
    description: ''
    properties:
      dayOfWeek:
        description: The day of the week the scheduled task should repeat. This property
          only applies to schedules with a `every` value of `"day-of-month"`.
        example: ''
        type: string
      every:
        description: "The frequency schedule repeats. Each value represents a different\
          \ unit of time and is used in conjunction with the property `interval`.\
          \ For example, a schedule can repeat hourly, daily, monthly, etc. The following\
          \ table describes each supported value: \n| Value | Description | \n| ----------\
          \ | ---------------- | \n| hour | Specifies the schedule repeats in hourly\
          \ increments. | \n| day | Specifies the schedule repeats in daily increments.\
          \ | \n| week | Specifies the schedule repeats in weekly increments. | \n\
          | date-of-month | Specifies the schedule repeats nth day of the `interval`\
          \ month. Requires the property `dateOfMonth` to be specified. For example,\
          \ if `dateOfMonth` is `17` and the `interval` is `2`, then the schedule\
          \ will repeat every 2 months on the 17th day of the month. | \n| day-of-month\
          \ | Specifies the schedule repeats on a monthly interval but instead of\
          \ a specific date being specified, the day of the week and week of the month\
          \ are specified. Requires the properties `dayOfWeek` and `weekOfMonth` to\
          \ be specified. For example, if `dayOfWeek` is `\"friday\"`, `weekOfMonth`\
          \ is `3`, and the `interval` is `4`, then the schedule will repeat every\
          \ 4 months on the 3rd Friday of the month. | \n"
        example: date-of-month
        type: string
      interval:
        description: The interval time the schedule should repeat. The is depends
          on the value set in `every`. For example, if the value in property `every`
          is set to `"day"` and `interval` is set to `2`, then the schedule will repeat
          every 2 days.
        example: 1
        format: int32
        minimum: 1
        type: integer
      lastDayOfMonth:
        description: Whether to run the scheduled task on the last day of the month.
        example: false
        type: boolean
      weekOfMonth:
        description: The week of the month the scheduled task should repeat. For This
          property only applies to schedules with a `every` value of `"day-of-month"`.
          Each week of the month is counted in 7-day increments. For example, week
          1 consists of days 1-7 of the month while week 2 consists of days 8-14 of
          the month and so forth.
        example: ''
        format: int32
        maximum: 6
        minimum: 1
        type: integer
    required:
    - every
    - interval
    type: object
  Report:
    description: ''
    properties:
      baseline:
        description: If the template is `baseline-comparison` or `executive-overview`
          the baseline scan to compare against. This can be the `first` scan, the
          `previous` scan, or a scan as of a specified date. Defaults to `previous`.
        example: ''
        type: object
      bureau:
        description: The name of the bureau for a CyberScope report. Only used when
          the format is `"cyberscope-xml"`.
        example: Bureau
        type: string
      component:
        description: The name of the component for a CyberScope report. Only used
          when the format is `"cyberscope-xml"`.
        example: Component
        type: string
      database:
        $ref: '#/definitions/ReportConfigDatabaseResource'
        description: Configuration for database export. Only used when the format
          is `"database-export"`.
        example: ''
      email:
        $ref: '#/definitions/ReportEmail'
        description: Email distribution settings for the report.
        example: ''
        readOnly: true
      enclave:
        description: The name of the enclave for a CyberScope report. Only used when
          the format is `"cyberscope-xml"`.
        example: Enclave
        type: string
      filters:
        $ref: '#/definitions/ReportConfigFiltersResource'
        description: "Filters applied to the contents of the report. The supported\
          \ filters for a report vary \nby format and template. \n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">categories</span>\
          \ <span class=\"param-type complex\">Object</span> \n<div class=\"redoc-markdown-block\"\
          >The vulnerability categories to include or exclude in the report. Only\
          \ included or excluded may be specified, not both.</div>\n</div> \n<div\
          \ class=\"properties nested\"> \n<div class=\"property-info\"> \n<span class=\"\
          property-name\">included</span> <span class=\"param-type param-array-format\
          \ integer\">Array[string]</span> \n<div class=\"redoc-markdown-block\">The\
          \ identifiers of the vulnerability categories to included in the report.</div>\
          \ \n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >excluded</span> <span class=\"param-type param-array-format integer\">Array[string]</span>\
          \ \n<div class=\"redoc-markdown-block\">The identifiers of the vulnerability\
          \ categories to exclude in the report.</div> \n</div> \n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">severity</span> <span class=\"\
          param-type\">string</span> \n<div class=\"param-enum\"> \n<span class=\"\
          param-enum-value string\">\"all\"</span> \n<span class=\"param-enum-value\
          \ string\">\"critical\"</span> \n<span class=\"param-enum-value string\"\
          >\"critical-and-severe\"</span> \n</div> \n<div class=\"redoc-markdown-block\"\
          >The vulnerability severities to include in the report.</div>\n</div> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">statuses</span>\
          \ <span class=\"param-type param-array-format integer\">Array[string]</span>\
          \ \n<div class=\"param-enum\"> \n<span class=\"param-enum-value string\"\
          >\"vulnerable\"</span> \n<span class=\"param-enum-value string\">\"vulnerable-version\"\
          </span> \n<span class=\"param-enum-value string\">\"potentially-vulnerable\"\
          </span> \n<span class=\"param-enum-value string\">\"vulnerable-and-validated\"\
          </span> \n</div> \n<div class=\"redoc-markdown-block\">The vulnerability\
          \ statuses to include in the report. If <code>\"vulnerable-and-validated\"\
          </code> is selected \nno other values can be specified.\n</div> \n</div>\
          \ \n</div>\n\nThe following filter elements may be defined for non-templatized\
          \ report formats: \n| Format                                | Categories\
          \     | Severity   | Statuses   | \n| -------------------------------------\
          \ |:--------------:|:----------:|:----------:| \n| `arf-xml`           \
          \                  |                |            |            | \n| `csv-export`\
          \                          | &check;        | &check;    | &check;    |\
          \ \n| `cyberscope-xml`                      |                |         \
          \   |            | \n| `database-export`                     |         \
          \       |            |            | \n| `nexpose-simple-xml`           \
          \       | &check;        | &check;    |            | \n| `oval-xml`    \
          \                        |                |            |            | \n\
          | `qualys-xml`                          | &check;        | &check;    |\
          \            | \n| `scap-xml`                            | &check;     \
          \   | &check;    |            | \n| `sql-query`                        \
          \   | &check;        | &check;    | &check;    | \n| `xccdf-csv`       \
          \                    |                |            |            | \n| `xccdf-xml`\
          \                           | &check;        | &check;    |            |\
          \ \n| `xml-export`                          | &check;        | &check; \
          \   | &check;    | \n| `xml-export-v2`                       | &check; \
          \       | &check;    | &check;    | \n\nThe following filter elements may\
          \ be defined for templatized report formats: \n| Template              \
          \                  | Categories     | Severity   | Statuses   | \n| ---------------------------------------\
          \ |:--------------:|:----------:|:----------:| \n| `audit-report`      \
          \                    | &check;        | &check;    |            | \n| `baseline-comparison`\
          \                   |                |            |            | \n| `basic-vulnerability-check-results`\
          \     | &check;        | &check;    | &check;    | \n| `executive-overview`\
          \                    |                |            |            | \n| `highest-risk-vulns`\
          \                    |                |            |            | \n| `pci-attestation-v12`\
          \                   |                |            |            | \n| `pci-executive-summary-v12`\
          \             |                |            |            | \n| `pci-vuln-details-v12`\
          \                  |                |            |            | \n| `policy-details`\
          \                        | &check;        | &check;    | &check;    | \n\
          | `policy-eval`                           |                |           \
          \ |            | \n| `policy-summary`                        | &check; \
          \       | &check;    | &check;    | \n| `prioritized-remediations`     \
          \         | &check;        | &check;    | &check;    | \n| `prioritized-remediations-with-details`\
          \ | &check;        | &check;    | &check;    | \n| `r7-discovered-assets`\
          \                  | &check;        | &check;    | &check;    | \n| `r7-vulnerability-exceptions`\
          \           | &check;        | &check;    | &check;    | \n| `remediation-plan`\
          \                      | &check;        | &check;    |            | \n|\
          \ `report-card`                           | &check;        | &check;   \
          \ |            | \n| `risk-scorecard`                        | &check; \
          \       | &check;    | &check;    | \n| `rule-breakdown-summary`       \
          \         | &check;        | &check;    | &check;    | \n| `top-policy-remediations`\
          \               | &check;        | &check;    | &check;    | \n| `top-policy-remediations-with-details`\
          \  | &check;        | &check;    | &check;    | \n| `top-riskiest-assets`\
          \                   | &check;        | &check;    | &check;    | \n| `top-vulnerable-assets`\
          \                 | &check;        | &check;    | &check;    | \n| `vulnerability-trends`\
          \                  | &check;        | &check;    | &check;    | \n"
        example: ''
      format:
        description: The output format of the report. The format will restrict the
          available templates and parameters that can be specified.
        example: pdf
        type: string
      frequency:
        $ref: '#/definitions/ReportFrequency'
        description: The recurring frequency with which to generate the report.
        example: ''
      id:
        description: The identifier of the report.
        example: 17
        format: int32
        readOnly: true
        type: integer
      language:
        description: The locale (language) in which the report is generated
        example: en-US
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the report.
        example: Monthly Corporate Site Summary
        type: string
      organization:
        description: The organization used for a XCCDF XML report. Only used when
          the format is `"xccdf-xml"`.
        example: Acme, Inc.
        type: string
      owner:
        description: The identifier of the report owner.
        example: 1
        format: int32
        type: integer
      policies:
        description: If the template is `rule-breakdown-summary`, `top-policy-remediations`,
          or `top-policy-remediations-with-details` the identifiers of the policies
          to report against.
        items:
          format: int64
          type: integer
        type: array
      policy:
        description: The policy to report on. Only used when the format is `"oval-xml"`,
          `""xccdf-csv"`, or `"xccdf-xml"`.
        example: 789
        format: int64
        type: integer
      query:
        description: SQL query to run against the Reporting Data Model. Only used
          when the format is `"sql-query"`.
        example: SELECT * FROM dim_asset ORDER BY ip_address ASC
        type: string
      range:
        $ref: '#/definitions/RangeResource'
        description: If the template is `vulnerability-trends`, `r7-vulnerability-exceptions`,
          or `r7-discovered-assets` the date range to trend over.
        example: ''
      remediation:
        $ref: '#/definitions/RemediationResource'
        description: If the template is `prioritized-remediations`, `prioritized-remediations-with-details`,
          `top-policy-remediations`, or `top-policy-remediations-with-details` the
          remediation display settings.
        example: ''
      riskTrend:
        $ref: '#/definitions/RiskTrendResource'
        description: Configuration details for risk trending output.
        example: ''
      scope:
        $ref: '#/definitions/ReportConfigScopeResource'
        description: "The scope of the report. Scope is an object that has the following\
          \ properties that vary by format and template: \n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">assets</span>\
          \ <span class=\"param-type param-array-format integer\">Array[integer &lt;int32&gt;]</span>\
          \ \n<div class=\"redoc-markdown-block\">The identifiers of the assets to\
          \ report on.</div> \n</div> \n<div class=\"property-info\"> \n<span class=\"\
          property-name\">sites</span> <span class=\"param-type param-array-format\
          \ integer\">Array[integer &lt;int32&gt;]</span> \n<div class=\"redoc-markdown-block\"\
          >The identifiers of the sites to report on.</div> \n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">assetGroups</span> <span\
          \ class=\"param-type param-array-format integer\">Array[integer &lt;int32&gt;]</span>\
          \ \n<div class=\"redoc-markdown-block\">The identifiers of the asset to\
          \ report on.</div> \n</div> \n<div class=\"property-info\"> \n<span class=\"\
          property-name\">tags</span> <span class=\"param-type param-array-format\
          \ integer\">Array[integer &lt;int32&gt;]</span> \n<div class=\"redoc-markdown-block\"\
          >The identifiers of the tag to report on.</div> \n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">scan</span> <span class=\"\
          param-type param-array-format integer\">integer &lt;int32&gt;</span> \n\
          <div class=\"redoc-markdown-block\">The identifier of the scan to report\
          \ on.</div> \n</div> \n</div>\n\nThe following scope elements may be defined\
          \ for non-templatized report formats: \n| Format                       \
          \         | Assets     | Sites   | Asset Groups | Tags    | Scan      |\
          \ \n| ------------------------------------- |:----------:|:-------:|:------------:|:-------:|:---------:|\
          \ \n| `arf-xml`                             | &check;    | &check; | &check;\
          \      | &check; |           | \n| `csv-export`                        \
          \  | &check;    | &check; | &check;      | &check; | &check;   | \n| `cyberscope-xml`\
          \                      | &check;    | &check; | &check;      | &check; |\
          \ &check;   | \n| `database-export`                     |            | &check;\
          \ |              |         |           | \n| `nexpose-simple-xml`      \
          \            | &check;    | &check; | &check;      | &check; | &check; \
          \  | \n| `oval-xml`                            | &check;    | &check; |\
          \ &check;      | &check; |           | \n| `qualys-xml`                \
          \          | &check;    | &check; | &check;      | &check; | &check;   |\
          \ \n| `scap-xml`                            | &check;    | &check; | &check;\
          \      | &check; | &check;   | \n| `sql-query`                         \
          \  | &check;    | &check; | &check;      | &check; | &check;   | \n| `xccdf-csv`\
          \                           | &check;    |         |              |    \
          \     |           | \n| `xccdf-xml`                           | &check;\
          \    | &check; | &check;      | &check; | &check;   | \n| `xml-export` \
          \                         | &check;    | &check; | &check;      | &check;\
          \ | &check;   | \n| `xml-export-v2`                       | &check;    |\
          \ &check; | &check;      | &check; | &check;   | \n\nThe following scope\
          \ elements may be defined for templatized report formats: \n| Template \
          \                                | Assets     | Sites   | Asset Groups |\
          \ Tags    | Scan    | \n| -----------------------------------------|:----------:|:-------:|:------------:|:-------:|:-------:|\
          \ \n| `audit-report`                           | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `baseline-comparison`         \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \n| `basic-vulnerability-check-results`      | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `executive-overview`          \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \n| `highest-risk-vulns`                     | &check;    | &check; |\
          \  &check;     | &check; |         | \n| `pci-attestation-v12`         \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `pci-executive-summary-v12`              | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `pci-vuln-details-v12`        \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `policy-details`                         | &check;    | &check; |\
          \  &check;     | &check; |         | \n| `policy-eval`                 \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \n| `policy-summary`                         | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `prioritized-remediations`    \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `prioritized-remediations-with-details`  | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `r7-discovered-assets`        \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `r7-vulnerability-exceptions`            | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `remediation-plan`            \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `report-card`                            | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `risk-scorecard`              \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \n| `rule-breakdown-summary`                 | &check;    | &check; |\
          \  &check;     | &check; |         | \n| `top-policy-remediations`     \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \n| `top-policy-remediations-with-details`   | &check;    | &check; |\
          \  &check;     | &check; |         | \n| `top-riskiest-assets`         \
          \           | &check;    | &check; |  &check;     | &check; | &check; |\
          \ \n| `top-vulnerable-assets`                  | &check;    | &check; |\
          \  &check;     | &check; | &check; | \n| `vulnerability-trends`        \
          \           | &check;    | &check; |  &check;     | &check; |         |\
          \ \nIf a report supports specifying a scan as the scope and a scan is specified,\
          \ no other scope elements may be defined. \nIn all other cases as many different\
          \ types of supported scope elements can be specified in any combination.\
          \ All \nreports except the `sql-query` format require at least one element\
          \ to be specified as the scope.\n"
        example: ''
      storage:
        $ref: '#/definitions/ReportStorage'
        description: The additional storage location and path.
        example: ''
      template:
        description: The template for the report (only required if the format is templatized).
        example: executive-overview
        type: string
      timezone:
        description: The timezone the report generates in, such as `"America/Los_Angeles"`.
        example: America/Los_Angeles
        type: string
      users:
        description: The identifiers of the users granted explicit access to the report.
        example: '7'
        items:
          format: int32
          type: integer
        type: array
      version:
        description: The version of the report Data Model to report against. Only
          used when the format is `"sql-query"`.
        example: 2.3.0
        type: string
    type: object
  ReportConfigCategoryFilters:
    description: ''
    properties:
      excluded:
        description: The vulnerability categories to exclude. Defaults to no categories.
        items:
          type: string
        type: array
      included:
        description: The vulnerability categories to include. Defaults to all categories.
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
    type: object
  ReportConfigDatabaseCredentialsResource:
    description: ''
    properties:
      password:
        description: ${report.config.database.credential.password.description}
        example: '******'
        readOnly: true
        type: string
      username:
        description: ${report.config.database.credential.username.description}
        example: admin
        type: string
    type: object
  ReportConfigDatabaseResource:
    description: ''
    properties:
      credentials:
        $ref: '#/definitions/ReportConfigDatabaseCredentialsResource'
        description: ${report.config.database.credentials.description}
        example: ''
        readOnly: true
      host:
        description: The database server host to export to.
        example: database.acme.com
        type: string
      name:
        description: The name of the database to export to.
        example: database
        type: string
      port:
        description: The database server port to export to.
        example: 3306
        format: int32
        type: integer
      vendor:
        description: The type of the database server.
        enum:
        - oracle
        - mssql
        - mysql
        example: mysql
        type: string
    type: object
  ReportConfigFiltersResource:
    description: ''
    properties:
      categories:
        $ref: '#/definitions/ReportConfigCategoryFilters'
        description: Vulnerability categories to include or exclude. Only `included`
          or `excluded` may be specified, but not both.
        example: ''
      severity:
        description: The vulnerability severities to include. Defaults to `all`.
        enum:
        - all
        - critical
        - critical-and-severe
        example: ''
        type: string
      statuses:
        description: The vulnerability statuses to include. Defaults to [ `vulnerable`,
          `vulnerable-version`, `potentially-vulnerable` ].
        items:
          enum:
          - vulnerable
          - vulnerable-version
          - potentially-vulnerable
          - vulnerable-and-validated
          type: string
        type: array
    type: object
  ReportConfigScopeResource:
    description: ''
    properties:
      assetGroups:
        description: ${report.config.asset.groups.description}
        items:
          format: int32
          type: integer
        type: array
      assets:
        description: ${report.config.assets.description}
        items:
          format: int64
          type: integer
        type: array
      scan:
        description: ${report.config.scans.description}
        example: 68
        format: int64
        type: integer
      sites:
        description: ${report.config.sites.description}
        items:
          format: int32
          type: integer
        type: array
      tags:
        description: ${report.config.tags.description}
        items:
          format: int32
          type: integer
        type: array
    type: object
  ReportEmail:
    description: ''
    properties:
      access:
        description: The format to distribute the report in when sending to users
          who have explicit access to the report.
        enum:
        - file
        - zip
        - url
        - none
        example: zip
        type: string
      additional:
        description: The format to distribute the report to additional recipients.
        enum:
        - file
        - zip
        - none
        example: file
        type: string
      additionalRecipients:
        description: The email address of additional recipients to distribute the
          report to.
        items:
          type: string
        type: array
      assetAccess:
        description: ${report.config.email.additional.asset.access.description}
        example: true
        type: boolean
      owner:
        description: The format to distribute the report to the owner.
        enum:
        - file
        - url
        - zip
        - none
        example: file
        type: string
      smtp:
        $ref: '#/definitions/ReportEmailSmtp'
        description: SMTP delivery settings.
        example: ''
    type: object
  ReportEmailSmtp:
    description: ''
    properties:
      global:
        description: Whether to use global SMTP settings. If enabled, `sender` and
          `relay` may not be specified.
        example: true
        type: boolean
      relay:
        description: SMTP relay host or IP address.
        example: mail.acme.com
        type: string
      sender:
        description: SMTP sender address.
        example: john_smith@acme.com
        type: string
    type: object
  ReportFilters:
    description: ''
    type: object
  ReportFrequency:
    description: ''
    properties:
      nextRuntimes:
        description: The next scheduled run-times for generation of the report when
          type is `schedule`.
        items:
          type: string
        readOnly: true
        type: array
      repeat:
        $ref: '#/definitions/ReportRepeat'
        description: How often the report generates when type is `schedule`.
        example: ''
      start:
        description: When the report starts generating when type is `schedule`.
        example: '2018-03-01T04:31:56Z'
        type: string
      type:
        description: The frequency to generate the report. `schedule` generates the
          report every scheduled time interval, and requires the `repeat` and `start`
          properties to be specified. `scan` generates the report after any scan of
          any element in the scope of the report. `none` does not generate the report
          automatically. Defaults to `none`.
        enum:
        - schedule
        - scan
        - none
        example: schedule
        type: string
    type: object
  ReportInstance:
    description: ''
    properties:
      generated:
        description: The date the report finished generation.
        example: '2018-06-01T18:56:03Z'
        type: string
      id:
        description: The identifier of the report instance.
        example: 5
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      size:
        $ref: '#/definitions/ReportSize'
        description: The size of the report, uncompressed.
        example: ''
      status:
        description: The status of the report generation process.
        enum:
        - aborted
        - failed
        - complete
        - running
        - unknown
        example: complete
        type: string
      uri:
        description: The URI of the report accessible through the web console. Refer
          to the `Download` relation hyperlink for a download URI.
        example: https://hostname:3780/reports/...
        type: string
    type: object
  ReportRepeat:
    description: ''
    properties:
      dayOfWeek:
        description: The day of the week the scheduled task should repeat. This property
          only applies to schedules with a `every` value of `"day-of-month"`.
        example: ''
        type: string
      every:
        description: "The frequency schedule repeats. Each value represents a different\
          \ unit of time and is used in conjunction with the property `interval`.\
          \ For example, a schedule can repeat hourly, daily, monthly, etc. The following\
          \ table describes each supported value: \n| Value | Description | \n| ----------\
          \ | ---------------- | \n| hour | Specifies the schedule repeats in hourly\
          \ increments. | \n| day | Specifies the schedule repeats in daily increments.\
          \ | \n| week | Specifies the schedule repeats in weekly increments. | \n\
          | date-of-month | Specifies the schedule repeats nth day of the `interval`\
          \ month. Requires the property `dateOfMonth` to be specified. For example,\
          \ if `dateOfMonth` is `17` and the `interval` is `2`, then the schedule\
          \ will repeat every 2 months on the 17th day of the month. | \n| day-of-month\
          \ | Specifies the schedule repeats on a monthly interval but instead of\
          \ a specific date being specified, the day of the week and week of the month\
          \ are specified. Requires the properties `dayOfWeek` and `weekOfMonth` to\
          \ be specified. For example, if `dayOfWeek` is `\"friday\"`, `weekOfMonth`\
          \ is `3`, and the `interval` is `4`, then the schedule will repeat every\
          \ 4 months on the 3rd Friday of the month. | \n"
        example: date-of-month
        type: string
      interval:
        description: The interval time the schedule should repeat. The is depends
          on the value set in `every`. For example, if the value in property `every`
          is set to `"day"` and `interval` is set to `2`, then the schedule will repeat
          every 2 days.
        example: 1
        format: int32
        minimum: 1
        type: integer
      weekOfMonth:
        description: The week of the month the scheduled task should repeat. For This
          property only applies to schedules with a `every` value of `"day-of-month"`.
          Each week of the month is counted in 7-day increments. For example, week
          1 consists of days 1-7 of the month while week 2 consists of days 8-14 of
          the month and so forth.
        example: ''
        format: int32
        maximum: 6
        minimum: 1
        type: integer
    required:
    - every
    - interval
    type: object
  ReportScope:
    description: ''
    type: object
  ReportSize:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 24789050
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 23.6 MB
        type: string
    type: object
  ReportStorage:
    description: ''
    properties:
      location:
        description: 'The location to storage an additional copy of the report. This
          is a sub-path post-fixed to `$(install_dir)/nsc/reports/$(user)/`. Variables
          such as `$(report_name)`, `$(date)`, and `$(time)` may be used to generate
          the directory structure. '
        example: monthly_reports/site/corporate
        type: string
      path:
        description: The full path to the additional copy storage location.
        example: $(install_dir)/nsc/reports/$(user)/monthly_reports/site/corporate
        readOnly: true
        type: string
    type: object
  ReportTemplate:
    description: ''
    properties:
      builtin:
        description: Whether the report template is builtin.
        example: true
        type: boolean
      description:
        description: The description of the report template.
        example: Provides comprehensive details about discovered assets, vulnerabilities,
          and users.
        type: string
      id:
        description: The identifier of the report template;
        example: audit-report
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the report template.
        example: Audit Report
        type: string
      sections:
        description: The sections that comprise the `document` report template.
        items:
          type: string
        type: array
      type:
        description: The type of the report template. `document` is a templatized,
          typically printable, report that has various sections of content. `export`
          is data-oriented output, typically CSV. `file` is a printable report template
          using a report template file.
        enum:
        - document
        - export
        - file
        example: document
        type: string
    type: object
  Resources«Alert»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Alert'
        type: array
    type: object
  Resources«AssetGroup»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/AssetGroup'
        type: array
    type: object
  Resources«AssetTag»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/AssetTag'
        type: array
    type: object
  Resources«AuthenticationSource»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/AuthenticationSource'
        type: array
    type: object
  Resources«AvailableReportFormat»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/AvailableReportFormat'
        type: array
    type: object
  Resources«Configuration»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Configuration'
        type: array
    type: object
  Resources«Database»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Database'
        type: array
    type: object
  Resources«DiscoveryAsset»:
    description: ''
    properties:
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        items:
          $ref: '#/definitions/DiscoveryAsset'
        type: array
    type: object
  Resources«EnginePool»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/EnginePool'
        type: array
    type: object
  Resources«File»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/File'
        type: array
    type: object
  Resources«GroupAccount»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/GroupAccount'
        type: array
    type: object
  Resources«MatchedSolution»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/MatchedSolution'
        type: array
    type: object
  Resources«PolicyOverride»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/PolicyOverride'
        type: array
    type: object
  Resources«ReportInstance»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/ReportInstance'
        type: array
    type: object
  Resources«ReportTemplate»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/ReportTemplate'
        type: array
    type: object
  Resources«Role»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Role'
        type: array
    type: object
  Resources«ScanEngine»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/ScanEngine'
        type: array
    type: object
  Resources«ScanSchedule»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/ScanSchedule'
        type: array
    type: object
  Resources«ScanTemplate»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/ScanTemplate'
        type: array
    type: object
  Resources«SharedCredential»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SharedCredential'
        type: array
    type: object
  Resources«SiteCredential»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SiteCredential'
        type: array
    type: object
  Resources«SiteSharedCredential»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SiteSharedCredential'
        type: array
    type: object
  Resources«SmtpAlert»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SmtpAlert'
        type: array
    type: object
  Resources«SnmpAlert»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SnmpAlert'
        type: array
    type: object
  Resources«Software»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Software'
        type: array
    type: object
  Resources«Solution»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Solution'
        type: array
    type: object
  Resources«SonarQuery»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SonarQuery'
        type: array
    type: object
  Resources«SyslogAlert»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/SyslogAlert'
        type: array
    type: object
  Resources«Tag»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/Tag'
        type: array
    type: object
  Resources«UserAccount»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/UserAccount'
        type: array
    type: object
  Resources«User»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/User'
        type: array
    type: object
  Resources«VulnerabilityValidationResource»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/VulnerabilityValidationResource'
        type: array
    type: object
  Resources«WebFormAuthentication»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/WebFormAuthentication'
        type: array
    type: object
  Resources«WebHeaderAuthentication»:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The resources returned.
        items:
          $ref: '#/definitions/WebHeaderAuthentication'
        type: array
    type: object
  Review:
    description: ''
    properties:
      comment:
        description: 'A comment from the reviewer detailing the review. '
        example: ''
        readOnly: true
        type: string
      date:
        description: The date and time the review took place.
        example: ''
        readOnly: true
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The identifier of the user that reviewed the vulnerability exception.
        example: ''
        readOnly: true
        type: string
      user:
        description: The login name of the user that reviewed the vulnerability exception.
        example: ''
        format: int32
        readOnly: true
        type: integer
    type: object
  RiskModifierSettings:
    description: ''
    properties:
      high:
        description: ${settings.risk.modifier.high}
        example: 1.5
        format: double
        type: number
      low:
        description: ${settings.risk.modifier.low}
        example: 0.75
        format: double
        type: number
      medium:
        description: ${settings.risk.modifier.medium}
        example: 1.0
        format: double
        type: number
      veryHigh:
        description: ${settings.risk.modifier.veryHigh}
        example: 2.0
        format: double
        type: number
      veryLow:
        description: ${settings.risk.modifier.veryLow}
        example: 0.5
        format: double
        type: number
    type: object
  RiskSettings:
    description: ''
    properties:
      adjustWithCriticality:
        description: Whether risk is adjusted using criticality tags.
        example: true
        type: boolean
      criticalityModifiers:
        $ref: '#/definitions/RiskModifierSettings'
        description: If `adjustWithCriticality` is enabled, details the risk modifiers
          by criticality tag.
        example: ''
      model:
        description: The risk model used to compute risk.
        example: real_risk
        type: string
    type: object
  RiskTrendAllAssetsResource:
    description: ''
    properties:
      total:
        description: Includes a trend for the total risk of all assets.
        example: true
        type: boolean
      trend:
        description: Whether to include a trend for average risk of all assets or
          the total number of assets.
        enum:
        - average-risk
        - number-of-assets
        - none
        example: average-risk
        type: string
    type: object
  RiskTrendResource:
    description: ''
    properties:
      allAssets:
        $ref: '#/definitions/RiskTrendAllAssetsResource'
        description: Trend settings for a trend across all assets in the scope of
          the report.
        example: ''
      assetGroupMembership:
        description: Whether all asset groups in the history of deployment or those
          as of the report generation time are to be included.
        enum:
        - historical
        - generation
        example: historical
        type: string
      assetGroups:
        description: Whether to include a trend for the 5 highest-risk asset groups
          in the scope of the report (either the average or total risk). Only allowed
          if asset groups are specified in the report scope.
        enum:
        - average
        - total
        example: total
        type: string
      assets:
        description: Whether to include a trend for the 5 highest-risk assets in the
          scope of the report.
        example: true
        type: boolean
      from:
        description: The start date of the risk trend, which can either be a duration
          or a specific date and time.
        enum:
        - P1Y
        - P6M
        - P3M
        - P1M
        - <date>
        example: P3M
        type: string
      sites:
        description: Whether to include a trend for the 5 highest-risk sites in the
          scope of the report (either the average or total risk). Only allowed if
          sites are specified in the report scope.
        enum:
        - average
        - total
        example: average
        type: string
      tagMembership:
        description: Whether all assets tagged in the history of deployment or those
          tagged as of the report generation time are to be included.
        enum:
        - historical
        - generation
        example: historical
        type: string
      tags:
        description: Whether to include a trend for the 5 highest-risk tags for assets
          in the scope of the report (either the average or total risk). Only allowed
          if tags are specified in the report scope.
        enum:
        - average
        - total
        example: average
        type: string
      to:
        description: The end date of the risk trend (empty if `from` is a duration).
        example: ''
        type: string
    type: object
  Role:
    description: ''
    properties:
      description:
        description: The description of the role.
        example: ''
        type: string
      id:
        description: The identifier of the role.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The human readable name of the role.
        example: ''
        type: string
      privileges:
        description: The privileges granted to the role.
        items:
          enum:
          - all-permissions
          - create-reports
          - configure-global-settings
          - manage-sites
          - manage-tags
          - manage-static-asset-groups
          - manage-dynamic-asset-groups
          - manage-scan-templates
          - manage-report-templates
          - manage-scan-engines
          - submit-vulnerability-exceptions
          - approve-vulnerability-exceptions
          - delete-vulnerability-exceptions
          - create-tickets
          - close-tickets
          - assign-ticket-assignee
          - manage-site-access
          - manage-asset-group-access
          - manage-report-access
          - use-restricted-report-sections
          - manage-policies
          - view-asset-group-asset-data
          - manage-asset-group-assets
          - view-site-asset-data
          - specify-site-metadata
          - purge-site-asset-data
          - specify-scan-targets
          - assign-scan-engine
          - assign-scan-template
          - manage-site-credentials
          - manage-scan-alerts
          - schedule-automatic-scans
          - start-unscheduled-scans
          type: string
        type: array
    required:
    - description
    - id
    - name
    type: object
  Scan:
    description: ''
    properties:
      assets:
        description: The number of assets found in the scan.
        example: ''
        format: int32
        type: integer
      duration:
        description: The duration of the scan in ISO8601 format.
        example: ''
        type: string
      endTime:
        description: The end time of the scan in ISO8601 format.
        example: ''
        type: string
      engineId:
        description: The identifier of the scan engine.
        example: ''
        format: int32
        type: integer
      engineName:
        description: The name of the scan engine.
        example: ''
        type: string
      id:
        description: The identifier of the scan.
        example: ''
        format: int64
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      message:
        description: The reason for the scan status.
        example: ''
        type: string
      scanName:
        description: The user-driven scan name for the scan.
        example: ''
        type: string
      scanType:
        description: 'The scan type (automated, manual, scheduled). '
        example: ''
        type: string
      startTime:
        description: The start time of the scan in ISO8601 format.
        example: ''
        type: string
      startedBy:
        description: The name of the user that started the scan.
        example: ''
        type: string
      status:
        description: The scan status.
        enum:
        - aborted
        - unknown
        - running
        - finished
        - stopped
        - error
        - paused
        - dispatched
        - integrating
        example: ''
        type: string
      vulnerabilities:
        $ref: '#/definitions/Vulnerabilities'
        description: The vulnerability synopsis of the scan.
        example: ''
    type: object
  ScanEngine:
    description: ''
    properties:
      address:
        description: The address the scan engine is hosted.
        example: corporate-scan-engine-001.acme.com
        type: string
      contentVersion:
        description: The content version of the scan engine.
        example: ''
        readOnly: true
        type: string
      enginePools:
        description: A list of identifiers of engine pools this engine is included
          in.
        items:
          format: int32
          type: integer
        readOnly: true
        type: array
      id:
        description: The identifier of the scan engine.
        example: 6
        format: int32
        type: integer
      lastRefreshedDate:
        description: The date the engine was last refreshed. Date format is in ISO
          8601.
        example: ''
        readOnly: true
        type: string
      lastUpdatedDate:
        description: The date the engine was last updated. Date format is in ISO 8601.
        example: ''
        readOnly: true
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the scan engine.
        example: Corporate Scan Engine 001
        type: string
      port:
        description: The port used by the scan engine to communicate with the Security
          Console.
        example: 40894
        format: int32
        type: integer
      productVersion:
        description: The product version of the scan engine.
        example: ''
        readOnly: true
        type: string
      sites:
        description: A list of identifiers of each site the scan engine is assigned
          to.
        items:
          format: int32
          type: integer
        type: array
    required:
    - address
    - id
    - name
    - port
    type: object
  ScanEvents:
    description: ''
    properties:
      failed:
        description: Generates an alert when a scan fails. Default value is `false`.
        example: false
        type: boolean
      paused:
        description: Generates an alert when a scan pauses. Default value is `false`.
        example: false
        type: boolean
      resumed:
        description: Generates an alert when a scan resumes. Default value is `false`.
        example: false
        type: boolean
      started:
        description: Generates an alert when a scan starts. Default value is `false`.
        example: false
        type: boolean
      stopped:
        description: Generates an alert when a scan stops. Default value is `false`.
        example: false
        type: boolean
    required:
    - failed
    - paused
    - started
    - stopped
    type: object
  ScanSchedule:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/ScheduledScanTargets'
        description: Allows one or more assets defined within the site to be scanned
          for this scan schedule. This property is only supported for static sites.
          When this property is `null`, or not defined in schedule, then all assets
          defined in the static site will be scanned.
        example: ''
      duration:
        description: "Specifies the maximum duration the scheduled scan is allowed\
          \ to run. Scheduled scans that do not complete within specified duration\
          \ will be paused. The scan duration are represented by the format `\"P[n]DT[n]H[n]M\"\
          `. In these representations, the [n] is replaced by a value for each of\
          \ the date and time elements that follow the [n].The following table describes\
          \ each supported value: \n| Value | Description | \n| ---------- | ----------------\
          \ | \n| P | The duration designator. It must be placed at the start of the\
          \ duration representation. | \n| D | The day designator that follows the\
          \ value for the number of days. | \n| T | The time designator that precedes\
          \ the time portion of the representation. | \n| H | The hour designator\
          \ that follows the value for the number of hours. | \n| M | The minute designator\
          \ that follows the value for the number of minutes. | \nFor example, `\"\
          P5DT10H30M\"` represents a duration of \"5 days, 10 hours, and 30 minutes\"\
          . Each duration designator is optional; however, at least one must be specified\
          \ and it must be preceded by the `\"P\"` designator. \n"
        example: ''
        type: string
      enabled:
        description: Flag indicating whether the scan schedule is enabled.
        example: false
        type: boolean
      id:
        description: The identifier of the scan schedule.
        example: ''
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      nextRuntimes:
        description: 'List the next 10 dates in the future the schedule will launch. '
        items:
          type: string
        readOnly: true
        type: array
      onScanRepeat:
        description: "Specifies the desired behavior of a repeating scheduled scan\
          \ when the previous scan was paused due to reaching is maximum duration.\
          \ The following table describes each supported value: \n| Value | Description\
          \ | \n| ---------- | ---------------- | \n| restart-scan | Stops the previously-paused\
          \ scan and launches a new scan if the previous scan did not complete within\
          \ the specified duration. If the previous scheduled scan was not paused,\
          \ then a new scan is launched. | \n| resume-scan | Resumes the previously-paused\
          \ scan if the previous scan did not complete within the specified duration.\
          \ If the previous scheduled scan was not paused, then a new scan is launched.\
          \ | \n"
        example: ''
        type: string
      repeat:
        $ref: '#/definitions/Repeat'
        description: Settings for repeating a scheduled scan.
        example: ''
      scanEngineId:
        description: The identifier of the scan engine to be used for this scan schedule.
          If not set, the site's assigned scan engine will be used.
        example: ''
        format: int32
        type: integer
      scanName:
        description: A user-defined name for the scan launched by the schedule. If
          not explicitly set in the schedule, the scan name will be generated prior
          to the scan launching. Scan names must be unique within the site's scan
          schedules.
        example: ''
        type: string
      scanTemplateId:
        description: The identifier of the scan template to be used for this scan
          schedule. If not set, the site's assigned scan template will be used.
        example: ''
        type: string
      start:
        description: The scheduled start date and time. Date is represented in ISO
          8601 format. Repeating schedules will determine the next schedule to begin
          based on this date and time.
        example: '2018-03-01T04:31:56Z'
        type: string
    required:
    - enabled
    - onScanRepeat
    - start
    type: object
  ScanScope:
    description: ''
    properties:
      assets:
        $ref: '#/definitions/StaticSite'
        description: Specify assets to be included in site scans as well as assets
          to be excluded from site scans. If the property is defined, then at least
          one address or asset group must be specified for scanning. Property is required
          when creating a static site.
        example: ''
      connection:
        $ref: '#/definitions/DynamicSite'
        description: Specify discovery connection settings for a dynamic site. Property
          is required when creating a dynamic site.
        example: ''
    type: object
  ScanSettings:
    description: ''
    properties:
      connectionTimeout:
        description: 'The connection timeout when establishing connections to remote
          scan engines, in ISO 8601 format. For example: `"PT15S"`.'
        example: PT15S
        type: string
      incremental:
        description: Whether incremental scan results is enabled.
        example: true
        type: boolean
      maximumThreads:
        description: The maximum number of scan threads to use in any scan. -1 means
          this is set by the scan template.
        example: -1
        format: int32
        type: integer
      readTimeout:
        description: 'The read timeout when establishing connections to remote scan
          engines, in ISO 8601 format. For example: `"PT15M"`.'
        example: PT15M
        type: string
      statusIdleTimeout:
        description: 'The idle timeout when checking the status of running scans,
          in ISO 8601 format. For example: `"PT3M"`.'
        example: PT3M
        type: string
      statusThreads:
        description: The number of threads to use when checking the status of running
          scans.
        example: 3
        format: int32
        type: integer
    type: object
  ScanSize:
    description: ''
    properties:
      bytes:
        description: The raw value in bytes.
        example: 1370433223
        format: int64
        type: integer
      formatted:
        description: The value formatted in human-readable notation (e.g. GB, MB,
          KB, bytes).
        example: 1.3 GB
        type: string
    type: object
  ScanTargetsResource:
    description: ''
    properties:
      addresses:
        description: List of addresses. Each address is a string that can represent
          either a hostname, ipv4 address, ipv4 address range, ipv6 address, or CIDR
          notation.
        items:
          type: string
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
    type: object
  ScanTemplate:
    description: ''
    properties:
      checks:
        $ref: '#/definitions/ScanTemplateVulnerabilityChecks'
        description: "Settings for which vulnerability checks to run during a scan.\
          \ <br/> \nThe rules for inclusion of checks is as follows: \n<ul> \n<li>Enabled\
          \ checks by category and by check type are included</li> \n<li>Disabled\
          \ checks in by category and by check type are removed</li> \n<li>Enabled\
          \ checks in by individual check are added (even if they are disabled in\
          \ by category or check type)</li> \n<li>Disabled checks in by individual\
          \ check are removed</li> \n<li>If unsafe is disabled, unsafe checks are\
          \ removed</li> \n<li>If potential is disabled, potential checks are removed</li>\
          \ \n<ul>"
        example: ''
      database:
        $ref: '#/definitions/ScanTemplateDatabase'
        description: Settings for discovery databases.
        example: ''
      description:
        description: A verbose description of the scan template..
        example: Performs a full network audit of all systems using only safe checks...
        type: string
      discovery:
        $ref: '#/definitions/ScanTemplateDiscovery'
        description: Discovery settings used during a scan.
        example: ''
      discoveryOnly:
        description: Whether only discovery is performed during a scan.
        example: false
        type: boolean
      enableWindowsServices:
        description: Whether Windows services are enabled during a scan. Windows services
          will be temporarily reconfigured when this option is selected. Original
          settings will be restored after the scan completes, unless it is interrupted.
        example: false
        type: boolean
      enhancedLogging:
        description: Whether enhanced logging is gathered during scanning. Collection
          of enhanced logs may greatly increase the disk space used by a scan.
        example: false
        type: boolean
      id:
        description: The identifier of the scan template
        example: full-audit-without-web-spider
        readOnly: true
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      maxParallelAssets:
        description: The maximum number of assets scanned simultaneously per scan
          engine during a scan.
        example: 10
        format: int32
        type: integer
      maxScanProcesses:
        description: The maximum number of scan processes simultaneously allowed against
          each asset during a scan.
        example: 10
        format: int32
        type: integer
      name:
        description: A concise name for the scan template.
        example: Full audit
        type: string
      policy:
        $ref: '#/definitions/Policy'
        description: Policy configuration settings used during a scan.
        example: ''
      policyEnabled:
        description: Whether policy assessment is performed during a scan.
        example: true
        type: boolean
      telnet:
        $ref: '#/definitions/Telnet'
        description: Settings for interacting with the Telnet protocol.
        example: ''
      vulnerabilityEnabled:
        description: Whether vulnerability assessment is performed during a scan.
        example: true
        type: boolean
      web:
        $ref: '#/definitions/ScanTemplateWebSpider'
        description: Web spider settings used during a scan.
        example: ''
      webEnabled:
        description: Whether web spidering and assessment are performed during a scan.
        example: true
        type: boolean
    type: object
  ScanTemplateAssetDiscovery:
    description: ''
    properties:
      collectWhoisInformation:
        description: Whether to query Whois during discovery. Defaults to `false`.
        example: false
        type: boolean
      fingerprintMinimumCertainty:
        description: The minimum certainty required for a fingerprint to be considered
          valid during a scan. Defaults to `0.16`.
        example: 0.16
        format: double
        maximum: 1
        minimum: 0
        type: number
      fingerprintRetries:
        description: The number of fingerprinting attempts made to determine the operating
          system fingerprint. Defaults to `4`.
        example: 0
        format: int32
        maximum: 1000
        minimum: 0
        type: integer
      ipFingerprintingEnabled:
        description: Whether to fingerprint TCP/IP stacks for hardware, operating
          system and software information.
        example: true
        type: boolean
      sendArpPings:
        description: Whether ARP pings are sent during asset discovery. Defaults to
          `true`.
        example: true
        type: boolean
      sendIcmpPings:
        description: Whether ICMP pings are sent during asset discovery. Defaults
          to `false`.
        example: true
        type: boolean
      tcpPorts:
        description: TCP ports to send packets and perform discovery. Defaults to
          no ports.
        items:
          format: int32
          type: integer
        type: array
      treatTcpResetAsAsset:
        description: Whether TCP reset responses are treated as live assets. Defaults
          to `true`.
        example: true
        type: boolean
      udpPorts:
        description: UDP ports to send packets and perform discovery. Defaults to
          no ports.
        items:
          format: int32
          type: integer
        type: array
    type: object
  ScanTemplateDatabase:
    description: ''
    properties:
      db2:
        description: Database name for DB2 database instance.
        example: database
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      oracle:
        description: Database name (SID) for an Oracle database instance.
        example: default
        items:
          type: string
        type: array
      postgres:
        description: Database name for PostgesSQL database instance.
        example: postgres
        type: string
    type: object
  ScanTemplateDiscovery:
    description: ''
    properties:
      asset:
        $ref: '#/definitions/ScanTemplateAssetDiscovery'
        description: Asset discovery settings used during a scan.
        example: ''
      performance:
        $ref: '#/definitions/ScanTemplateDiscoveryPerformance'
        description: Discovery performance settings used during a scan.
        example: ''
      service:
        $ref: '#/definitions/ScanTemplateServiceDiscovery'
        description: Service discovery settings used during a scan.
        example: ''
    type: object
  ScanTemplateDiscoveryPerformance:
    description: ''
    properties:
      packetRate:
        $ref: '#/definitions/ScanTemplateDiscoveryPerformancePacketsRate'
        description: The number of packets to send per second during scanning.
        example: ''
      parallelism:
        $ref: '#/definitions/ScanTemplateDiscoveryPerformanceParallelism'
        description: The number of discovery connection requests to be sent to target
          host simultaneously. These settings has no effect if values have been set
          for `scanDelay`.
        example: ''
      retryLimit:
        description: The maximum number of attempts to contact target assets. If the
          limit is exceeded with no response, the given asset is not scanned. Defaults
          to `3`.
        example: 3
        format: int32
        maximum: 15
        minimum: 1
        type: integer
      scanDelay:
        $ref: '#/definitions/ScanTemplateDiscoveryPerformanceScanDelay'
        description: The duration to wait between sending packets to each target host
          during a scan.
        example: ''
      timeout:
        $ref: '#/definitions/ScanTemplateDiscoveryPerformanceTimeout'
        description: The duration to wait between retry attempts.
        example: ''
    type: object
  ScanTemplateDiscoveryPerformancePacketsRate:
    description: ''
    properties:
      defeatRateLimit:
        description: Whether defeat rate limit (defeat-rst-ratelimit) is enforced
          on the minimum packet setting, which can improve scan speed. If it is disabled,
          the minimum packet rate setting may be ignored when a target limits its
          rate of RST (reset) responses to a port scan. This can increase scan accuracy
          by preventing the scan from missing ports. Defaults to `true`.
        example: true
        type: boolean
      maximum:
        description: The minimum number of packets to send each second during discovery
          attempts. Defaults to `0`.
        example: 15000
        format: int32
        maximum: 15000
        minimum: 0
        type: integer
      minimum:
        description: The minimum number of packets to send each second during discovery
          attempts. Defaults to `0`.
        example: 450
        format: int32
        maximum: 15000
        minimum: 0
        type: integer
    type: object
  ScanTemplateDiscoveryPerformanceParallelism:
    description: ''
    properties:
      maximum:
        description: The maximum number of discovery connection requests send in parallel.
          Defaults to `0`.
        example: 0
        format: int32
        maximum: 1000
        minimum: 0
        type: integer
      minimum:
        description: The minimum number of discovery connection requests send in parallel.
          Defaults to `0`.
        example: 0
        format: int32
        maximum: 1000
        minimum: 0
        type: integer
    type: object
  ScanTemplateDiscoveryPerformanceScanDelay:
    description: ''
    properties:
      maximum:
        description: The minimum duration to wait between sending packets to each
          target host. The value is specified as a ISO8601 duration and can range
          from `PT0S` (0ms) to `P30S` (30s). Defaults to `PT0S`.
        example: PT0S
        type: string
      minimum:
        description: The maximum duration to wait between sending packets to each
          target host. The value is specified as a ISO8601 duration and can range
          from `PT0S` (0ms) to `P30S` (30s). Defaults to `PT0S`.
        example: PT0S
        type: string
    type: object
  ScanTemplateDiscoveryPerformanceTimeout:
    description: ''
    properties:
      initial:
        description: The initial timeout to wait between retry attempts. The value
          is specified as a ISO8601 duration and can range from `PT0.5S` (500ms) to
          `P30S` (30s). Defaults to `PT0.5S`.
        example: PT0.5S
        type: string
      maximum:
        description: The maximum time to wait between retries. The value is specified
          as a ISO8601 duration and can range from `PT0.5S` (500ms) to `P30S` (30s).
          Defaults to `PT3S`.
        example: PT3S
        type: string
      minimum:
        description: The minimum time to wait between retries. The value is specified
          as a ISO8601 duration and can range from `PT0.5S` (500ms) to `P30S` (30s).
          Defaults to `PT0.5S`.
        example: PT0S
        type: string
    type: object
  ScanTemplateServiceDiscovery:
    description: ''
    properties:
      serviceNameFile:
        description: An optional file that lists each port and the service that commonly
          resides on it. If scans cannot identify actual services on ports, service
          names will be derived from this file in scan results. Defaults to empty.
        example: ''
        type: string
      tcp:
        $ref: '#/definitions/ScanTemplateServiceDiscoveryTcp'
        description: TCP service discovery settings.
        example: ''
      udp:
        $ref: '#/definitions/ScanTemplateServiceDiscoveryUdp'
        description: UDP service discovery settings.
        example: ''
    type: object
  ScanTemplateServiceDiscoveryTcp:
    description: ''
    properties:
      additionalPorts:
        description: Additional TCP ports to scan. Individual ports can be specified
          as numbers or a string, but port ranges must be strings (e.g. `"7892-7898"`).
          Defaults to empty.
        example: 3078,8000-8080
        items:
          type: object
        type: array
      excludedPorts:
        description: TCP ports to exclude from scanning. Individual ports can be specified
          as numbers or a string, but port ranges must be strings (e.g. `"7892-7898"`).
          Defaults to empty.
        example: '1024'
        items:
          type: object
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      method:
        description: The method of TCP discovery. Defaults to `SYN`.
        enum:
        - SYN
        - SYN+RST
        - SYN+FIN
        - SYN+ECE
        - Full
        example: SYN
        type: string
      ports:
        description: The TCP ports to scan. Defaults to `well-known`.
        enum:
        - all
        - well-known
        - custom
        - none
        example: well-known
        type: string
    type: object
  ScanTemplateServiceDiscoveryUdp:
    description: ''
    properties:
      additionalPorts:
        description: Additional UDP ports to scan. Individual ports can be specified
          as numbers or a string, but port ranges must be strings (e.g. `"7892-7898"`).
          Defaults to empty.
        example: 4020-4032
        items:
          type: object
        type: array
      excludedPorts:
        description: UDP ports to exclude from scanning. Individual ports can be specified
          as numbers or a string, but port ranges must be strings (e.g. `"7892-7898"`).
          Defaults to empty.
        example: '9899'
        items:
          type: object
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      ports:
        description: The UDP ports to scan. Defaults to `well-known`.
        enum:
        - all
        - well-known
        - custom
        - none
        example: well-known
        type: string
    type: object
  ScanTemplateVulnerabilityCheckCategories:
    description: ''
    properties:
      disabled:
        description: The categories of vulnerability checks to disable during a scan.
        items:
          type: string
        type: array
      enabled:
        description: The categories of vulnerability checks to enable during a scan.
        items:
          type: string
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
    type: object
  ScanTemplateVulnerabilityCheckIndividual:
    description: ''
    properties:
      disabled:
        description: The individual vulnerability checks to disable during a scan.
        items:
          type: string
        type: array
      enabled:
        description: The individual vulnerability checks to enable during a scan.
        items:
          type: string
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
    type: object
  ScanTemplateVulnerabilityChecks:
    description: ''
    properties:
      categories:
        $ref: '#/definitions/ScanTemplateVulnerabilityCheckCategories'
        description: The vulnerability check categories enabled or disabled during
          a scan.
        example: ''
      correlate:
        description: Whether an extra step is performed at the end of the scan where
          more trust is put in OS patch checks to attempt to override the results
          of other checks which could be less reliable.
        example: false
        type: boolean
      individual:
        $ref: '#/definitions/ScanTemplateVulnerabilityCheckIndividual'
        description: The individual vulnerability checks enabled or disabled during
          a scan.
        example: ''
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      potential:
        description: Whether checks that result in potential vulnerabilities are assessed
          during a scan.
        example: false
        type: boolean
      types:
        $ref: '#/definitions/VulnerabilityCheckType'
        description: The vulnerability check types enabled or disabled during a scan.
        example: ''
      unsafe:
        description: Whether checks considered "unsafe" are assessed during a scan.
        example: false
        type: boolean
    type: object
  ScanTemplateWebSpider:
    description: ''
    properties:
      dontScanMultiUseDevices:
        description: Whether scanning of multi-use devices, such as printers or print
          servers should be avoided.
        example: true
        type: boolean
      includeQueryStrings:
        description: Whether query strings are using in URLs when web spidering. This
          causes the web spider to make many more requests to the Web server. This
          will increase overall scan time and possibly affect the Web server's performance
          for legitimate users.
        example: false
        type: boolean
      paths:
        $ref: '#/definitions/ScanTemplateWebSpiderPaths'
        description: Paths to use when web spidering.
        example: ''
      patterns:
        $ref: '#/definitions/ScanTemplateWebSpiderPatterns'
        description: Patterns to match responses during web spidering.
        example: ''
      performance:
        $ref: '#/definitions/ScanTemplateWebSpiderPerformance'
        description: Performance settings used during web spidering.
        example: ''
      testCommonUsernamesAndPasswords:
        description: Whether to determine if discovered logon forms accept commonly
          used user names or passwords. The process may cause authentication services
          with certain security policies to lock out accounts with these credentials.
        example: false
        type: boolean
      testXssInSingleScan:
        description: Whether to test for persistent cross-site scripting during a
          single scan. This test helps to reduce the risk of dangerous attacks via
          malicious code stored on Web servers. Enabling it may increase Web spider
          scan times.
        example: false
        type: boolean
      userAgent:
        description: The `User-Agent` to use when web spidering. Defaults to `"Mozilla/5.0
          (compatible; MSIE 7.0; Windows NT 6.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"`.
        example: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; .NET CLR 1.1.4322;
          .NET CLR 2.0.50727)
        type: string
    type: object
  ScanTemplateWebSpiderPaths:
    description: ''
    properties:
      boostrap:
        description: Paths to bootstrap spidering with.
        example: /root
        type: string
      excluded:
        description: Paths excluded from spidering.
        example: /root/sensitive.html
        type: string
      honorRobotDirectives:
        description: ${scan.template.web.spider.paths.robot.directives.description}
        example: false
        type: boolean
    type: object
  ScanTemplateWebSpiderPatterns:
    description: ''
    properties:
      sensitiveContent:
        description: A regular expression that is used to find sensitive content on
          a page.
        example: ''
        type: string
      sensitiveField:
        description: A regular expression that is used to find fields that may contain
          sensitive input. Defaults to `"(p|pass)(word|phrase|wd|code)"`.
        example: (p|pass)(word|phrase|wd|code)
        type: string
    type: object
  ScanTemplateWebSpiderPerformance:
    description: ''
    properties:
      httpDaemonsToSkip:
        description: The names of HTTP Daemons (HTTPd) to skip when spidering. For
          example, `"CUPS"`.
        items:
          type: string
        type: array
      maximumDirectoryLevels:
        description: The directory depth limit for web spidering. Limiting directory
          depth can save significant time, especially with large sites. A value of
          `0` signifies unlimited directory traversal. Defaults to `6`.
        example: 6
        format: int32
        maximum: 100
        minimum: 1
        type: integer
      maximumForeignHosts:
        description: The maximum number of unique host names that the spider may resolve.
          This function adds substantial time to the spidering process, especially
          with large Web sites, because of frequent cross-link checking involved.
          Defaults to `100`.
        example: 100
        format: int32
        type: integer
      maximumLinkDepth:
        description: The maximum depth of links to traverse when spidering. Defaults
          to `6`.
        example: 6
        format: int32
        maximum: 100
        minimum: 0
        type: integer
      maximumPages:
        description: The maximum the number of pages that are spidered. This is a
          time-saving measure for large sites. Defaults to `3000`.
        example: 3000
        format: int32
        maximum: 1000000
        minimum: 0
        type: integer
      maximumRetries:
        description: The maximum the number of times to retry a request after a failure.
          A value of `0` means no retry attempts are made. Defaults to `2`.
        example: 2
        format: int32
        maximum: 999
        minimum: 0
        type: integer
      maximumTime:
        description: The maximum length of time to web spider. This limit prevents
          scans from taking longer than the allotted scan schedule. A value of `PT0S`
          means no limit is applied. The acceptable range is `PT1M` to `PT16666.6667H`.
        example: PT0S
        type: string
      responseTimeout:
        description: The duration to wait for a response from a target web server.
          The value is specified as a ISO8601 duration and can range from `PT0S` (0ms)
          to `P1H` (1 hour). Defaults to `PT2M`.
        example: PT2M
        type: string
      threadsPerServer:
        description: The number of threads to use per web server being spidered. Defaults
          to `3`.
        example: 3
        format: int32
        maximum: 999
        minimum: 0
        type: integer
    type: object
  ScheduledScanTargets:
    description: ''
    properties:
      excludedAssetGroups:
        $ref: '#/definitions/ExcludedAssetGroups'
        description: Assets associated with these asset groups will be excluded from
          the site's scan.
        example: ''
      excludedTargets:
        $ref: '#/definitions/ExcludedScanTargets'
        description: Addresses to be excluded from the site's scan. Each address is
          a string that can represent either a hostname, ipv4 address, ipv4 address
          range, ipv6 address, or CIDR notation.
        example: ''
      includedAssetGroups:
        $ref: '#/definitions/IncludedAssetGroups'
        description: Allows users to specify a subset of the site's included asset
          groups to be included in the scan. If the property is defined, then at least
          one valid already defined as an included asset group must be specified.
        example: ''
      includedTargets:
        $ref: '#/definitions/IncludedScanTargets'
        description: Allows users to specify a subset of the site's scan targets to
          be included in the scan. If the property is defined, then at least one address
          must be specified.
        example: ''
    type: object
  SearchCriteria:
    description: ''
    properties:
      filters:
        description: Filters used to match assets. See <a href="#section/Responses/SearchCriteria">Search
          Criteria</a> for more information on the structure and format.
        items:
          $ref: '#/definitions/SwaggerSearchCriteriaFilter'
        type: array
      match:
        description: Operator to determine how to match filters. `all` requires that
          all filters match for an asset to be included. `any` requires only one filter
          to match for an asset to be included.
        enum:
        - any
        - all
        example: all
        type: string
    type: object
  Service:
    description: ''
    properties:
      configurations:
        description: Configuration key-values pairs enumerated on the service.
        items:
          $ref: '#/definitions/Configuration'
        type: array
      databases:
        description: The databases enumerated on the service.
        items:
          $ref: '#/definitions/Database'
        type: array
      family:
        description: The family of the service.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the service.
        example: CIFS Name Service
        type: string
      port:
        description: The port of the service.
        example: 139
        format: int32
        type: integer
      product:
        description: The product running the service.
        example: Samba
        type: string
      protocol:
        description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        example: tcp
        type: string
      userGroups:
        description: The group accounts enumerated on the service.
        items:
          $ref: '#/definitions/GroupAccount'
        type: array
      users:
        description: The user accounts enumerated on the service.
        items:
          $ref: '#/definitions/UserAccount'
        type: array
      vendor:
        description: The vendor of the service.
        example: ''
        type: string
      version:
        description: The version of the service.
        example: 3.5.11
        type: string
      webApplications:
        description: The web applications found on the service.
        items:
          $ref: '#/definitions/WebApplication'
        type: array
    required:
    - port
    - protocol
    type: object
  ServiceLink:
    description: ''
    properties:
      href:
        description: 'A hypertext reference, which is either a URI (see <a target="_blank"
          href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>) or URI template
          (see <a target="_blank" href="https://tools.ietf.org/html/rfc6570">RFC 6570</a>). '
        example: https://hostname:3780/api/3/...
        type: string
      port:
        description: The port of the service.
        example: 22
        format: int32
        type: integer
      protocol:
        description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        example: tcp
        type: string
      rel:
        description: The link relation type. This value is one from the <a target="_blank"
          href="https://tools.ietf.org/html/rfc5988#section-6.2">Link Relation Type
          Registry</a> or is the type of resource being linked to.
        example: Service
        type: string
    type: object
  ServiceUnavailableError:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '503'
        example: '503'
        type: string
    required:
    - status
    type: object
  Settings:
    description: ''
    properties:
      assetLinking:
        description: Whether asset linking is enabled.
        example: true
        type: boolean
      authentication:
        $ref: '#/definitions/AuthenticationSettings'
        description: Details the authentication settings.
        example: ''
      database:
        $ref: '#/definitions/DatabaseSettings'
        description: Details the database settings.
        example: ''
      directory:
        description: The root directory of the console.
        example: /opt/rapid7/nexpose
        type: string
      insightPlatform:
        description: Whether the usage of the Insight platform is enabled.
        example: true
        type: boolean
      insightPlatformRegion:
        description: The region used for the Insight platform, if enabled.
        example: us-east-1
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      risk:
        $ref: '#/definitions/RiskSettings'
        description: Details risk configuration and settings.
        example: ''
      scan:
        $ref: '#/definitions/ScanSettings'
        description: Details the global settings for scanning.
        example: ''
      serialNumber:
        description: The console serial number.
        example: 729F31B1C92F3C91DFA8A649F4D5C883C269BD45
        type: string
      smtp:
        $ref: '#/definitions/SmtpSettings'
        description: Global SMTP distribution settings.
        example: ''
      updates:
        $ref: '#/definitions/UpdateSettings'
        description: Details the update settings.
        example: ''
      uuid:
        description: The universally unique identifier (UUID) of the console.
        example: 7231036a-e052-11e7-80c1-9a214cf093ae
        type: string
      web:
        $ref: '#/definitions/WebSettings'
        description: Details the web server settings.
        example: ''
    type: object
  SharedCredential:
    description: ''
    properties:
      account:
        $ref: '#/definitions/SharedCredentialAccount'
        description: "Specify the type of service to authenticate as well as all of\
          \ the information required by that service. <div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">service</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"param-enum\">\
          \ \n<span class=\"param-enum-value string\">\"as400\"</span> \n<span class=\"\
          param-enum-value string\">\"cifs\"</span> \n<span class=\"param-enum-value\
          \ string\">\"cifshash\"</span> \n<span class=\"param-enum-value string\"\
          >\"cvs\"</span> \n<span class=\"param-enum-value string\">\"db2\"</span>\
          \ \n<span class=\"param-enum-value string\">\"ftp\"</span> \n<span class=\"\
          param-enum-value string\">\"http\"</span> \n<span class=\"param-enum-value\
          \ string\">\"ms-sql\"</span> \n<span class=\"param-enum-value string\">\"\
          mysql\"</span> \n<span class=\"param-enum-value string\">\"notes\"</span>\
          \ \n<span class=\"param-enum-value string\">\"oracle\"</span> \n<span class=\"\
          param-enum-value string\">\"pop\"</span> \n<span class=\"param-enum-value\
          \ string\">\"postgresql\"</span> \n<span class=\"param-enum-value string\"\
          >\"remote-exec\"</span> \n<span class=\"param-enum-value string\">\"snmp\"\
          </span> \n<span class=\"param-enum-value string\">\"snmpv3\"</span> \n<span\
          \ class=\"param-enum-value string\">\"ssh\"</span> \n<span class=\"param-enum-value\
          \ string\">\"ssh-key\"</span> \n<span class=\"param-enum-value string\"\
          >\"sybase\"</span> \n<span class=\"param-enum-value string\">\"telnet\"\
          </span> \n</div> \n<div class=\"redoc-markdown-block\">The type of service\
          \ to authenticate with.</div>\n</div> \n</div>\n\nThe following are the\
          \ names of the valid values for service: \n| Value         | Service   \
          \                                      | \n| ------------- | -----------------------------------------------\
          \ | \n| `as400`       | IBM AS/400                                     \
          \ | \n| `cifs`        | Microsoft Windows/Samba (SMB/CIFS)             \
          \ | \n| `cifshash`    | Microsoft Windows/Samba LM/NTLM Hash (SMB/CIFS)\
          \ | \n| `cvs`         | Concurrent Versioning System (CVS)             \
          \ | \n| `db2`         | DB2                                            \
          \ | \n| `ftp`         | File Transfer Protocol (FTP)                   \
          \ | \n| `http`        | Web Site HTTP Authentication                   \
          \ | \n| `ms-sql`      | Microsoft SQL Server                           \
          \ | \n| `mysql`       | MySQL Server                                   \
          \ | \n| `notes`       | Lotus Notes/Domino                             \
          \ | \n| `oracle`      | Oracle                                         \
          \ | \n| `pop`         | Post Office Protocol (POP)                     \
          \ | \n| `postgresql`  | PostgreSQL                                     \
          \ | \n| `remote-exec` | Remote Execution                               \
          \ | \n| `snmp`        | Simple Network Management Protocol v1/v2c      \
          \ | \n| `snmpv3`      | Simple Network Management Protocol v3          \
          \ | \n| `ssh`         | Secure Shell (SSH)                             \
          \ | \n| `ssh-key`     | Secure Shell (SSH) Public Key                  \
          \ | \n| `sybase`      | Sybase SQL Server                              \
          \ | \n| `telnet`      | Telnet                                         \
          \ | \n\n<p>The following is a specification of supported credential properties\
          \ for each type of service. These properties are to be specified within\
          \ the <code>account</code> object.</p>\n\n`as400` supported properties:\n\
          <div class=\"properties\"> \n<div class=\"property-info\"> \n<span class=\"\
          property-name\">domain</span> <span class=\"param-type\">string</span> \n\
          <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`cifs` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`cifshash` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">ntlmHash</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The NTLM password\
          \ hash. <strong>Note: This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`cvs` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`db2` supported properties:\n<div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`ftp` supported properties:\n<div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`http` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">realm</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The realm.</p></div>\n</div> \n<div class=\"property-info\"> \n<span\
          \ class=\"property-name\">username</span> <span class=\"param-type\">string</span>\
          \ <span _ngcontent-c21 class=\"param-required\">Required</span> \n<div class=\"\
          redoc-markdown-block\"><p>The user name for the account that will be used\
          \ for authenticating.</p></div>\n</div> \n<div class=\"property-info\">\
          \ \n<span class=\"property-name\">password</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The password for the account\
          \ that will be used for authenticating. <strong>Note: This property is not\
          \ returned in responses for security.</strong></p></div>\n</div> \n</div>\n\
          \n`ms-sql` supported properties:\n<div class=\"properties\"> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">database</span> <span class=\"\
          param-type\">string</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ name of the database. If not specified, a default database name will be\
          \ used during authentication.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">useWindowsAuthentication</span> <span\
          \ class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag signaling whether to connect to the database using\
          \ Windows authentication. When set to <code>true</code>, Windows authentication\
          \ is attempted; when set to <code>false</code>, SQL authentication is attempted.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >domain</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The address of the domain. This property cannot\
          \ be specified unless property <code>useWindowsAuthentication</code> is\
          \ set to <code>true</code>.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`mysql` supported properties:\n<div class=\"properties\">\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database. If not specified, a default database name\
          \ will be used during authentication.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ Notes ID password. <strong>Note: This property is not returned in responses\
          \ for security.</strong></p></div>\n</div> \n</div>\n\n`notes` supported\
          \ properties:\n<div class=\"properties\"> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">notesIDPassword</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`oracle` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">sid</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database. If not specified, a default database name\
          \ will be used during authentication.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">enumerateSids</span>\
          \ <span class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag instructing the scan engine to attempt to enumerate\
          \ SIDs from your environment. If set to <code>true</code>, set the Oracle\
          \ Net Listener password in property <code>oracleListenerPassword</code>.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >oracleListenerPassword</span> <span class=\"param-type\">string</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The Oracle Net Listener password.\
          \ Used to enumerate SIDs from your environment.</p></div>\n</div> \n</div>\n\
          \n`pop` supported properties:\n<div class=\"properties\"> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`postgresql` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`remote-exec` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`snmp` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">communityName</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ community name that will be used for authenticating. <strong>Note: This\
          \ property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`snmpv3` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">authenticationType</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"param-enum\"> \n<span class=\"\
          param-enum-value string\">\"no-authentication\"</span> \n<span class=\"\
          param-enum-value string\">\"md5\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sha\"</span> \n</div> \n<div class=\"redoc-markdown-block\"\
          ><p>The authentication protocols available to use in SNMP v3.</p></div>\n\
          </div>\n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe password for the account that will be used for authenticating.\
          \ Is required when the property <code>authenticationType</code> is set to\
          \ valid value other than <code>\"no-authentication\"</code>. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >privacyType</span> <span class=\"param-type\">string</span> \n<div class=\"\
          param-enum\"> \n<span class=\"param-enum-value string\">\"no-privacy\"</span>\
          \ \n<span class=\"param-enum-value string\">\"des\"</span> \n<span class=\"\
          param-enum-value string\">\"aes-128\"</span> \n<span class=\"param-enum-value\
          \ string\">\"aes-192\"</span> \n<span class=\"param-enum-value string\"\
          >\"aes-192-with-3-des-key-extension\"</span> \n<span class=\"param-enum-value\
          \ string\">\"aes-256\"</span> \n<span class=\"param-enum-value string\"\
          >\"aes-265-with-3-des-key-extension\"</span> \n</div> \n<div class=\"redoc-markdown-block\"\
          ><p>The privacy protocols available to use in SNMP v3.</p></div>\n</div>\n\
          <div class=\"property-info\"> \n<span class=\"property-name\">privacyPassword</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe privacy password for the account that will be used for authenticating.\
          \ Is required when the property <code>authenticationType</code> is set to\
          \ valid value other than <code>\"no-authentication\"</code> and when the\
          \ <code>privacyType</code> is set to a valid value other than code>\"no-privacy\"\
          </code>. <strong>Note: This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n</div>\n\n`ssh` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">permissionElevation</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"param-enum\">\
          \ \n<span class=\"param-enum-value string\">\"none\"</span> \n<span class=\"\
          param-enum-value string\">\"sudo\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sudosu\"</span> \n<span class=\"param-enum-value string\">\"\
          su\"</span> \n<span class=\"param-enum-value string\">\"pbrun\"</span> \n\
          <span class=\"param-enum-value string\">\"privileged-exec\"</span> \n</div>\
          \ \n<div class=\"redoc-markdown-block\">\n<p>\nElevate scan engine permissions\
          \ to administrative or root access, which is necessary to obtain certain\
          \ data during the scan. Defaults to <code>\"none\"</code> if not specified.\
          \ </p>\n</div>\n</div>\n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >permissionElevationUsername</span> <span class=\"param-type\">string</span>\
          \ \n<div class=\"redoc-markdown-block\">\n<p>\nThe user name for the account\
          \ with elevated permissions. This property must not be specified when the\
          \ property <code>permissionElevation</code> is set to either <code>\"none\"\
          </code> or <code>\"pbrun\"</code>; otherwise the property is required.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >password</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\">\n<p>\nThe password for the account with elevated\
          \ permissions. This property must not be specified when the property <code>permissionElevation</code>\
          \ is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise\
          \ the property is required.<strong>Note: This property is not returned in\
          \ responses for security.</strong></p>\n</div>\n</div> \n</div>\n\n`ssh-key`\
          \ supported properties:\n<div class=\"properties\"> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">privateKeyPassword</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The password for private key. <strong>Note: This property is not returned\
          \ in responses for security.</strong></p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">pemKey</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The PEM-format\
          \ private key. <strong>Note: This property is not returned in responses\
          \ for security.</strong></p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">permissionElevation</span> <span class=\"\
          param-type\">string</span> \n<div class=\"param-enum\"> \n<span class=\"\
          param-enum-value string\">\"none\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sudo\"</span> \n<span class=\"param-enum-value string\">\"\
          sudosu\"</span> \n<span class=\"param-enum-value string\">\"su\"</span>\
          \ \n<span class=\"param-enum-value string\">\"pbrun\"</span> \n<span class=\"\
          param-enum-value string\">\"privileged-exec\"</span> \n</div> \n<div class=\"\
          redoc-markdown-block\">\n<p>\nElevate scan engine permissions to administrative\
          \ or root access, which is necessary to obtain certain data during the scan.\
          \ Defaults to <code>\"none\"</code> if not specified. </p>\n</div>\n</div>\n\
          <div class=\"property-info\"> \n<span class=\"property-name\">permissionElevationUsername</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe user name for the account with elevated permissions. This property\
          \ must not be specified when the property <code>permissionElevation</code>\
          \ is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise\
          \ the property is required.</p>\n</div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">password</span> <span class=\"param-type\"\
          >string</span> \n<div class=\"redoc-markdown-block\">\n<p>\nThe password\
          \ for the account with elevated permissions. This property must not be specified\
          \ when the property <code>permissionElevation</code> is set to either <code>\"\
          none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.<strong>Note:\
          \ This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n</div>\n\n`sybase` supported properties:\n<div class=\"\
          properties\"> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >database</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The name of the database. If not specified, a\
          \ default database name will be used during authentication.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">useWindowsAuthentication</span>\
          \ <span class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag signaling whether to connect to the database using\
          \ Windows authentication. When set to <code>true</code>, Windows authentication\
          \ is attempted; when set to <code>false</code>, SQL authentication is attempted.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >domain</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The address of the domain. This property cannot\
          \ be specified unless property <code>useWindowsAuthentication</code> is\
          \ set to <code>true</code>.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`telnet` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n"
        example: ''
      description:
        description: The description of the credential.
        example: ''
        type: string
      hostRestriction:
        description: The host name or IP address that you want to restrict the credentials
          to.
        example: ''
        type: string
      id:
        description: The identifier of the credential.
        example: ''
        format: int32
        type: integer
      name:
        description: The name of the credential.
        example: ''
        type: string
      portRestriction:
        description: Further restricts the credential to attempt to authenticate on
          a specific port. The port can only be restricted if the property `hostRestriction`
          is specified.
        example: ''
        format: int32
        maximum: 65535
        minimum: 1
        type: integer
      siteAssignment:
        description: "Assigns the shared scan credential either to be available to\
          \ all sites or to a specific list of sites.\nThe following table describes\
          \ each supported value: \n| Value | Description | \n| ---------- | ----------------\
          \ | \n| `\"all-sites\"` | The shared scan credential is assigned to all\
          \ current and future sites. | \n| `\"specific-sites\"` | The shared scan\
          \ credential is assigned to zero sites by default. Administrators must explicitly\
          \ assign sites to the shared credential. | \nShared scan credentials assigned\
          \ to a site can disabled within the site configuration, if needed."
        example: ''
        type: string
      sites:
        description: List of site identifiers. These sites are explicitly assigned
          access to the shared scan credential, allowing the site to use the credential
          for authentication during a scan. This property can only be set if the value
          of property `siteAssignment` is set to `"specific-sites"`. When the property
          `siteAssignment` is set to `"all-sites"`, this property will be `null`.
        items:
          format: int32
          type: integer
        type: array
    required:
    - account
    - name
    - siteAssignment
    type: object
  SharedCredentialAccount:
    description: ''
    properties:
      authenticationType:
        type: string
      communityName:
        type: string
      database:
        type: string
      domain:
        type: string
      enumerateSids:
        type: boolean
      notesIDPassword:
        type: string
      ntlmHash:
        type: string
      oracleListenerPassword:
        type: string
      password:
        type: string
      pemKey:
        type: string
      permissionElevation:
        type: string
      permissionElevationPassword:
        type: string
      permissionElevationUsername:
        type: string
      privacyPassword:
        type: string
      privacyType:
        type: string
      privateKeyPassword:
        type: string
      realm:
        type: string
      service:
        type: string
      sid:
        type: string
      useWindowsAuthentication:
        type: boolean
      username:
        type: string
    type: object
  Site:
    description: ''
    properties:
      assets:
        description: The number of assets that belong to the site.
        example: 768
        format: int32
        readOnly: true
        type: integer
      connectionType:
        description: The type of discovery connection configured for the site. This
          property only applies to dynamic sites.
        enum:
        - activesync-ldap
        - activesync-office365
        - activesync-powershell
        - aws
        - dhcp
        - sonar
        - vsphere
        example: ''
        readOnly: true
        type: string
      description:
        description: The site description.
        example: ''
        type: string
      id:
        description: The identifier of the site.
        example: ''
        format: int32
        type: integer
      importance:
        description: The site importance.
        example: ''
        type: string
      lastScanTime:
        description: The date and time of the site's last scan.
        example: ''
        readOnly: true
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The site name.
        example: ''
        type: string
      riskScore:
        description: The risk score (with criticality adjustments) of the site.
        example: 4457823.78
        format: double
        readOnly: true
        type: number
      scanEngine:
        description: The identifier of the scan engine configured in the site.
        example: ''
        format: int32
        type: integer
      scanTemplate:
        description: The identifier of the scan template configured in the site.
        example: ''
        type: string
      type:
        description: The type of the site.
        enum:
        - agent
        - dynamic
        - static
        example: ''
        readOnly: true
        type: string
      vulnerabilities:
        $ref: '#/definitions/Vulnerabilities'
        description: Summary information for distinct vulnerabilities found on the
          assets.
        example: ''
        readOnly: true
    type: object
  SiteCreateResource:
    description: ''
    properties:
      description:
        description: The site's description.
        example: ''
        type: string
      engineId:
        description: The identifier of a scan engine. Default scan engine is selected
          when not specified.
        example: ''
        format: int32
        type: integer
      importance:
        description: The site importance. Defaults to `"normal"` if not specified.
        enum:
        - very_low
        - low
        - normal
        - high
        - very_high
        example: ''
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The site name. Name must be unique.
        example: ''
        type: string
      scan:
        $ref: '#/definitions/ScanScope'
        description: Defines the scope of scan targets for the site, which can be
          addresses, or asset groups, for static sites and a discovery configuration
          for dynamic sites. Only one property must be set by the user when saving
          a site.
        example: ''
      scanTemplateId:
        description: The identifier of a scan template. Default scan template is selected
          when not specified.
        example: ''
        type: string
    required:
    - name
    type: object
  SiteCredential:
    description: ''
    properties:
      account:
        $ref: '#/definitions/Account'
        description: "Specify the type of service to authenticate as well as all of\
          \ the information required by that service. <div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">service</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"param-enum\">\
          \ \n<span class=\"param-enum-value string\">\"as400\"</span> \n<span class=\"\
          param-enum-value string\">\"cifs\"</span> \n<span class=\"param-enum-value\
          \ string\">\"cifshash\"</span> \n<span class=\"param-enum-value string\"\
          >\"cvs\"</span> \n<span class=\"param-enum-value string\">\"db2\"</span>\
          \ \n<span class=\"param-enum-value string\">\"ftp\"</span> \n<span class=\"\
          param-enum-value string\">\"http\"</span> \n<span class=\"param-enum-value\
          \ string\">\"ms-sql\"</span> \n<span class=\"param-enum-value string\">\"\
          mysql\"</span> \n<span class=\"param-enum-value string\">\"notes\"</span>\
          \ \n<span class=\"param-enum-value string\">\"oracle\"</span> \n<span class=\"\
          param-enum-value string\">\"pop\"</span> \n<span class=\"param-enum-value\
          \ string\">\"postgresql\"</span> \n<span class=\"param-enum-value string\"\
          >\"remote-exec\"</span> \n<span class=\"param-enum-value string\">\"snmp\"\
          </span> \n<span class=\"param-enum-value string\">\"snmpv3\"</span> \n<span\
          \ class=\"param-enum-value string\">\"ssh\"</span> \n<span class=\"param-enum-value\
          \ string\">\"ssh-key\"</span> \n<span class=\"param-enum-value string\"\
          >\"sybase\"</span> \n<span class=\"param-enum-value string\">\"telnet\"\
          </span> \n</div> \n<div class=\"redoc-markdown-block\">The type of service\
          \ to authenticate with.</div>\n</div> \n</div>\n\nThe following are the\
          \ names of the valid values for service: \n| Value         | Service   \
          \                                      | \n| ------------- | -----------------------------------------------\
          \ | \n| `as400`       | IBM AS/400                                     \
          \ | \n| `cifs`        | Microsoft Windows/Samba (SMB/CIFS)             \
          \ | \n| `cifshash`    | Microsoft Windows/Samba LM/NTLM Hash (SMB/CIFS)\
          \ | \n| `cvs`         | Concurrent Versioning System (CVS)             \
          \ | \n| `db2`         | DB2                                            \
          \ | \n| `ftp`         | File Transfer Protocol (FTP)                   \
          \ | \n| `http`        | Web Site HTTP Authentication                   \
          \ | \n| `ms-sql`      | Microsoft SQL Server                           \
          \ | \n| `mysql`       | MySQL Server                                   \
          \ | \n| `notes`       | Lotus Notes/Domino                             \
          \ | \n| `oracle`      | Oracle                                         \
          \ | \n| `pop`         | Post Office Protocol (POP)                     \
          \ | \n| `postgresql`  | PostgreSQL                                     \
          \ | \n| `remote-exec` | Remote Execution                               \
          \ | \n| `snmp`        | Simple Network Management Protocol v1/v2c      \
          \ | \n| `snmpv3`      | Simple Network Management Protocol v3          \
          \ | \n| `ssh`         | Secure Shell (SSH)                             \
          \ | \n| `ssh-key`     | Secure Shell (SSH) Public Key                  \
          \ | \n| `sybase`      | Sybase SQL Server                              \
          \ | \n| `telnet`      | Telnet                                         \
          \ | \n\n<p>The following is a specification of supported credential properties\
          \ for each type of service. These properties are to be specified within\
          \ the <code>account</code> object.</p>\n\n`as400` supported properties:\n\
          <div class=\"properties\"> \n<div class=\"property-info\"> \n<span class=\"\
          property-name\">domain</span> <span class=\"param-type\">string</span> \n\
          <div class=\"redoc-markdown-block\"><p>The address of the domain.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`cifs` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`cifshash` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">ntlmHash</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The NTLM password\
          \ hash. <strong>Note: This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`cvs` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">domain</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The address of the domain.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`db2` supported properties:\n<div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`ftp` supported properties:\n<div class=\"properties\"> \n\
          <div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`http` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">realm</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The realm.</p></div>\n</div> \n<div class=\"property-info\"> \n<span\
          \ class=\"property-name\">username</span> <span class=\"param-type\">string</span>\
          \ <span _ngcontent-c21 class=\"param-required\">Required</span> \n<div class=\"\
          redoc-markdown-block\"><p>The user name for the account that will be used\
          \ for authenticating.</p></div>\n</div> \n<div class=\"property-info\">\
          \ \n<span class=\"property-name\">password</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The password for the account\
          \ that will be used for authenticating. <strong>Note: This property is not\
          \ returned in responses for security.</strong></p></div>\n</div> \n</div>\n\
          \n`ms-sql` supported properties:\n<div class=\"properties\"> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">database</span> <span class=\"\
          param-type\">string</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ name of the database. If not specified, a default database name will be\
          \ used during authentication.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">useWindowsAuthentication</span> <span\
          \ class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag signaling whether to connect to the database using\
          \ Windows authentication. When set to <code>true</code>, Windows authentication\
          \ is attempted; when set to <code>false</code>, SQL authentication is attempted.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >domain</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The address of the domain. This property cannot\
          \ be specified unless property <code>useWindowsAuthentication</code> is\
          \ set to <code>true</code>.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`mysql` supported properties:\n<div class=\"properties\">\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database. If not specified, a default database name\
          \ will be used during authentication.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ Notes ID password. <strong>Note: This property is not returned in responses\
          \ for security.</strong></p></div>\n</div> \n</div>\n\n`notes` supported\
          \ properties:\n<div class=\"properties\"> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">notesIDPassword</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`oracle` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">sid</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database. If not specified, a default database name\
          \ will be used during authentication.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">enumerateSids</span>\
          \ <span class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag instructing the scan engine to attempt to enumerate\
          \ SIDs from your environment. If set to <code>true</code>, set the Oracle\
          \ Net Listener password in property <code>oracleListenerPassword</code>.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >oracleListenerPassword</span> <span class=\"param-type\">string</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The Oracle Net Listener password.\
          \ Used to enumerate SIDs from your environment.</p></div>\n</div> \n</div>\n\
          \n`pop` supported properties:\n<div class=\"properties\"> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">username</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The user name\
          \ for the account that will be used for authenticating.</p></div>\n</div>\
          \ \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`postgresql` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">database</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The name of the database.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`remote-exec` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`snmp` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">communityName</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ community name that will be used for authenticating. <strong>Note: This\
          \ property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n`snmpv3` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">authenticationType</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"param-enum\"> \n<span class=\"\
          param-enum-value string\">\"no-authentication\"</span> \n<span class=\"\
          param-enum-value string\">\"md5\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sha\"</span> \n</div> \n<div class=\"redoc-markdown-block\"\
          ><p>The authentication protocols available to use in SNMP v3.</p></div>\n\
          </div>\n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe password for the account that will be used for authenticating.\
          \ Is required when the property <code>authenticationType</code> is set to\
          \ valid value other than <code>\"no-authentication\"</code>. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >privacyType</span> <span class=\"param-type\">string</span> \n<div class=\"\
          param-enum\"> \n<span class=\"param-enum-value string\">\"no-privacy\"</span>\
          \ \n<span class=\"param-enum-value string\">\"des\"</span> \n<span class=\"\
          param-enum-value string\">\"aes-128\"</span> \n<span class=\"param-enum-value\
          \ string\">\"aes-192\"</span> \n<span class=\"param-enum-value string\"\
          >\"aes-192-with-3-des-key-extension\"</span> \n<span class=\"param-enum-value\
          \ string\">\"aes-256\"</span> \n<span class=\"param-enum-value string\"\
          >\"aes-265-with-3-des-key-extension\"</span> \n</div> \n<div class=\"redoc-markdown-block\"\
          ><p>The privacy protocols available to use in SNMP v3.</p></div>\n</div>\n\
          <div class=\"property-info\"> \n<span class=\"property-name\">privacyPassword</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe privacy password for the account that will be used for authenticating.\
          \ Is required when the property <code>authenticationType</code> is set to\
          \ valid value other than <code>\"no-authentication\"</code> and when the\
          \ <code>privacyType</code> is set to a valid value other than code>\"no-privacy\"\
          </code>. <strong>Note: This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n</div>\n\n`ssh` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">permissionElevation</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"param-enum\">\
          \ \n<span class=\"param-enum-value string\">\"none\"</span> \n<span class=\"\
          param-enum-value string\">\"sudo\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sudosu\"</span> \n<span class=\"param-enum-value string\">\"\
          su\"</span> \n<span class=\"param-enum-value string\">\"pbrun\"</span> \n\
          <span class=\"param-enum-value string\">\"privileged-exec\"</span> \n</div>\
          \ \n<div class=\"redoc-markdown-block\">\n<p>\nElevate scan engine permissions\
          \ to administrative or root access, which is necessary to obtain certain\
          \ data during the scan. Defaults to <code>\"none\"</code> if not specified.\
          \ </p>\n</div>\n</div>\n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >permissionElevationUsername</span> <span class=\"param-type\">string</span>\
          \ \n<div class=\"redoc-markdown-block\">\n<p>\nThe user name for the account\
          \ with elevated permissions. This property must not be specified when the\
          \ property <code>permissionElevation</code> is set to either <code>\"none\"\
          </code> or <code>\"pbrun\"</code>; otherwise the property is required.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >password</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\">\n<p>\nThe password for the account with elevated\
          \ permissions. This property must not be specified when the property <code>permissionElevation</code>\
          \ is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise\
          \ the property is required.<strong>Note: This property is not returned in\
          \ responses for security.</strong></p>\n</div>\n</div> \n</div>\n\n`ssh-key`\
          \ supported properties:\n<div class=\"properties\"> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">privateKeyPassword</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          ><p>The password for private key. <strong>Note: This property is not returned\
          \ in responses for security.</strong></p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">pemKey</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The PEM-format\
          \ private key. <strong>Note: This property is not returned in responses\
          \ for security.</strong></p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">permissionElevation</span> <span class=\"\
          param-type\">string</span> \n<div class=\"param-enum\"> \n<span class=\"\
          param-enum-value string\">\"none\"</span> \n<span class=\"param-enum-value\
          \ string\">\"sudo\"</span> \n<span class=\"param-enum-value string\">\"\
          sudosu\"</span> \n<span class=\"param-enum-value string\">\"su\"</span>\
          \ \n<span class=\"param-enum-value string\">\"pbrun\"</span> \n<span class=\"\
          param-enum-value string\">\"privileged-exec\"</span> \n</div> \n<div class=\"\
          redoc-markdown-block\">\n<p>\nElevate scan engine permissions to administrative\
          \ or root access, which is necessary to obtain certain data during the scan.\
          \ Defaults to <code>\"none\"</code> if not specified. </p>\n</div>\n</div>\n\
          <div class=\"property-info\"> \n<span class=\"property-name\">permissionElevationUsername</span>\
          \ <span class=\"param-type\">string</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nThe user name for the account with elevated permissions. This property\
          \ must not be specified when the property <code>permissionElevation</code>\
          \ is set to either <code>\"none\"</code> or <code>\"pbrun\"</code>; otherwise\
          \ the property is required.</p>\n</div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">password</span> <span class=\"param-type\"\
          >string</span> \n<div class=\"redoc-markdown-block\">\n<p>\nThe password\
          \ for the account with elevated permissions. This property must not be specified\
          \ when the property <code>permissionElevation</code> is set to either <code>\"\
          none\"</code> or <code>\"pbrun\"</code>; otherwise the property is required.<strong>Note:\
          \ This property is not returned in responses for security.</strong></p>\n\
          </div>\n</div> \n</div>\n\n`sybase` supported properties:\n<div class=\"\
          properties\"> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >database</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The name of the database. If not specified, a\
          \ default database name will be used during authentication.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">useWindowsAuthentication</span>\
          \ <span class=\"param-type\">boolean</span> \n<div class=\"redoc-markdown-block\"\
          >\n<p>\nBoolean flag signaling whether to connect to the database using\
          \ Windows authentication. When set to <code>true</code>, Windows authentication\
          \ is attempted; when set to <code>false</code>, SQL authentication is attempted.</p>\n\
          </div>\n</div> \n<div class=\"property-info\"> \n<span class=\"property-name\"\
          >domain</span> <span class=\"param-type\">string</span> \n<div class=\"\
          redoc-markdown-block\"><p>The address of the domain. This property cannot\
          \ be specified unless property <code>useWindowsAuthentication</code> is\
          \ set to <code>true</code>.</p></div>\n</div> \n<div class=\"property-info\"\
          > \n<span class=\"property-name\">username</span> <span class=\"param-type\"\
          >string</span> <span _ngcontent-c21 class=\"param-required\">Required</span>\
          \ \n<div class=\"redoc-markdown-block\"><p>The user name for the account\
          \ that will be used for authenticating.</p></div>\n</div> \n<div class=\"\
          property-info\"> \n<span class=\"property-name\">password</span> <span class=\"\
          param-type\">string</span> <span _ngcontent-c21 class=\"param-required\"\
          >Required</span> \n<div class=\"redoc-markdown-block\"><p>The password for\
          \ the account that will be used for authenticating. <strong>Note: This property\
          \ is not returned in responses for security.</strong></p></div>\n</div>\
          \ \n</div>\n\n`telnet` supported properties:\n<div class=\"properties\"\
          > \n<div class=\"property-info\"> \n<span class=\"property-name\">username</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ user name for the account that will be used for authenticating.</p></div>\n\
          </div> \n<div class=\"property-info\"> \n<span class=\"property-name\">password</span>\
          \ <span class=\"param-type\">string</span> <span _ngcontent-c21 class=\"\
          param-required\">Required</span> \n<div class=\"redoc-markdown-block\"><p>The\
          \ password for the account that will be used for authenticating. <strong>Note:\
          \ This property is not returned in responses for security.</strong></p></div>\n\
          </div> \n</div>\n\n"
        example: ''
      description:
        description: The description of the credential.
        example: ''
        type: string
      enabled:
        description: Flag indicating whether the credential is enabled for use during
          the scan.
        example: false
        type: boolean
      hostRestriction:
        description: The host name or IP address that you want to restrict the credentials
          to.
        example: ''
        type: string
      id:
        description: The identifier of the credential.
        example: ''
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The name of the credential.
        example: ''
        type: string
      portRestriction:
        description: Further restricts the credential to attempt to authenticate on
          a specific port. The port can only be restricted if the property `hostRestriction`
          is specified.
        example: ''
        format: int32
        maximum: 65535
        minimum: 1
        type: integer
    required:
    - account
    - name
    type: object
  SiteDiscoveryConnection:
    description: ''
    properties:
      id:
        description: The identifier of the discovery connection.
        example: ''
        format: int64
        readOnly: true
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the discovery connection.
        example: ''
        readOnly: true
        type: string
      type:
        description: The type of discovery connection configured for the site. This
          property only applies to dynamic sites.
        enum:
        - activesync-ldap
        - activesync-office365
        - activesync-powershell
        - aws
        - dhcp
        - sonar
        - vsphere
        example: ''
        readOnly: true
        type: string
    type: object
  SiteOrganization:
    description: ''
    properties:
      address:
        description: The address.
        example: ''
        type: string
      city:
        description: The city.
        example: ''
        type: string
      contact:
        description: The contact person name.
        example: ''
        type: string
      country:
        description: The country.
        example: ''
        type: string
      email:
        description: The e-mail address.
        example: ''
        type: string
      jobTitle:
        description: The job title.
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The organization name.
        example: ''
        type: string
      phone:
        description: The phone number.
        example: ''
        type: string
      state:
        description: The state.
        example: ''
        type: string
      url:
        description: The organization URL.
        example: ''
        type: string
      zipCode:
        description: The zip or region code.
        example: ''
        type: string
    type: object
  SiteSharedCredential:
    description: ''
    properties:
      enabled:
        description: Flag indicating whether the shared credential is enabled for
          the site's scans.
        example: false
        readOnly: true
        type: boolean
      id:
        description: The identifier of the shared credential.
        example: ''
        format: int32
        readOnly: true
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the shared credential.
        example: ''
        readOnly: true
        type: string
      service:
        description: The type of service the credential is configured to authenticate
          with.
        enum:
        - as400
        - cifs
        - cifshash
        - cvs
        - db2
        - ftp
        - http
        - ms-sql
        - mysql
        - notes
        - oracle
        - pop
        - postgresql
        - remote-exec
        - snmp
        - snmpv3
        - ssh
        - ssh-key
        - sybase
        - telnet
        example: ''
        readOnly: true
        type: string
    type: object
  SiteUpdateResource:
    description: ''
    properties:
      description:
        description: The site's description.
        example: ''
        type: string
      engineId:
        description: The identifier of a scan engine.
        example: ''
        format: int32
        type: integer
      importance:
        description: The site importance.
        enum:
        - very_low
        - low
        - normal
        - high
        - very_high
        example: ''
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The site name. Name must be unique.
        example: ''
        type: string
      scanTemplateId:
        description: The identifier of a scan template.
        example: ''
        type: string
    required:
    - engineId
    - importance
    - name
    - scanTemplateId
    type: object
  SmtpAlert:
    description: ''
    properties:
      enabled:
        description: Flag indicating the alert is enabled.
        example: false
        type: boolean
      enabledScanEvents:
        $ref: '#/definitions/ScanEvents'
        description: Allows the user to specify which scan events generate an alert.
          Default values will be chosen if property is not specified as apart of the
          request. The default values are documented in the properties of `enabledScanEvents`.
        example: ''
      enabledVulnerabilityEvents:
        $ref: '#/definitions/VulnerabilityEvents'
        description: Allows the user to specify which vulnerability result events
          generate an alert. Default values will be chosen if property is not specified
          as apart of the request. The default values are documented in the properties
          of `enabledVulnerabilityEvents`.
        example: ''
      id:
        description: The identifier of the alert.
        example: ''
        format: int32
        type: integer
      limitAlertText:
        description: Reports basic information in the alert, if enabled.
        example: false
        type: boolean
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      maximumAlerts:
        description: The maximum number of alerts that will be issued. To disable
          maximum alerts, omit the property in the request or specify the property
          with a value of `null`.
        example: ''
        format: int32
        minimum: 1
        type: integer
      name:
        description: The name of the alert.
        example: ''
        type: string
      notification:
        description: The type of alert.
        enum:
        - SMTP
        - SNMP
        - Syslog
        example: ''
        type: string
      recipients:
        description: The recipient list. At least one recipient must be specified.
          Each recipient must be a valid e-mail address.
        items:
          type: string
        type: array
      relayServer:
        description: The SMTP server/relay to send messages through.
        example: ''
        type: string
      senderEmailAddress:
        description: The sender e-mail address that will appear in the from field.
        example: ''
        type: string
    required:
    - enabled
    - name
    - notification
    - recipients
    - relayServer
    type: object
  SmtpSettings:
    description: ''
    properties:
      host:
        description: The host to send to.
        example: mail@acme.com
        type: string
      port:
        description: The port to send to.
        example: 25
        format: int32
        type: integer
      sender:
        description: The sender to send from.
        example: security@acme.com
        type: string
    type: object
  SnmpAlert:
    description: ''
    properties:
      community:
        description: The SNMP community name.
        example: ''
        type: string
      enabled:
        description: Flag indicating the alert is enabled.
        example: false
        type: boolean
      enabledScanEvents:
        $ref: '#/definitions/ScanEvents'
        description: Allows the user to specify which scan events generate an alert.
          Default values will be chosen if property is not specified as apart of the
          request. The default values are documented in the properties of `enabledScanEvents`.
        example: ''
      enabledVulnerabilityEvents:
        $ref: '#/definitions/VulnerabilityEvents'
        description: Allows the user to specify which vulnerability result events
          generate an alert. Default values will be chosen if property is not specified
          as apart of the request. The default values are documented in the properties
          of `enabledVulnerabilityEvents`.
        example: ''
      id:
        description: The identifier of the alert.
        example: ''
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      maximumAlerts:
        description: The maximum number of alerts that will be issued. To disable
          maximum alerts, omit the property in the request or specify the property
          with a value of `null`.
        example: ''
        format: int32
        minimum: 1
        type: integer
      name:
        description: The name of the alert.
        example: ''
        type: string
      notification:
        description: The type of alert.
        enum:
        - SMTP
        - SNMP
        - Syslog
        example: ''
        type: string
      server:
        description: The SNMP management server.
        example: ''
        type: string
    required:
    - community
    - enabled
    - name
    - notification
    - server
    type: object
  Software:
    description: ''
    properties:
      configurations:
        description: ${software.attributes.description}
        items:
          $ref: '#/definitions/Configuration'
        type: array
      cpe:
        $ref: '#/definitions/SoftwareCpe'
        description: The Common Platform Enumeration (CPE) of the software.
        example: ''
      description:
        description: The description of the software.
        example: Microsoft Outlook 2013 15.0.4867.1000
        type: string
      family:
        description: The family of the software.
        example: Office 2013
        type: string
      id:
        format: int64
        type: integer
      product:
        description: The product of the software.
        example: Outlook 2013
        type: string
      type:
        description: The version of the software.
        example: Productivity
        type: string
      vendor:
        description: The vendor of the software.
        example: Microsoft
        type: string
      version:
        description: The version of the software.
        example: 15.0.4867.1000
        type: string
    type: object
  SoftwareCpe:
    description: ''
    properties:
      edition:
        description: 'Edition-related terms applied by the vendor to the product. '
        example: enterprise
        type: string
      language:
        description: Defines the language supported in the user interface of the product
          being described. The format is of the language tag adheres to <a target="_blank"
          href="https://tools.ietf.org/html/rfc5646">RFC5646</a>.
        example: ''
        type: string
      other:
        description: 'Captures any other general descriptive or identifying information
          which is vendor- or product-specific and which does not logically fit in
          any other attribute value. '
        example: ''
        type: string
      part:
        description: A single letter code that designates the particular platform
          part that is being identified.
        enum:
        - o
        - a
        - h
        example: o
        type: string
      product:
        description: the most common and recognizable title or name of the product.
        example: windows_server_2008
        type: string
      swEdition:
        description: 'Characterizes how the product is tailored to a particular market
          or class of end users. '
        example: ''
        type: string
      targetHW:
        description: 'Characterize the instruction set architecture on which the product
          operates. '
        example: ''
        type: string
      targetSW:
        description: Characterize the software computing environment within which
          the product operates.
        example: ''
        type: string
      update:
        description: Vendor-specific alphanumeric strings characterizing the particular
          update, service pack, or point release of the product.
        example: sp1
        type: string
      v2.2:
        description: The full CPE string in the <a target="_blank" href="https://cpe.mitre.org/files/cpe-specification_2.2.pdf">CPE
          2.2</a> format.
        example: cpe:/o:microsoft:windows_server_2008:-:sp1:enterprise
        type: string
      v2.3:
        description: The full CPE string in the <a target="_blank" href="http://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf">CPE
          2.3</a> format.
        example: cpe:2.3:o:microsoft:windows_server_2008:-:sp1:enterprise:*:*:*:*:*
        type: string
      vendor:
        description: The person or organization that manufactured or created the product.
        example: microsoft
        type: string
      version:
        description: Vendor-specific alphanumeric strings characterizing the particular
          release version of the product.
        example: '-'
        type: string
    required:
    - part
    type: object
  Solution:
    description: ''
    properties:
      additionalInformation:
        $ref: '#/definitions/AdditionalInformation'
        description: Additional information or resources that can assist in applying
          the remediation.
        example: ''
      appliesTo:
        description: The systems or software the solution applies to.
        example: libexpat1 on Ubuntu Linux
        type: string
      estimate:
        description: 'The estimated duration to apply the solution, in ISO 8601 format.
          For example: `"PT5M"`.'
        example: PT10M
        type: string
      id:
        description: The identifier of the solution.
        example: ubuntu-upgrade-libexpat1
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      steps:
        $ref: '#/definitions/Steps'
        description: The steps required to remediate the vulnerability.
        example: ''
      summary:
        $ref: '#/definitions/Summary'
        description: The summary of the solution.
        example: ''
      type:
        description: 'The type of the solution. One of: `"Configuration"`, `"Rollup
          patch"`, `"Patch"`'
        enum:
        - configuration
        - rollup-patch
        - patch
        - unknown
        example: configuration
        type: string
    type: object
  SolutionMatch:
    description: ''
    properties:
      check:
        description: The identifier of the vulnerability check used to match the solution,
          if type is `check`.
        example: ''
        type: string
      confidence:
        description: The confidence of the matching process for the solution.
        enum:
        - exact
        - partial
        - none
        example: ''
        type: string
      fingerprint:
        $ref: '#/definitions/Fingerprint'
        description: The fingerprint used to perform solution matching, if type is
          `operating-system`, `service`, or `software`.
        example: ''
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      solution:
        description: The identifier of the matched solution.
        example: ubuntu-upgrade-libexpat1
        type: string
      type:
        description: The means by which a solution was matched.
        enum:
        - none
        - check
        - operating-system
        - service
        - software
        example: software
        type: string
    type: object
  SonarCriteria:
    description: ''
    properties:
      filters:
        description: The filters in the Sonar query.
        items:
          $ref: '#/definitions/SonarCriterion'
        type: array
    type: object
  SonarCriterion:
    description: ''
    properties:
      days:
        description: If the field is `scan-date-within-the-last`, the number of days
          to search against.
        example: ''
        format: int32
        type: integer
      lower:
        description: If the field is `ip-address-range`, the lower limit of the search.
        example: ''
        type: string
      searchDomain:
        description: If the field is `domain-contains`, the domain to search against.
        example: acme.com
        type: string
      type:
        description: The type of query to perform.
        enum:
        - domain-contains
        - scan-date-within-the-last
        - ip-address-range
        example: domain-contains
        type: string
      upper:
        description: If the field is `ip-address-range`, the upper limit of the search.
        example: ''
        type: string
    type: object
  SonarQuery:
    description: ''
    properties:
      criteria:
        $ref: '#/definitions/SonarCriteria'
        description: The search criteria used to search for assets from the Sonar
          API.
        example: ''
      id:
        description: The identifier of the Sonar query.
        example: 14
        format: int64
        readOnly: true
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The name of the Sonar query.
        example: Assets in Domain
        type: string
    type: object
  StaticSite:
    description: ''
    properties:
      excludedAssetGroups:
        $ref: '#/definitions/ExcludedAssetGroups'
        description: Assets associated with these asset groups will be excluded from
          the site's scan.
        example: ''
      excludedTargets:
        $ref: '#/definitions/ExcludedScanTargets'
        description: Addresses to be excluded from the site's scan. Each address is
          a string that can represent either a hostname, ipv4 address, ipv4 address
          range, ipv6 address, or CIDR notation.
        example: ''
      includedAssetGroups:
        $ref: '#/definitions/IncludedAssetGroups'
        description: Assets associated with these asset groups will be included in
          the site's scan.
        example: ''
      includedTargets:
        $ref: '#/definitions/IncludedScanTargets'
        description: Addresses to be included in the site's scan. At least one address
          must be specified in a static site. Each address is a string that can represent
          either a hostname, ipv4 address, ipv4 address range, ipv6 address, or CIDR
          notation.
        example: ''
    type: object
  Steps:
    description: ''
    properties:
      html:
        description: Textual representation of the content.
        example: "<p>\n    Use `apt-get upgrade` to upgrade libexpat1 to the latest\
          \ version.\n  </p>"
        type: string
      text:
        description: Textual representation of the content.
        example: Use `apt-get upgrade` to upgrade libexpat1 to the latest version.
        type: string
    type: object
  Submission:
    description: ''
    properties:
      comment:
        description: A comment from the submitter as to why the exception was submitted.
        example: ''
        type: string
      date:
        description: The date and time the vulnerability exception was submitted.
        example: ''
        readOnly: true
        type: string
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The login name of the user that submitted the vulnerability exception.
        example: ''
        readOnly: true
        type: string
      reason:
        description: 'The reason the vulnerability exception was submitted. One of:
          `"False Positive"`, `"Compensating Control"`, `"Acceptable Use"`, `"Acceptable
          Risk"`, `"Other"`'
        example: ''
        type: string
      user:
        description: The identifier of the user that submitted the vulnerability exception.
        example: ''
        format: int32
        readOnly: true
        type: integer
    type: object
  Summary:
    description: ''
    properties:
      html:
        description: Textual representation of the content.
        example: Upgrade libexpat1
        type: string
      text:
        description: Textual representation of the content.
        example: Upgrade libexpat1
        type: string
    type: object
  SwaggerDiscoverySearchCriteriaFilter:
    description: ''
    properties:
      field:
        description: The filter field for the search criteria.
        example: ''
        type: string
      lower:
        description: The lower value to match in a range criteria.
        example: ''
        type: string
      operator:
        description: The operator on how to match the search criteria.
        example: ''
        type: string
      upper:
        description: The upper value to match in a range criteria.
        example: ''
        type: string
      value:
        description: The single value to match using the operator.
        example: ''
        type: string
      values:
        description: An array of values to match using the operator.
        items:
          type: string
        type: array
    type: object
  SwaggerSearchCriteriaFilter:
    description: ''
    properties:
      field:
        description: The filter field for the search criteria.
        example: ''
        type: string
      lower:
        description: The lower value to match in a range criteria.
        example: ''
        type: string
      operator:
        description: The operator on how to match the search criteria.
        example: ''
        type: string
      upper:
        description: The upper value to match in a range criteria.
        example: ''
        type: string
      value:
        description: The single value to match using the operator.
        example: ''
        type: string
      values:
        description: An array of values to match using the operator.
        items:
          type: string
        type: array
    type: object
  SyslogAlert:
    description: ''
    properties:
      enabled:
        description: Flag indicating the alert is enabled.
        example: false
        type: boolean
      enabledScanEvents:
        $ref: '#/definitions/ScanEvents'
        description: Allows the user to specify which scan events generate an alert.
          Default values will be chosen if property is not specified as apart of the
          request. The default values are documented in the properties of `enabledScanEvents`.
        example: ''
      enabledVulnerabilityEvents:
        $ref: '#/definitions/VulnerabilityEvents'
        description: Allows the user to specify which vulnerability result events
          generate an alert. Default values will be chosen if property is not specified
          as apart of the request. The default values are documented in the properties
          of `enabledVulnerabilityEvents`.
        example: ''
      id:
        description: The identifier of the alert.
        example: ''
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      maximumAlerts:
        description: The maximum number of alerts that will be issued. To disable
          maximum alerts, omit the property in the request or specify the property
          with a value of `null`.
        example: ''
        format: int32
        minimum: 1
        type: integer
      name:
        description: The name of the alert.
        example: ''
        type: string
      notification:
        description: The type of alert.
        enum:
        - SMTP
        - SNMP
        - Syslog
        example: ''
        type: string
      server:
        description: The Syslog server to send messages to.
        example: ''
        type: string
    required:
    - enabled
    - name
    - notification
    - server
    type: object
  Tag:
    description: ''
    properties:
      color:
        description: The color to use when rendering the tag in a user interface.
        example: default
        type: string
      created:
        description: The date and time the tag was created.
        example: '2017-10-07T23:50:01.205Z'
        type: string
      id:
        description: The identifier of the tag.
        example: 6
        format: int32
        readOnly: true
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      name:
        description: The name (label) of the tab.
        example: Very High
        type: string
      riskModifier:
        description: 'The amount to adjust risk of an asset tagged with this tag. '
        example: 2.0
        format: double
        type: number
      searchCriteria:
        $ref: '#/definitions/SearchCriteria'
      source:
        description: The source of the tag.
        enum:
        - built-in
        - custom
        example: built-in
        readOnly: true
        type: string
      type:
        description: The type of the tag.
        example: criticality
        type: string
    required:
    - name
    - type
    type: object
  TagAssetSource:
    description: ''
    properties:
      id:
        description: If the `source` is `"asset-group"` or `"site"` the identifier
          of the asset group or site that causes the tag to apply to the asset.
        example: 92
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      source:
        description: The source by which a tag applies to an asset.
        enum:
        - site
        - asset-group
        - criteria
        - tag
        - unknown
        example: site
        type: string
    type: object
  TagLink:
    description: ''
    properties:
      id:
        description: The identifier of the tagged asset.
        example: 78
        format: int64
        type: integer
      sources:
        description: The source(s) by which a tag is applied to an asset.
        items:
          enum:
          - site
          - asset-group
          - criteria
          - tag
          - unknown
          type: string
        type: array
    type: object
  TaggedAssetReferences:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      resources:
        description: The identifiers of the associated resources.
        items:
          $ref: '#/definitions/TagLink'
        type: array
    type: object
  Telnet:
    description: ''
    properties:
      characterSet:
        description: The character set to use.
        example: ASCII
        type: string
      failedLoginRegex:
        description: Regular expression to match a failed login response.
        example: (?:[i,I]ncorrect|[u,U]nknown|[f,F]ail|[i,I]nvalid|[l,L]ogin|[p,P]assword|[p,P]asswd|[u,U]sername|[u,U]nable|[e,E]rror|[d,D]enied|[r,R]eject|[r,R]efuse|[c,C]lose|[c,C]losing|Not
          on system console|% Bad)
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      loginRegex:
        description: Regular expression to match a login response.
        example: '(?:[l,L]ogin|[u,U]ser.?[nN]ame) *\:'
        type: string
      passwordPromptRegex:
        description: Regular expression to match a password prompt.
        example: '(?:[p,P]assword|[p,P]asswd) *\:'
        type: string
      questionableLoginRegex:
        description: Regular expression to match a potential false negative login
          response.
        example: (?:[l,L]ast [l,L]ogin *\:|allows only .* Telnet Client License)
        type: string
    type: object
  TokenResource:
    description: ''
    properties:
      key:
        description: The two-factor authentication token seed (key).
        example: ''
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
    type: object
  UnauthorizedError:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        type: array
      message:
        description: The messages indicating the cause or reason for failure.
        example: An error has occurred.
        type: string
      status:
        description: The HTTP status code for the error (same as in the HTTP response).
        enum:
        - '401'
        example: '401'
        type: string
    required:
    - status
    type: object
  UniqueId:
    description: ''
    properties:
      id:
        description: The unique identifier.
        example: c56b2c59-4e9b-4b89-85e2-13f8146eb071
        type: string
      source:
        description: The source of the unique identifier.
        example: WQL
        type: string
    required:
    - id
    type: object
  UpdateId:
    description: ''
    properties:
      productId:
        description: Product update identifier.
        example: '281474976711146'
        type: string
      versionId:
        description: Version update identifier.
        example: '490'
        type: string
    type: object
  UpdateInfo:
    description: ''
    properties:
      content:
        description: The most recent content update.
        example: '3192129162'
        type: string
      contentPartial:
        description: The most recent, partially-applied (in-memory), content update.
        example: '723680177'
        type: string
      id:
        $ref: '#/definitions/UpdateId'
        description: Details of update identifiers.
        example: ''
      product:
        description: The most recent product update.
        example: '2200922472'
        type: string
    type: object
  UpdateSettings:
    description: ''
    properties:
      contentAutoUpdate:
        description: Whether automatic content updates are enabled.
        example: true
        type: boolean
      enabled:
        description: Whether updates are enabled.
        example: true
        type: boolean
      productAutoUpdate:
        description: Whether automatic product updates are enabled.
        example: true
        type: boolean
    type: object
  User:
    description: ''
    properties:
      authentication:
        $ref: '#/definitions/AuthenticationSource'
        description: The authentication source used to authenticate the user.
        example: ''
        readOnly: true
      email:
        description: The email address of the user.
        example: ''
        type: string
      enabled:
        description: Whether the user account is enabled.
        example: false
        type: boolean
      id:
        description: The identifier of the user.
        example: ''
        format: int32
        readOnly: true
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      locale:
        $ref: '#/definitions/LocalePreferences'
        description: The locale and language preferences for the user.
        example: ''
      locked:
        description: Whether the user account is locked (exceeded maximum password
          retry attempts).
        example: false
        readOnly: true
        type: boolean
      login:
        description: The login name of the user.
        example: ''
        type: string
      name:
        description: The full name of the user.
        example: ''
        type: string
      role:
        $ref: '#/definitions/UserRole'
        description: The privileges and role the user is assigned.
        example: ''
    required:
    - login
    - name
    type: object
  UserAccount:
    description: ''
    properties:
      fullName:
        description: The full name of the user account.
        example: Smith, John
        type: string
      id:
        description: The identifier of the user account.
        example: 8952
        format: int32
        type: integer
      name:
        description: The name of the user account.
        example: john_smith
        type: string
    required:
    - name
    type: object
  UserCreateRole:
    description: ''
    properties:
      allAssetGroups:
        description: Whether to grant the user access to all asset groups. Defaults
          to `false`.
        example: false
        type: boolean
      allSites:
        description: Whether to grant the user access to all sites. Defaults to `false`.
        example: false
        type: boolean
      id:
        description: The identifier of the role the user is assigned to.
        example: ''
        type: string
      superuser:
        description: Whether the user is a superuser. Defaults to `false`.
        example: false
        type: boolean
    required:
    - id
    type: object
  UserEdit:
    description: ''
    properties:
      authentication:
        $ref: '#/definitions/CreateAuthenticationSource'
        description: The details of the authentication source used to authenticate
          the user.
        example: ''
      email:
        description: The email address of the user.
        example: ''
        type: string
      enabled:
        description: Whether the user account is enabled. Defaults to `true`.
        example: false
        type: boolean
      id:
        description: The identifier of the user.
        example: ''
        format: int32
        readOnly: true
        type: integer
      locale:
        $ref: '#/definitions/LocalePreferences'
        description: The locale and language preferences for the user.
        example: ''
      locked:
        description: Whether the user account is locked (exceeded maximum password
          retry attempts).
        example: false
        readOnly: true
        type: boolean
      login:
        description: The login name of the user.
        example: ''
        type: string
      name:
        description: The full name of the user.
        example: ''
        type: string
      password:
        description: The password to use for the user.
        example: ''
        type: string
      passwordResetOnLogin:
        description: Whether to require a reset of the user's password upon first
          login. Defaults to `false`.
        example: false
        type: boolean
      role:
        $ref: '#/definitions/UserCreateRole'
        description: The privileges and role to assign the user.
        example: ''
    required:
    - login
    - name
    - password
    - role
    type: object
  UserRole:
    description: ''
    properties:
      allAssetGroups:
        description: Whether the user has access to all asset groups.
        example: false
        type: boolean
      allSites:
        description: Whether the user has access to all sites.
        example: false
        type: boolean
      id:
        description: The identifier of the role the user is assigned to.
        example: ''
        type: string
      name:
        description: The name of the role the user is assigned to.
        example: ''
        type: string
      privileges:
        description: The privileges granted to the user by their role.
        items:
          enum:
          - all-permissions
          - create-reports
          - configure-global-settings
          - manage-sites
          - manage-tags
          - manage-static-asset-groups
          - manage-dynamic-asset-groups
          - manage-scan-templates
          - manage-report-templates
          - manage-scan-engines
          - submit-vulnerability-exceptions
          - approve-vulnerability-exceptions
          - delete-vulnerability-exceptions
          - create-tickets
          - close-tickets
          - assign-ticket-assignee
          - manage-site-access
          - manage-asset-group-access
          - manage-report-access
          - use-restricted-report-sections
          - manage-policies
          - view-asset-group-asset-data
          - manage-asset-group-assets
          - view-site-asset-data
          - specify-site-metadata
          - purge-site-asset-data
          - specify-scan-targets
          - assign-scan-engine
          - assign-scan-template
          - manage-site-credentials
          - manage-scan-alerts
          - schedule-automatic-scans
          - start-unscheduled-scans
          type: string
        type: array
      superuser:
        description: Whether the user is a superuser.
        example: false
        type: boolean
    type: object
  VersionInfo:
    description: ''
    properties:
      build:
        description: The build number.
        example: 2017-12-10-14-11
        type: string
      changeset:
        description: The changeset of the source build.
        example: 7061fb4e7c355160df79a77d8983bed2af01f2bf
        type: string
      platform:
        description: The platform of the build.
        example: Linux64
        type: string
      semantic:
        description: The semantic version number of the installation.
        example: 6.4.65
        type: string
      update:
        $ref: '#/definitions/UpdateInfo'
        description: Version update details.
        example: ''
    type: object
  Vulnerabilities:
    description: ''
    properties:
      critical:
        description: The number of critical vulnerabilities.
        example: 16
        format: int64
        readOnly: true
        type: integer
      moderate:
        description: The number of moderate vulnerabilities.
        example: 3
        format: int64
        readOnly: true
        type: integer
      severe:
        description: The number of severe vulnerabilities.
        example: 76
        format: int64
        readOnly: true
        type: integer
      total:
        description: The total number of vulnerabilities.
        example: 95
        format: int64
        readOnly: true
        type: integer
    type: object
  Vulnerability:
    description: ''
    properties:
      added:
        description: The date the vulnerability coverage was added. The format is
          an ISO 8601 date, `YYYY-MM-DD`.
        example: '2017-10-10'
        type: string
      categories:
        description: All vulnerability categories assigned to this vulnerability.
        items:
          type: string
        type: array
      cves:
        description: All <a target="_blank" href="https://cve.mitre.org/">CVE</a>s
          assigned to this vulnerability.
        items:
          type: string
        type: array
      cvss:
        $ref: '#/definitions/VulnerabilityCvss'
        description: The CVSS vector(s) for the vulnerability.
        example: ''
      denialOfService:
        description: Whether the vulnerability can lead to Denial of Service (DoS).
        example: false
        type: boolean
      description:
        $ref: '#/definitions/ContentDescription'
        description: The description of the vulnerability.
        example: ''
      exploits:
        description: The exploits that can be used to exploit a vulnerability.
        example: ''
        format: int32
        type: integer
      id:
        description: The identifier of the vulnerability.
        example: msft-cve-2017-11804
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      malwareKits:
        description: The malware kits that are known to be used to exploit the vulnerability.
        example: ''
        format: int32
        type: integer
      modified:
        description: The last date the vulnerability was modified. The format is an
          ISO 8601 date, `YYYY-MM-DD`.
        example: '2017-10-10'
        type: string
      pci:
        $ref: '#/definitions/PCI'
        description: Details the <a target="_blank" href="https://www.pcisecuritystandards.org/">Payment
          Card Industry (PCI)</a> details of the vulnerability.
        example: ''
      published:
        description: The date the vulnerability was first published or announced.
          The format is an ISO 8601 date, `YYYY-MM-DD`.
        example: '2017-10-10'
        type: string
      riskScore:
        description: The risk score of the vulnerability, rounded to a maximum of
          to digits of precision. If using the default Rapid7 Real Risk™ model, this
          value ranges from 0-1000.
        example: 123.69
        format: double
        type: number
      severity:
        description: 'The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`,
          `"Critical"`.'
        example: Severe
        type: string
      severityScore:
        description: The severity score of the vulnerability, on a scale of 0-10.
        example: 4
        format: int32
        type: integer
      title:
        description: The title (summary) of the vulnerability.
        example: 'Microsoft CVE-2017-11804: Scripting Engine Memory Corruption Vulnerability'
        type: string
    type: object
  VulnerabilityCategory:
    description: ''
    properties:
      id:
        description: The identifier of the vulnerability category.
        example: 23
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      name:
        description: The name of the category.
        example: Microsoft
        type: string
    type: object
  VulnerabilityCheck:
    description: ''
    properties:
      id:
        description: The identifier of the vulnerability check.
        example: WINDOWS-HOTFIX-MS14-009-01123281-bac0-44d8-a729-cd31c19d6bd1
        type: string
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      plugin:
        description: The name of the plugin (module) the check belongs to.
        example: WindowsHotfixScanner
        type: string
      potential:
        description: Whether the check results in potential vulnerabilities.
        example: false
        type: boolean
      requiresCredentials:
        description: Whether the check requires credentials in order to run.
        example: true
        type: boolean
      safe:
        description: Whether the checked is deemed to be "safe" to run. A safe check
          is one that can be run without negatively impacting the host it is run against.
        example: true
        type: boolean
      service:
        description: Whether the check operates against a service, or false it it
          is a local check.
        example: false
        type: boolean
      unique:
        description: Whether the check may only register a result once during a scan
          of host. Otherwise, the tests in the check can run multiple times, possibly
          registering multiple results.
        example: false
        type: boolean
      vulnerability:
        description: The identifier of the vulnerability the check results in.
        example: windows-hotfix-ms14-009
        type: string
    type: object
  VulnerabilityCheckType:
    description: ''
    properties:
      disabled:
        description: The types of vulnerability checks to disable during a scan.
        items:
          type: string
        type: array
      enabled:
        description: The types of vulnerability checks to enable during a scan.
        items:
          type: string
        type: array
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
    type: object
  VulnerabilityCvss:
    description: ''
    properties:
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      v2:
        $ref: '#/definitions/VulnerabilityCvssV2'
        description: The Common Vulnerability Scoring System (<a href="https://www.first.org/cvss/v2/guide">CVSS
          v2</a>) information for the vulnerability.
        example: ''
      v3:
        $ref: '#/definitions/VulnerabilityCvssV3'
        description: The Common Vulnerability Scoring System (<a target="_blank" href="https://www.first.org/cvss/specification-document">CVSS
          v3</a>) information for the vulnerability.
        example: ''
    type: object
  VulnerabilityCvssV2:
    description: ''
    properties:
      accessComplexity:
        description: "Access Complexity (AC) component which measures the complexity\
          \ of the attack required to exploit the vulnerability once an attacker has\
          \ gained access to the target system. \n| Access Complexity       | Description\
          \                                                              | \n| -----------------------\
          \ | ------------------------------------------------------------------------\
          \ | \n| High (`\"H\"`)            | Specialized access conditions exist.\
          \                                     | \n| Medium (`\"M\"`)          |\
          \ The access conditions are somewhat specialized.                      \
          \    | \n| Low (`\"L\"`)             | Specialized access conditions or\
          \ extenuating circumstances do not exist. |"
        enum:
        - L
        - M
        - H
        example: M
        type: string
      accessVector:
        description: "Access Vector (Av) component which reflects how the vulnerability\
          \ is exploited. \n| Access Vector              | Description | \n| --------------------------\
          \ | ----------- | \n| Local (`\"L\"`)              | A vulnerability exploitable\
          \ with only local access requires the attacker to have either physical access\
          \ to the vulnerable system or a local (shell) account. | \n| Adjacent Network\
          \ (`\"A\"`)   | A vulnerability exploitable with adjacent network access\
          \ requires the attacker to have access to either the broadcast or collision\
          \ domain of the vulnerable software. | \n| Network (`\"N\"`)           \
          \ | A vulnerability exploitable with network access means the vulnerable\
          \ software is bound to the network stack and the attacker does not require\
          \ local network access or local access. Such a vulnerability is often termed\
          \ \"remotely exploitable\". | \n"
        enum:
        - L
        - A
        - N
        example: L
        type: string
      authentication:
        description: "Authentication (Au) component which measures the number of times\
          \ an attacker must authenticate to a target in order to exploit a vulnerability.\
          \ \n| Authentication       | Description | \n| -------------------- | -----------\
          \ | \n| Multiple (`\"M\"`)     | Exploiting the vulnerability requires that\
          \ the attacker authenticate two or more times, even if the same credentials\
          \ are used each time. | \n| Single (`\"S\"`)       | The vulnerability requires\
          \ an attacker to be logged into the system.                            \
          \                                         | \n| None (`\"N\"`)         |\
          \ Authentication is not required to exploit the vulnerability.         \
          \                                                                    |"
        enum:
        - N
        - S
        - M
        example: N
        type: string
      availabilityImpact:
        description: "Availability Impact (A) component which measures the impact\
          \ to availability of a successfully exploited vulnerability. \n| Availability\
          \ Impact        | Description  | \n| -------------------------- | ------------\
          \ | \n| None (`\"N\"`)               | There is no impact to the availability\
          \ of the system. | \n| Partial (`\"P\"`)            | There is reduced performance\
          \ or interruptions in resource availability. | \n| Complete (`\"C\"`)  \
          \         | There is a total shutdown of the affected resource. The attacker\
          \ can render the resource completely unavailable. |"
        enum:
        - N
        - P
        - C
        example: P
        type: string
      confidentialityImpact:
        description: "Confidentiality Impact (C) component which measures the impact\
          \ on confidentiality of a successfully exploited vulnerability. \n| Confidentiality\
          \ Impact     | Description  | \n| -------------------------- | ------------\
          \ | \n| None (`\"N\"`)               | There is no impact to the confidentiality\
          \ of the system. | \n| Partial (`\"P\"`)            | There is considerable\
          \ informational disclosure. Access to some system files is possible, but\
          \ the attacker does not have control over what is obtained, or the scope\
          \ of the loss is constrained. | \n| Complete (`\"C\"`)           | There\
          \ is total information disclosure, resulting in all system files being revealed.\
          \ The attacker is able to read all of the system's data (memory, files,\
          \ etc.) | "
        enum:
        - N
        - P
        - C
        example: P
        type: string
      exploitScore:
        description: The CVSS exploit score.
        example: 3.3926
        format: double
        type: number
      impactScore:
        description: The CVSS impact score.
        example: 6.443
        format: double
        type: number
      integrityImpact:
        description: "Integrity Impact (I) component measures the impact to integrity\
          \ of a successfully exploited vulnerability. \n| Integrity Impact      \
          \     | Description  | \n| -------------------------- | ------------ | \n\
          | None (`\"N\"`)               | There is no impact to the integrity of\
          \ the system. | \n| Partial (`\"P\"`)            | Modification of some\
          \ system files or information is possible, but the attacker does not have\
          \ control over what can be modified, or the scope of what the attacker can\
          \ affect is limited. | \n| Complete (`\"C\"`)           | There is a total\
          \ compromise of system integrity. There is a complete loss of system protection,\
          \ resulting in the entire system being compromised. The attacker is able\
          \ to modify any files on the target system. |"
        enum:
        - N
        - P
        - C
        example: P
        type: string
      score:
        description: The CVSS score, which ranges from 0-10.
        example: 4.4
        format: double
        type: number
      vector:
        description: The <a target="_blank" href="https://www.first.org/cvss/v2/guide">CVSS
          v2</a> vector.
        example: AV:L/AC:M/Au:N/C:P/I:P/A:P
        type: string
    type: object
  VulnerabilityCvssV3:
    description: ''
    properties:
      attackComplexity:
        description: "Access Complexity (AC) component with measures the conditions\
          \ beyond the attacker's control that must exist in order to exploit the\
          \ vulnerability. \n| Access Complexity      | Description              \
          \                                                | \n| ----------------------\
          \ | ------------------------------------------------------------------------\
          \ | \n| Low (`\"L\"`)            | Specialized access conditions or extenuating\
          \ circumstances do not exist. | \n| High (`\"H\"`)           | A successful\
          \ attack depends on conditions beyond the attacker's control. |"
        enum:
        - L
        - H
        example: H
        type: string
      attackVector:
        description: "Attack Vector (AV) component which measures context by which\
          \ vulnerability exploitation is possible. \n| Access Vector          | Description\
          \                                                              | \n| ----------------------\
          \ | ------------------------------------------------------------------------\
          \ | \n| Local (`\"L\"`)          | A vulnerability exploitable with only\
          \ local access requires the attacker to have either physical access to the\
          \ vulnerable system or a local (shell) account. | \n| Adjacent (`\"A\"`)\
          \       | A vulnerability exploitable with adjacent network access requires\
          \ the attacker to have access to either the broadcast or collision domain\
          \ of the vulnerable software. | \n| Network (`\"N\"`)        | A vulnerability\
          \ exploitable with network access means the vulnerable software is bound\
          \ to the network stack and the attacker does not require local network access\
          \ or local access. Such a vulnerability is often termed \"remotely exploitable\"\
          . | \n"
        enum:
        - N
        - A
        - L
        - P
        example: N
        type: string
      availabilityImpact:
        description: "Availability Impact (A) measures the impact to the availability\
          \ of the impacted component resulting from a successfully exploited vulnerability.\
          \ \n| Availability Impact        | Description  | \n| --------------------------\
          \ | ------------ | \n| High (`\"H\"`)               | There is total loss\
          \ of availability, resulting in the attacker being able to fully deny access\
          \ to resources in the impacted component; this loss is either sustained\
          \ (while the attacker continues to deliver the attack) or persistent (the\
          \ condition persists even after the attack has completed). | \n| Low (`\"\
          L\"`)                | There is reduced performance or interruptions in\
          \ resource availability. Even if repeated exploitation of the vulnerability\
          \ is possible, the attacker does not have the ability to completely deny\
          \ service to legitimate users. | \n| None (`\"N\"`)               | There\
          \ is no impact to availability within the impacted component. |"
        enum:
        - N
        - L
        - H
        example: H
        type: string
      confidentialityImpact:
        description: "Confidentiality Impact (C) component which measures the impact\
          \ on confidentiality of a successfully exploited vulnerability. \n| Confidentiality\
          \ Impact     | Description  | \n| -------------------------- | ------------\
          \ | \n| High (`\"H\"`)               | There is total loss of confidentiality,\
          \ resulting in all resources within the impacted component being divulged\
          \ to the attacker. | \n| Low (`\"L\"`)                | There is some loss\
          \ of confidentiality. Access to some restricted information is obtained,\
          \ but the attacker does not have control over what information is obtained,\
          \ or the amount or kind of loss is constrained. | \n| None (`\"N\"`)   \
          \            | There is no loss of confidentiality within the impacted component.\
          \ |"
        enum:
        - N
        - L
        - H
        example: H
        type: string
      exploitScore:
        description: The CVSS impact score.
        example: 1.6201
        format: double
        type: number
      impactScore:
        description: The CVSS exploit score.
        example: 5.8731
        format: double
        type: number
      integrityImpact:
        description: "Integrity Impact (I) measures the impact to integrity of a successfully\
          \ exploited vulnerability. Integrity refers to the trustworthiness and veracity\
          \ of information. \n| Integrity Impact    | Description  | \n| -------------------\
          \ | ------------ | \n| High (`\"H\"`)        | There is a total loss of\
          \ integrity, or a complete loss of protection. | \n| Low (`\"L\"`)     \
          \    | Modification of data is possible, but the attacker does not have\
          \ control over the consequence of a modification, or the amount of modification\
          \ is constrained. | \n| None (`\"N\"`)        | There is no loss of integrity\
          \ within the impacted component. |"
        enum:
        - N
        - L
        - H
        example: H
        type: string
      privilegeRequired:
        description: "Privileges Required (PR) measures the level of privileges an\
          \ attacker must possess before successfully exploiting the vulnerability.\
          \ \n| Privileges Required (PR)     | Description                       \
          \                                       | \n| ----------------------------\
          \ | ------------------------------------------------------------------------\
          \ | \n| None (`\"N\"`)                 | The attacker is unauthorized prior\
          \ to attack, and therefore does not require any access to settings or files\
          \ to carry out an attack. | \n| Low (`\"L\"`)                  | The attacker\
          \ is authorized with (i.e. requires) privileges that provide basic user\
          \ capabilities that could normally affect only settings and files owned\
          \ by a user. | \n| High (`\"H\"`)                 | The attacker is authorized\
          \ with (i.e. requires) privileges that provide significant (e.g. administrative)\
          \ control over the vulnerable component that could affect component-wide\
          \ settings and files. |"
        enum:
        - N
        - L
        - H
        example: N
        type: string
      scope:
        description: "Scope (S) measures the collection of privileges defined by a\
          \ computing authority (e.g. an application, an operating system, or a sandbox\
          \ environment) when granting access to computing resources (e.g. files,\
          \ CPU, memory, etc). These privileges are assigned based on some method\
          \ of identification and authorization. \n| Scope (S)            | Description\
          \                                                              | \n| --------------------\
          \ | ------------------------------------------------------------------------\
          \ | \n| Unchanged (`\"U\"`)    | An exploited vulnerability can only affect\
          \ resources managed by the same authority. In this case the vulnerable component\
          \ and the impacted component are the same. | \n| Changed (`\"C\"`)     \
          \ | An exploited vulnerability can affect resources beyond the authorization\
          \ privileges intended by the vulnerable component. In this case the vulnerable\
          \ component and the impacted component are different. |"
        enum:
        - U
        - C
        example: U
        type: string
      score:
        description: The CVSS score, which ranges from 0-10.
        example: 7.5
        format: double
        type: number
      userInteraction:
        description: "User Interaction (UI) measures the requirement for a user, other\
          \ than the attacker, to participate in the successful compromise of the\
          \ vulnerable component. \n| User Interaction (UI)        | Description \
          \                                                              | \n| ----------------------------\
          \ | -------------------------------------------------------------------------\
          \ | \n| None (`\"N\"`)                 | The vulnerable system can be exploited\
          \ without interaction from any user. | \n| Required (`\"R\"`)          \
          \   | Successful exploitation of this vulnerability requires a user to take\
          \ some action before the vulnerability can be exploited. |"
        enum:
        - N
        - R
        example: R
        type: string
      vector:
        description: The <a target="_blank" href="https://www.first.org/cvss/specification-document">CVSS
          v3</a> vector.
        example: CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H
        type: string
    type: object
  VulnerabilityEvents:
    description: ''
    properties:
      confirmedVulnerabilities:
        description: Generates an alert for vulnerability results of confirmed vulnerabilties.
          A vulnerability is "confirmed" when asset-specific vulnerability tests,
          such as exploits, produce positive results. Default value is `true`.
        example: false
        type: boolean
      potentialVulnerabilities:
        description: Generates an alert for vulnerability results of potential vulnerabilties.
          A vulnerability is "potential" if a check for a potential vulnerabilty is
          positive. Default value is `true`.
        example: false
        type: boolean
      unconfirmedVulnerabilities:
        description: Generates an alert for vulnerability results of unconfirmed vulnerabilties.
          A vulnerability is "unconfirmed" when a version of a scanned service or
          software is known to be vulnerable, but there is no positive verification.
          Default value is `true`.
        example: false
        type: boolean
      vulnerabilitySeverity:
        description: Generates an alert for vulnerability results of the selected
          vulnerability severity. Default value is `"any_severity"`.
        enum:
        - any_severity
        - severe_and_critical
        - only_critical
        example: ''
        type: string
    required:
    - confirmedVulnerabilities
    - potentialVulnerabilities
    - unconfirmedVulnerabilities
    - vulnerabilitySeverity
    type: object
  VulnerabilityException:
    description: ''
    properties:
      expires:
        description: The date and time the vulnerability exception is set to expire.
        example: ''
        type: string
      id:
        description: The identifier of the vulnerability exception.
        example: ''
        format: int32
        readOnly: true
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      review:
        $ref: '#/definitions/Review'
        description: Details regarding the review and/or approval of the exception.
        example: ''
        readOnly: true
      scope:
        $ref: '#/definitions/ExceptionScope'
        description: The scope of the vulnerability exception, indicating the results
          it applies to.
        example: ''
      state:
        description: 'The state of the vulnerability exception. One of: `"Deleted"`,
          `"Expired"`, `"Approved"`, `"Rejected"`, `"Under Review".'
        example: ''
        type: string
      submit:
        $ref: '#/definitions/Submission'
        description: Details regarding the submission of the exception.
        example: ''
        readOnly: true
    type: object
  VulnerabilityFinding:
    description: ''
    properties:
      id:
        description: The identifier of the vulnerability.
        example: ssh-openssh-x11uselocalhost-x11-forwarding-session-hijack
        type: string
      instances:
        description: The number of vulnerable occurrences of the vulnerability. This
          does not include `invulnerable` instances.
        example: 1
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      results:
        description: The vulnerability check results for the finding. Multiple instances
          may be present if one or more checks fired, or a check has multiple independent
          results.
        items:
          $ref: '#/definitions/AssessmentResult'
        type: array
      since:
        description: The date and time the finding was was first recorded, in the
          ISO8601 format. If the result changes status this value is the date and
          time of the status change.
        example: '2017-08-09T11:32:33.658Z'
        type: string
      status:
        description: The status of the finding.
        enum:
        - vulnerable
        - invulnerable
        - no-results
        example: vulnerable
        type: string
    required:
    - id
    - instances
    - status
    type: object
  VulnerabilityReference:
    description: ''
    properties:
      advisory:
        $ref: '#/definitions/AdvisoryLink'
        description: Hypermedia link to the destination of the vulnerability reference.
        example: ''
      id:
        description: The identifier of the vulnerability reference.
        example: 157986
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      reference:
        description: 'The contents of the reference, typically an identifier or hyperlink.
          Example: `"CVE-2011-0762"`'
        example: '4041689'
        type: string
      source:
        description: 'The originating source of the reference. Examples: `"url"`,
          `"cve"`, `"bid"`, `"redhat"`'
        example: mskb
        type: string
    type: object
  VulnerabilityValidationResource:
    description: ''
    properties:
      date:
        description: The date and time the vulnerability was validated, in the ISO8601
          format.
        example: '2017-12-21T04:54:32.314Z'
        type: string
      id:
        description: The identifier of the vulnerability validation.
        example: 46
        format: int64
        readOnly: true
        type: integer
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
      source:
        $ref: '#/definitions/VulnerabilityValidationSource'
        description: The source used to validate the vulnerability.
        example: ''
    type: object
  VulnerabilityValidationSource:
    description: ''
    properties:
      key:
        description: The identifier or name of the exploit that was used to validate
          the vulnerability.
        example: exploit/windows/iis/iis_webdav_scstoragepathfromurl
        type: string
      name:
        description: The name of the source used to validate the vulnerability.
        enum:
        - metasploit
        - other
        example: metasploit
        type: string
    type: object
  WebApplication:
    description: ''
    properties:
      id:
        description: The identifier of the web application.
        example: 30712
        format: int64
        type: integer
      pages:
        description: The pages discovered on the web application.
        items:
          $ref: '#/definitions/WebPage'
        type: array
      root:
        description: The web root of the web application.
        example: /
        type: string
      virtualHost:
        description: The virtual host of the web application.
        example: 102.89.22.253
        type: string
    type: object
  WebFormAuthentication:
    description: ''
    properties:
      baseURL:
        description: 'The base URL is the main address from which all paths in the
          target Web site begin. Includes the protocol. Example: http://acme.com.'
        example: ''
        type: string
      enabled:
        description: Flag indicating whether the HTML form web authentication is enabled
          for the site's scans.
        example: false
        type: boolean
      id:
        description: The identifier of the HTML form web authentication.
        example: ''
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      loginRegularExpression:
        description: The regular expression matches the message that the Web server
          returns if the login attempt fails.
        example: ''
        type: string
      loginURL:
        description: 'The login page URL contains form for logging on. Include the
          base URL. Example: http://acme.com/login.'
        example: ''
        type: string
      name:
        description: The HTML form web authentication name.
        example: ''
        type: string
      service:
        description: Value indicating whether this web authentication  configuration
          is for HTML form authentication or HTTP header authentication.
        enum:
        - html-form
        - http-header
        example: ''
        type: string
    type: object
  WebHeaderAuthentication:
    description: ''
    properties:
      baseURL:
        description: 'The base URL is the main address from which all paths in the
          target Web site begin. Includes the protocol. Example: http://acme.com.'
        example: ''
        type: string
      enabled:
        description: Flag indicating whether the HTTP header web authentication is
          enabled for the site's scans.
        example: false
        type: boolean
      headers:
        additionalProperties:
          type: string
        description: 'A map of HTTP headers the scan engine will use when negotiating
          with the Web server for an "authenticated" page. Make sure that the session
          ID is valid between the time you save this ID for the site and when you
          start the scan. Note: This property is not returned in responses for security.'
        example: ''
        type: object
      id:
        description: The identifier of the HTTP header web authentication.
        example: ''
        format: int32
        type: integer
      links:
        description: Hypermedia links to corresponding or related resources.
        items:
          $ref: '#/definitions/Link'
        readOnly: true
        type: array
      loginRegularExpression:
        description: The regular expression matches the message that the Web server
          returns if the login attempt fails.
        example: ''
        type: string
      name:
        description: The HTTP header web authentication name.
        example: ''
        type: string
      service:
        description: Value indicating whether this web authentication  configuration
          is for HTML form authentication or HTTP header authentication.
        enum:
        - html-form
        - http-header
        example: ''
        type: string
    type: object
  WebPage:
    description: ''
    properties:
      linkType:
        description: The type of link used to traverse or detect the page.
        enum:
        - seed
        - html-ref
        - robots
        - js-string
        - query-param
        - pdf
        - css
        - implied-dir
        - rss
        - redirection
        - sitemap
        - backup
        - vck-rewrite
        - non-ref-guess
        - soft-404
        example: html-ref
        type: string
      path:
        description: The path to the page (URI).
        example: /docs/config/index.html
        type: string
      response:
        description: The HTTP response code observed with retrieving the page.
        example: 200
        format: int32
        type: integer
    type: object
  WebSettings:
    description: ''
    properties:
      maxThreads:
        description: The maximum number of request handling threads.
        example: 100
        format: int32
        type: integer
      minThreads:
        description: The minimum number of request handling threads.
        example: 10
        format: int32
        type: integer
      port:
        description: The port the web server is accepting requests.
        example: 3780
        format: int32
        type: integer
      sessionTimeout:
        description: 'Session timeout duration, in ISO 8601 format. For example: `"PT10M"`.'
        example: PT10M
        type: string
    type: object
host: ivmconsole
info:
  contact:
    email: support@rapid7.com
    name: Rapid7
  description: "# Overview \n\nThis guide documents the InsightVM Application Programming\
    \ Interface (API) Version 3. This API supports the\nRepresentation State Transfer\
    \ (REST) design pattern. Unless noted otherwise this API accepts and produces\
    \ the\n`application/json` media type. This API uses Hypermedia as the Engine of\
    \ Application State (HATEOAS) and\nis hypermedia friendly. All API connections\
    \ must be made to the security console using HTTPS.\n\n## Versioning\n\nVersioning\
    \ is specified in the URL and the base path of this API is: `https://<host>:<port>/api/3/`.\n\
    \n## Specification\n\nAn <a target=\"_blank\" href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md\"\
    >OpenAPI v2</a> specification (also \nknown as Swagger 2) of this API is available.\
    \ Tools such as <a target=\"_blank\" href=\"https://github.com/swagger-api/swagger-codegen\"\
    >swagger-codegen</a>\ncan be used to generate an API client in the language of\
    \ your choosing using this specification document.\n\n<p class=\"openapi\">Download\
    \ the specification: <a class=\"openapi-button\" target=\"_blank\" download=\"\
    \" href=\"/api/3/json\"> Download </a></p>\n\n## Authentication\n\nAuthorization\
    \ to the API uses HTTP Basic Authorization \n(see <a target=\"_blank\" href=\"\
    https://www.ietf.org/rfc/rfc2617.txt\">RFC 2617</a> for more information). Requests\
    \ must \nsupply authorization credentials in the `Authorization` header using\
    \ a Base64 encoded hash of `\"username:password\"`.\n\n<!-- ReDoc-Inject: <security-definitions>\
    \ -->\n\n### 2FA\n\nThis API supports two-factor authentication (2FA) by supplying\
    \ an authentication token in addition to the Basic\nAuthorization. The token is\
    \ specified using the `Token` request header. To leverage two-factor authentication,\
    \ this\nmust be enabled on the console and be configured for the account accessing\
    \ the API.\n\n## Resources\n\n### Naming\n\nResource names represent nouns and\
    \ identify the entity being manipulated or accessed. All collection resources\
    \ are \npluralized to indicate to the client they are interacting with a collection\
    \ of multiple resources of the same type.\nSingular resource names are used when\
    \ there exists only one resource available to interact with.\n\nThe following\
    \ naming conventions are used by this API:\n\n| Type                         \
    \                 | Case                     |\n| ---------------------------------------------\
    \ | ------------------------ |\n| Resource names                             \
    \   | `lower_snake_case`       |\n| Header, body, and query parameters parameters\
    \ | `camelCase`              |\n| JSON fields and property names             \
    \   | `camelCase`              |\n\n#### Collections\n\nA collection resource\
    \ is a parent resource for instance resources, but can itself be retrieved and\
    \ operated on \nindependently. Collection resources use a pluralized resource\
    \ name. The resource path for collection resources follow \nthe convention:\n\n\
    ```\n/api/3/{resource_name}\n```\n\n#### Instances\n\nAn instance resource is\
    \ a \"leaf\" level resource that may be retrieved, optionally nested within a\
    \ collection resource.\nInstance resources are usually retrievable with opaque\
    \ identifiers. The resource path for instance resources follows \nthe convention:\n\
    \n```\n/api/3/{resource_name}/{instance_id}...\n```\n\n## Verbs\n\nThe following\
    \ HTTP operations are supported throughout this API. The general usage of the\
    \ operation and both\nits failure and success status codes are outlined below.\
    \ \n \n| Verb      | Usage                                                   \
    \                              | Success     | Failure                       \
    \                                 |\n| --------- | -------------------------------------------------------------------------------------\
    \ | ----------- | --------------------------------------------------------------\
    \ |\n| `GET`     | Used to retrieve a resource by identifier, or a collection\
    \ of resources by type.      | `200`       | `400`, `401`, `402`, `404`, `405`,\
    \ `408`, `410`, `415`, `500`  |\n| `POST`    | Creates a resource with an application-specified\
    \ identifier.                          | `201`       | `400`, `401`, `404`, `405`,\
    \ `408`, `413`, `415`, `500`         |\n| `POST`    | Performs a request to queue\
    \ an asynchronous job.                                      | `202`       | `400`,\
    \ `401`, `405`, `408`, `410`, `413`, `415`, `500`         |\n| `PUT`     | Creates\
    \ a resource with a client-specified identifier.                             \
    \   | `200`       | `400`, `401`, `403`, `405`, `408`, `410`, `413`, `415`, `500`\
    \  |\n| `PUT`     | Performs a full update of a resource with a specified identifier.\
    \                     | `201`       | `400`, `401`, `403`, `405`, `408`, `410`,\
    \ `413`, `415`, `500`  |\n| `DELETE`  | Deletes a resource by identifier or an\
    \ entire collection of resources.                | `204`       | `400`, `401`,\
    \ `405`, `408`, `410`, `413`, `415`, `500`         |\n| `OPTIONS` | Requests what\
    \ operations are available on a resource.                                 | `200`\
    \       | `401`, `404`, `405`, `408`, `500`                              |\n\n\
    ### Common Operations\n\n#### OPTIONS\n\nAll resources respond to the `OPTIONS`\
    \ request, which allows discoverability of available operations that are supported.\
    \ \nThe `OPTIONS` response returns the acceptable HTTP operations on that resource\
    \ within the `Allow` header. The response\nis always a `200 OK` status.\n\n###\
    \ Collection Resources\n\nCollection resources can support the `GET`, `POST`,\
    \ `PUT`, and `DELETE` operations.\n\n#### GET\n\nThe `GET` operation invoked on\
    \ a collection resource indicates a request to retrieve all, or some, of the entities\
    \ \ncontained within the collection. This also includes the optional capability\
    \ to filter or search resources during\nthe request. The response from a collection\
    \ listing is a paginated document. See \n[hypermedia links](#section/Overview/Paging)\
    \ for more information.\n\n#### POST\n\nThe `POST` is a non-idempotent operation\
    \ that allows for the creation of a new resource when the resource identifier\
    \ \nis not provided by the system during the creation operation (i.e. the Security\
    \ Console generates the identifier). The\ncontent of the `POST` request is sent\
    \ in the request body. The response to a successful `POST` request should be a\
    \ \n`201 CREATED` with a valid `Location` header field set to the URI that can\
    \ be used to access to the newly \ncreated resource. \n\nThe `POST` to a collection\
    \ resource can also be used to interact with asynchronous resources. In this situation,\
    \ \ninstead of a `201 CREATED` response, the `202 ACCEPTED` response indicates\
    \ that processing of the request is not fully \ncomplete but has been accepted\
    \ for future processing. This request will respond similarly with a `Location`\
    \ header with \nlink to the job-oriented asynchronous resource that was created\
    \ and/or queued.\n\n#### PUT\n\nThe `PUT` is an idempotent operation that either\
    \ performs a create with user-supplied identity, or a full replace\nor update\
    \ of a resource by a known identifier. The response to a `PUT` operation to create\
    \ an entity is a `201 Created`\nwith a valid `Location` header field set to the\
    \ URI that can be used to access to the newly created resource.\n\n`PUT` on a\
    \ collection resource replaces all values in the collection. The typical response\
    \ to a `PUT` operation that \nupdates an entity is hypermedia links, which may\
    \ link to related resources caused by the side-effects of the changes \nperformed.\n\
    \n#### DELETE\n\nThe `DELETE` is an idempotent operation that physically deletes\
    \ a resource, or removes an association between resources.\nThe typical response\
    \ to a `DELETE` operation is hypermedia links, which may link to related resources\
    \ caused by the \nside-effects of the changes performed.\n\n### Instance Resources\n\
    \nInstance resources can support the `GET`, `PUT`, `POST`, `PATCH` and `DELETE`\
    \ operations.\n\n#### GET\n\nRetrieves the details of a specific resource by its\
    \ identifier. The details retrieved can be controlled through \nproperty selection\
    \ and property views. The content of the resource is returned within the body\
    \ of the response in the \nacceptable media type. \n\n#### PUT\n\nAllows for and\
    \ idempotent \"full update\" (complete replacement) on a specific resource. If\
    \ the resource does not exist, \nit will be created; if it does exist, it is completely\
    \ overwritten. Any omitted properties in the request are assumed to \nbe undefined/null.\
    \ For \"partial updates\" use `POST` or `PATCH` instead. \n\nThe content of the\
    \ `PUT` request is sent in the request body. The identifier of the resource is\
    \ specified within the URL \n(not the request body). The response to a successful\
    \ `PUT` request is a `201 CREATED` to represent the created status, \nwith a valid\
    \ `Location` header field set to the URI that can be used to access to the newly\
    \ created (or fully replaced) \nresource. \n\n#### POST\n\nPerforms a non-idempotent\
    \ creation of a new resource. The `POST` of an instance resource most commonly\
    \ occurs with the \nuse of nested resources (e.g. searching on a parent collection\
    \ resource). The response to a `POST` of an instance \nresource is typically a\
    \ `200 OK` if the resource is non-persistent, and a `201 CREATED` if there is\
    \ a resource \ncreated/persisted as a result of the operation. This varies by\
    \ endpoint.\n\n#### PATCH\n\nThe `PATCH` operation is used to perform a partial\
    \ update of a resource. `PATCH` is a non-idempotent operation that\nenforces an\
    \ atomic mutation of a resource. Only the properties specified in the request\
    \ are to be overwritten on the \nresource it is applied to. If a property is missing,\
    \ it is assumed to not have changed.\n\n#### DELETE\n\nPermanently removes the\
    \ individual resource from the system. If the resource is an association between\
    \ resources, only \nthe association is removed, not the resources themselves.\
    \ A successful deletion of the resource should return \n`204 NO CONTENT` with\
    \ no response body. This operation is not fully idempotent, as follow-up requests\
    \ to delete a \nnon-existent resource should return a `404 NOT FOUND`.\n\n## Requests\n\
    \nUnless otherwise indicated, the default request body media type is `application/json`.\n\
    \n### Headers\n\nCommonly used request headers include:\n\n| Header          \
    \   | Example                                       | Purpose                \
    \                                                                        |   \
    \                \n| ------------------ | ---------------------------------------------\
    \ | ----------------------------------------------------------------------------------------------\
    \ |\n| `Accept`           | `application/json`                            | Defines\
    \ what acceptable content types are allowed by the client. For all types, use\
    \ `*/*`.     |\n| `Accept-Encoding`  | `deflate, gzip`                       \
    \        | Allows for the encoding to be specified (such as gzip).           \
    \                             |\n| `Accept-Language`  | `en-US`              \
    \                         | Indicates to the server the client's locale (defaults\
    \ `en-US`).                                |\n| `Authorization `   | `Basic Base64(\"\
    username:password\")`           | Basic authentication                       \
    \                                                    |\n| `Token `           |\
    \ `123456`                                      | Two-factor authentication token\
    \ (if enabled)                                                   |\n\n### Dates\
    \ & Times\n\nDates and/or times are specified as strings in the ISO 8601 format(s).\
    \ The following formats are supported as input:\n\n| Value                   \
    \    | Format                                                 | Notes        \
    \                                         |\n| --------------------------- | ------------------------------------------------------\
    \ | ----------------------------------------------------- |\n| Date          \
    \              | YYYY-MM-DD                                             | Defaults\
    \ to 12 am UTC (if used for a date & time      |\n| Date & time only         \
    \   | YYYY-MM-DD'T'hh:mm:ss[.nnn]                            | Defaults to UTC\
    \                                       |\n| Date & time in UTC          | YYYY-MM-DD'T'hh:mm:ss[.nnn]Z\
    \                           |                                                \
    \       |\n| Date & time w/ offset       | YYYY-MM-DD'T'hh:mm:ss[.nnn][+&#124;-]hh:mm\
    \             |                                                       |\n| Date\
    \ & time w/ zone-offset  | YYYY-MM-DD'T'hh:mm:ss[.nnn][+&#124;-]hh:mm[<zone-id>]\
    \  |                                                       |\n \n### Timezones\n\
    \nTimezones are specified in the regional zone format, such as `\"America/Los_Angeles\"\
    `, `\"Asia/Tokyo\"`, or `\"GMT\"`.\n \n### Paging\n\nPagination is supported on\
    \ certain collection resources using a combination of two query parameters, `page`\
    \ and `size`. \nAs these are control parameters, they are prefixed with the underscore\
    \ character. The page parameter dictates the \nzero-based index of the page to\
    \ retrieve, and the `size` indicates the size of the page. \n\nFor example, `/resources?page=2&size=10`\
    \ will return page 3, with 10 records per page, giving results 21-30.\n\nThe maximum\
    \ page size for a request is 500.\n\n### Sorting\n\nSorting is supported on paginated\
    \ resources with the `sort` query parameter(s). The sort query parameter(s) supports\
    \ \nidentifying a single or multi-property sort with a single or multi-direction\
    \ output. The format of the parameter is:\n\n```\nsort=property[,ASC|DESC]...\n\
    ```\n\nTherefore, the request `/resources?sort=name,title,DESC` would return the\
    \ results sorted by the name and title \ndescending, in that order. The sort directions\
    \ are either ascending `ASC` or descending `DESC`. With single-order \nsorting,\
    \ all properties are sorted in the same direction. To sort the results with varying\
    \ orders by property,\n multiple sort parameters are passed. \n \nFor example,\
    \ the request `/resources?sort=name,ASC&sort=title,DESC` would sort by name ascending\
    \ and title \ndescending, in that order.\n\n## Responses\n\nThe following response\
    \ statuses may be returned by this API.\n   \n| Status | Meaning             \
    \     | Usage                                                                \
    \                                                                            \
    \                        |\n| ------ | ------------------------ |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
    \ |\n| `200`  | OK                       | The operation performed without error\
    \ according to the specification of the request, and no more specific 2xx code\
    \ is suitable.                                          |\n| `201`  | Created\
    \                  | A create request has been fulfilled and a resource has been\
    \ created. The resource is available as the URI specified in the response, including\
    \ the `Location` header.    |\n| `202`  | Accepted                 | An asynchronous\
    \ task has been accepted, but not guaranteed, to be processed in the future. \
    \                                                                            \
    \  |\n| `400`  | Bad Request              | The request was invalid or cannot\
    \ be otherwise served. The request is not likely to succeed in the future without\
    \ modifications.                                         |\n| `401`  | Unauthorized\
    \             | The user is unauthorized to perform the operation requested, or\
    \ does not maintain permissions to perform the operation on the resource specified.\
    \                        |\n| `403`  | Forbidden                | The resource\
    \ exists to which the user has access, but the operating requested is not permitted.\
    \                                                                          |\n\
    | `404`  | Not Found                | The resource specified could not be located,\
    \ does not exist, or an unauthenticated client does not have permissions to a\
    \ resource.                                       |\n| `405`  | Method Not Allowed\
    \       | The operations may not be performed on the specific resource. Allowed\
    \ operations are returned and may be performed on the resource.              \
    \                        |\n| `408`  | Request Timeout          | The client has\
    \ failed to complete a request in a timely manner and the request has been discarded.\
    \                                                                       |\n| `413`\
    \  | Request Entity Too Large | The request being provided is too large for the\
    \ server to accept processing.                                               \
    \                                              |\n| `415`  | Unsupported Media\
    \ Type   | The media type is not supported for the requested resource.       \
    \                                                                            \
    \                           |\n| `500`  | Internal Server Error    | An internal\
    \ and unexpected error has occurred on the server at no fault of the client. \
    \                                                                            \
    \      |\n\n### Security\n\nThe response statuses 401, 403 and 404 need special\
    \ consideration for security purposes. As necessary, \nerror statuses and messages\
    \ may be obscured to strengthen security and prevent information exposure. The\
    \ following is a \nguideline for privileged resource response statuses:\n\n| Use\
    \ Case                                                           | Access    \
    \         | Resource           | Permission   | Status       |\n| ------------------------------------------------------------------\
    \ | ------------------ |------------------- | ------------ | ------------ |\n\
    | Unauthenticated access to an unauthenticated resource.             | Unauthenticated\
    \    | Unauthenticated    | Yes          | `20x`        |\n| Unauthenticated access\
    \ to an authenticated resource.               | Unauthenticated    | Authenticated\
    \      | No           | `401`        |\n| Unauthenticated access to an authenticated\
    \ resource.               | Unauthenticated    | Non-existent       | No     \
    \      | `401`        |\n| Authenticated access to a unauthenticated resource.\
    \                | Authenticated      | Unauthenticated    | Yes          | `20x`\
    \        |\n| Authenticated access to an authenticated, unprivileged resource.\
    \   | Authenticated      | Authenticated      | No           | `404`        |\n\
    | Authenticated access to an authenticated, privileged resource.     | Authenticated\
    \      | Authenticated      | Yes          | `20x`        |\n| Authenticated access\
    \ to an authenticated, non-existent resource    | Authenticated      | Non-existent\
    \       | Yes          | `404`        |\n\n### Headers\n\nCommonly used response\
    \ headers include:\n\n| Header                     |  Example                \
    \          | Purpose                                                         |\n\
    | -------------------------- | --------------------------------- | ---------------------------------------------------------------\
    \ |\n| `Allow`                    | `OPTIONS, GET`                    | Defines\
    \ the allowable HTTP operations on a resource.            |\n| `Cache-Control`\
    \            | `no-store, must-revalidate`       | Disables caching of resources\
    \ (as they are all dynamic).        |\n| `Content-Encoding`         | `gzip` \
    \                           | The encoding of the response body (if any).    \
    \                 |\n| `Location`                 |                          \
    \         | Refers to the URI of the resource created by a request.         |\n\
    | `Transfer-Encoding`        | `chunked`                         | Specified the\
    \ encoding used to transform response.              |\n| `Retry-After`       \
    \       | 5000                              | Indicates the time to wait before\
    \ retrying a request.           |\n| `X-Content-Type-Options`   | `nosniff`  \
    \                       | Disables MIME type sniffing.                       \
    \             |\n| `X-XSS-Protection`         | `1; mode=block`              \
    \     | Enables XSS filter protection.                                  |\n| `X-Frame-Options`\
    \          | `SAMEORIGIN`                      | Prevents rendering in a frame\
    \ from a different origin.          |\n| `X-UA-Compatible`          | `IE=edge,chrome=1`\
    \                | Specifies the browser mode to render in.                  \
    \      |\n\n### Format\n\nWhen `application/json` is returned in the response\
    \ body it is always pretty-printed (indented, human readable output). \nAdditionally,\
    \ gzip compression/encoding is supported on all responses. \n\n#### Dates & Times\n\
    \nDates or times are returned as strings in the ISO 8601 'extended' format. When\
    \ a date and time is returned (instant) the value is converted to UTC.\n\nFor\
    \ example:\n\n| Value           | Format                         | Example   \
    \            |\n| --------------- | ------------------------------ | ---------------------\
    \ |\n| Date            | `YYYY-MM-DD`                   | 2017-12-03         \
    \   |\n| Date & Time     | `YYYY-MM-DD'T'hh:mm:ss[.nnn]Z` | 2017-12-03T10:15:30Z\
    \  |\n\n#### Content\n\nIn some resources a Content data type is used. This allows\
    \ for multiple formats of representation to be returned\nwithin resource, specifically\
    \ `\"html\"` and `\"text\"`. The `\"text\"` property returns a flattened representation\
    \ suitable\nfor output in textual displays. The `\"html\"` property returns an\
    \ HTML fragment suitable for display within an HTML \nelement. Note, the HTML\
    \ returned is not a valid stand-alone HTML document.\n\n#### Paging\n\nThe response\
    \ to a paginated request follows the format:\n\n```json\n{\n   resources\": [\
    \ \n      ... \n   ],\n   \"page\": { \n      \"number\" : ...,\n      \"size\"\
    \ : ...,\n      \"totalResources\" : ...,\n      \"totalPages\" : ...\n   },\n\
    \   \"links\": [ \n      \"first\" : {\n         \"href\" : \"...\"\n       },\n\
    \       \"prev\" : {\n         \"href\" : \"...\"\n       },\n       \"self\"\
    \ : {\n         \"href\" : \"...\"\n       },\n       \"next\" : {\n         \"\
    href\" : \"...\"\n       },\n       \"last\" : {\n         \"href\" : \"...\"\n\
    \       } \n   ]\n}\n```\n\nThe `resources` property is an array of the resources\
    \ being retrieved from the endpoint, each which should contain at \nminimum a\
    \ \"self\" relation hypermedia link. The `page` property outlines the details\
    \ of the current page and total\npossible pages. The object for the page includes\
    \ the following properties:\n\n- number - The page number (zero-based) of the\
    \ page returned.\n- size - The size of the pages, which is less than or equal\
    \ to the maximum page size.\n- totalResources - The total amount of resources\
    \ available across all pages.\n- totalPages - The total amount of pages.\n\nThe\
    \ last property of the paged response is the `links` array, which contains all\
    \ available hypermedia links. For \npaginated responses, the \"self\", \"next\"\
    , \"previous\", \"first\", and \"last\" links are returned. The \"self\" link\
    \ must\nalways be returned and should contain a link to allow the client to replicate\
    \ the original request against the \ncollection resource in an identical manner\
    \ to that in which it was invoked. \n\nThe \"next\" and \"previous\" links are\
    \ present if either or both there exists a previous or next page, respectively.\
    \ \nThe \"next\" and \"previous\" links have hrefs that allow \"natural movement\"\
    \ to the next page, that is all parameters \nrequired to move the next page are\
    \ provided in the link. The \"first\" and \"last\" links provide references to\
    \ the first\nand last pages respectively. \n\nRequests outside the boundaries\
    \ of the pageable will result in a `404 NOT FOUND`. Paginated requests do not\
    \ provide a \n\"stateful cursor\" to the client, nor does it need to provide a\
    \ read consistent view. Records in adjacent pages may \nchange while pagination\
    \ is being traversed, and the total number of pages and resources may change between\
    \ requests \nwithin the same filtered/queries resource collection.\n\n#### Property\
    \ Views\n\nThe \"depth\" of the response of a resource can be configured using\
    \ a \"view\". All endpoints supports two views that can \ntune the extent of the\
    \ information returned in the resource. The supported views are `summary` and\
    \ `details` (the default). \nView are specified using a query parameter, in this\
    \ format:\n\n```bash\n/<resource>?view={viewName}\n```\n\n#### Error\n\nAny error\
    \ responses can provide a response body with a message to the client indicating\
    \ more information (if applicable) \nto aid debugging of the error. All 40x and\
    \ 50x responses will return an error response in the body. The format of the \n\
    response is as follows:\n\n```json\n{\n   \"status\": <statusCode>,\n   \"message\"\
    : <message>,\n   \"links\" : [ {\n      \"rel\" : \"...\",\n      \"href\" : \"\
    ...\"\n    } ]\n} \n ```\n \nThe `status` property is the same as the HTTP status\
    \ returned in the response, to ease client parsing. The message \nproperty is\
    \ a localized message in the request client's locale (if applicable) that articulates\
    \ the nature of the \nerror. The last property is the `links` property. This may\
    \ contain additional \n[hypermedia links](#section/Overview/Authentication) to\
    \ troubleshoot.\n\n#### Search Criteria <a section=\"section/Responses/SearchCriteria\"\
    ></a>\n\nMultiple resources make use of search criteria to match assets. Search\
    \ criteria is an array of search filters. Each \nsearch filter has a generic format\
    \ of:\n\n```json\n{ \n   \"field\": \"<field-name>\", \n   \"operator\": \"<operator>\"\
    , \n   [\"value\": \"<value>\",]\n   [\"lower\": \"<value>\",]\n   [\"upper\"\
    : \"<value>\"]\n}\n   \n```\n\nEvery filter defines two required properties `field`\
    \ and `operator`. The field is the name of an asset property that\nis being filtered\
    \ on. The operator is a type and property-specific operating performed on the\
    \ filtered property. The\nvalid values for fields and operators are outlined in\
    \ the table below.\n\nEvery filter also defines one or more values that are supplied\
    \ to the operator. The valid values vary by operator\nand are outlined below.\n\
    \n##### Fields\n\nThe following table outlines the search criteria fields and\
    \ the available operators:\n\n| Field                             | Operators\
    \                                                                            \
    \                                          |\n| ---------------------------------\
    \ | ------------------------------------------------------------------------------------------------------------------------------\
    \ |\n| `alternate-address-type`          | `in`                              \
    \                                                                            \
    \                 |\n| `container-image`                 | `is` ` is-not` ` starts-with`\
    \ ` ends-with` ` contains` ` does-not-contain` ` is-like` ` not-like`        \
    \                      |\n| `container-status`                | `is` ` is-not`\
    \                                                                            \
    \                                     |\n| `containers`                      |\
    \ `are`                                                                      \
    \                                                    |\n| `criticality-tag`  \
    \               | `is` ` is-not` ` is-greater-than` ` is-less-than` ` is-applied`\
    \ ` is-not-applied`                                              |\n| `custom-tag`\
    \                      | `is` ` is-not` ` starts-with` ` ends-with` ` contains`\
    \ ` does-not-contain` ` is-applied` ` is-not-applied`                     |\n\
    | `cve`                             | `is` ` is-not` ` contains` ` does-not-contain`\
    \                                                                            \
    \     |\n| `cvss-access-complexity`          | `is` ` is-not`                \
    \                                                                            \
    \                     |\n| `cvss-authentication-required`    | `is` ` is-not`\
    \                                                                            \
    \                                     |\n| `cvss-access-vector`              |\
    \ `is` ` is-not`                                                             \
    \                                                    |\n| `cvss-availability-impact`\
    \        | `is` ` is-not`                                                    \
    \                                                             |\n| `cvss-confidentiality-impact`\
    \     | `is` ` is-not`                                                       \
    \                                                          |\n| `cvss-integrity-impact`\
    \           | `is` ` is-not`                                                 \
    \                                                                |\n| `cvss-v3-confidentiality-impact`\
    \  | `is` ` is-not`                                                          \
    \                                                       |\n| `cvss-v3-integrity-impact`\
    \        | `is` ` is-not`                                                    \
    \                                                             |\n| `cvss-v3-availability-impact`\
    \     | `is` ` is-not`                                                       \
    \                                                          |\n| `cvss-v3-attack-vector`\
    \           | `is` ` is-not`                                                 \
    \                                                                |\n| `cvss-v3-attack-complexity`\
    \       | `is` ` is-not`                                                     \
    \                                                            |\n| `cvss-v3-user-interaction`\
    \        | `is` ` is-not`                                                    \
    \                                                             |\n| `cvss-v3-privileges-required`\
    \     | `is` ` is-not`                                                       \
    \                                                          |\n| `host-name`  \
    \                     | `is` ` is-not` ` starts-with` ` ends-with` ` contains`\
    \ ` does-not-contain` ` is-empty` ` is-not-empty` ` is-like` ` not-like`  |\n\
    | `host-type`                       | `in` ` not-in`                         \
    \                                                                            \
    \            |\n| `ip-address`                      | `is` ` is-not` ` in-range`\
    \ ` not-in-range` ` is-like` ` not-like`                                     \
    \                         |\n| `ip-address-type`                 | `in` ` not-in`\
    \                                                                            \
    \                                     |\n| `last-scan-date`                  |\
    \ `is-on-or-before` ` is-on-or-after` ` is-between` ` is-earlier-than` ` is-within-the-last`\
    \                                     |\n| `location-tag`                    |\
    \ `is` ` is-not` ` starts-with` ` ends-with` ` contains` ` does-not-contain` `\
    \ is-applied` ` is-not-applied`                     |\n| `mobile-device-last-sync-time`\
    \    | `is-within-the-last` ` is-earlier-than`                               \
    \                                                         |\n| `open-ports`  \
    \                    | `is` ` is-not` ` in-range`                            \
    \                                                                         |\n\
    | `operating-system`                | `contains` ` does-not-contain` ` is-empty`\
    \ ` is-not-empty`                                                            \
    \         |\n| `owner-tag`                       | `is` ` is-not` ` starts-with`\
    \ ` ends-with` ` contains` ` does-not-contain` ` is-applied` ` is-not-applied`\
    \                     |\n| `pci-compliance`                  | `is`          \
    \                                                                            \
    \                                     |\n| `risk-score`                      |\
    \ `is` ` is-not` ` in-range` ` greater-than` ` less-than`                    \
    \                                                    |\n| `service-name`     \
    \               | `contains` ` does-not-contain`                             \
    \                                                                    |\n| `site-id`\
    \                         | `in` ` not-in`                                   \
    \                                                                            \
    \  |\n| `software`                        | `contains` ` does-not-contain`   \
    \                                                                            \
    \                  |\n| `vAsset-cluster`                  | `is` ` is-not` ` contains`\
    \ ` does-not-contain` ` starts-with`                                         \
    \                         |\n| `vAsset-datacenter`               | `is` ` is-not`\
    \                                                                            \
    \                                     |\n| `vAsset-host-name`                |\
    \ `is` ` is-not` ` contains` ` does-not-contain` ` starts-with`              \
    \                                                    |\n| `vAsset-power-state`\
    \              | `in` ` not-in`                                              \
    \                                                                   |\n| `vAsset-resource-pool-path`\
    \       | `contains` ` does-not-contain`                                     \
    \                                                            |\n| `vulnerability-assessed`\
    \          | `is-on-or-before` ` is-on-or-after` ` is-between` ` is-earlier-than`\
    \ ` is-within-the-last`                                     |\n| `vulnerability-category`\
    \          | `is` ` is-not` ` starts-with` ` ends-with` ` contains` ` does-not-contain`\
    \                                                     |\n| `vulnerability-cvss-v3-score`\
    \     | `is` ` is-not`                                                       \
    \                                                          |\n| `vulnerability-cvss-score`\
    \        | `is` ` is-not` ` in-range` ` is-greater-than` ` is-less-than`     \
    \                                                             |\n| `vulnerability-exposures`\
    \         | `includes` ` does-not-include`                                   \
    \                                                              |\n| `vulnerability-title`\
    \             | `contains` ` does-not-contain` ` is` ` is-not` ` starts-with`\
    \ ` ends-with`                                                     |\n| `vulnerability-validated-status`\
    \  | `are`                                                                   \
    \                                                       |\n\n##### Enumerated\
    \ Properties\n\nThe following fields have enumerated values:\n\n| Field      \
    \                               | Acceptable Values                          \
    \                                                                   |\n| -----------------------------------------\
    \ | -------------------------------------------------------------------------------------------------------------\
    \ |\n| `alternate-address-type`                  | 0=IPv4, 1=IPv6            \
    \                                                                            \
    \        |\n| `containers`                              | 0=present, 1=not present\
    \                                                                            \
    \          |\n| `container-status`                        | `created` `running`\
    \ `paused` `restarting` `exited` `dead` `unknown`                            \
    \               |\n| `cvss-access-complexity`                  | <ul><li><code>L</code>\
    \ = Low</li><li><code>M</code> = Medium</li><li><code>H</code> = High</li></ul>\
    \          |\n| `cvss-integrity-impact`                   | <ul><li><code>N</code>\
    \ = None</li><li><code>P</code> = Partial</li><li><code>C</code> = Complete</li></ul>\
    \    |\n| `cvss-confidentiality-impact`             | <ul><li><code>N</code> =\
    \ None</li><li><code>P</code> = Partial</li><li><code>C</code> = Complete</li></ul>\
    \    |\n| `cvss-availability-impact`                | <ul><li><code>N</code> =\
    \ None</li><li><code>P</code> = Partial</li><li><code>C</code> = Complete</li></ul>\
    \    |\n| `cvss-access-vector`                      | <ul><li><code>L</code> =\
    \ Local</li><li><code>A</code> = Adjacent</li><li><code>N</code> = Network</li></ul>\
    \   |\n| `cvss-authentication-required`            | <ul><li><code>N</code> =\
    \ None</li><li><code>S</code> = Single</li><li><code>M</code> = Multiple</li></ul>\
    \     |\n| `cvss-v3-confidentiality-impact`     | <ul><li><code>L</code> = Local</li><li><code>L</code>\
    \ = Low</li><li><code>N</code> = None</li><li><code>H</code> = High</li></ul>\
    \          |\n| `cvss-v3-integrity-impact`            | <ul><li><code>L</code>\
    \ = Local</li><li><code>L</code> = Low</li><li><code>N</code> = None</li><li><code>H</code>\
    \ = High</li></ul>          |\n| `cvss-v3-availability-impact`             | <ul><li><code>N</code>\
    \ = None</li><li><code>L</code> = Low</li><li><code>H</code> = High</li></ul>\
    \    |\n| `cvss-v3-attack-vector`                | <ul><li><code>N</code> = Network</li><li><code>A</code>\
    \ = Adjacent</li><li><code>L</code> = Local</li><li><code>P</code> = Physical</li></ul>\
    \    |\n| `cvss-v3-attack-complexity`                      | <ul><li><code>L</code>\
    \ = Low</li><li><code>H</code> = High</li></ul>   |\n| `cvss-v3-user-interaction`\
    \            | <ul><li><code>N</code> = None</li><li><code>R</code> = Required</li></ul>\
    \     |\n| `cvss-v3-privileges-required`         | <ul><li><code>N</code> = None</li><li><code>L</code>\
    \ = Low</li><li><code>H</code> = High</li></ul>    |\n| `host-type`          \
    \                     | 0=Unknown, 1=Guest, 2=Hypervisor, 3=Physical, 4=Mobile\
    \                                                        |\n| `ip-address-type`\
    \                         | 0=IPv4, 1=IPv6                                   \
    \                                                             |\n| `pci-compliance`\
    \                          | 0=fail, 1=pass                                  \
    \                                                              |\n| `vulnerability-validated-status`\
    \          | 0=present, 1=not present                                        \
    \                                              |\n\n##### Operator Properties\
    \ <a section=\"section/Responses/SearchCriteria/OperatorProperties\"></a>\n\n\
    The following table outlines which properties are required for each operator and\
    \ the appropriate data type(s):\n\n| Operator              | `value`         \
    \      | `lower`               | `upper`               |\n| ----------------------|-----------------------|-----------------------|-----------------------|\n\
    | `are`                 | `string`              |                       |    \
    \                   |\n| `contains`            | `string`              |     \
    \                  |                       |\n| `does-not-contain`    | `string`\
    \              |                       |                       |\n| `ends with`\
    \           | `string`              |                       |                \
    \       |\n| `in`                  | `Array[ string ]`     |                 \
    \      |                       |\n| `in-range`            |                  \
    \     | `numeric`             | `numeric`             |\n| `includes`        \
    \    | `Array[ string ]`     |                       |                       |\n\
    | `is`                  | `string`              |                       |    \
    \                   |\n| `is-applied`          |                       |     \
    \                  |                       |\n| `is-between`          |      \
    \                 | `numeric`             | `numeric`             |\n| `is-earlier-than`\
    \     | `numeric`             |                       |                      \
    \ |\n| `is-empty`            |                       |                       |\
    \                       |\n| `is-greater-than`     | `numeric`             | \
    \                      |                       |\n| `is-on-or-after`      | `string`\
    \ (yyyy-MM-dd) |                       |                       |\n| `is-on-or-before`\
    \     | `string` (yyyy-MM-dd) |                       |                      \
    \ |\n| `is-not`              | `string`              |                       |\
    \                       |\n| `is-not-applied`      |                       | \
    \                      |                       |\n| `is-not-empty`        |  \
    \                     |                       |                       |\n| `is-within-the-last`\
    \  | `numeric`              |                       |                       |\n\
    | `less-than`           | `string`              |                       |    \
    \                   |\n| `like`                | `string`              |     \
    \                  |                       |\n| `not-contains`        | `string`\
    \              |                       |                       |\n| `not-in` \
    \             | `Array[ string ]`     |                       |              \
    \         |\n| `not-in-range`        |                       | `numeric`     \
    \        | `numeric`             |\n| `not-like`            | `string`       \
    \       |                       |                       |\n| `starts-with`   \
    \      | `string`              |                       |                     \
    \  |\n\n#### Discovery Connection Search Criteria <a section=\"section/Responses/DiscoverySearchCriteria\"\
    ></a>\n\nDynamic sites make use of search criteria to match assets from a discovery\
    \ connection. Search criteria is an array of search filters.  \n\nEach search\
    \ filter has a generic format of:\n\n```json\n{ \n   \"field\": \"<field-name>\"\
    , \n   \"operator\": \"<operator>\", \n   [\"value\": \"<value>\",]\n   [\"lower\"\
    : \"<value>\",]\n   [\"upper\": \"<value>\"]\n}\n   \n```\n\nEvery filter defines\
    \ two required properties `field` and `operator`. The field is the name of an\
    \ asset property that\nis being filtered on. The list of supported fields vary\
    \ depending on the type of discovery connection configured \nfor the dynamic site\
    \ (e.g vSphere, ActiveSync, etc.). The operator is a type and property-specific\
    \ operating \nperformed on the filtered property. The valid values for fields\
    \ outlined in the tables below and are grouped by the \ntype of connection.  \n\
    \nEvery filter also defines one or more values that are supplied to the operator.\
    \ See \n<a href=\"#section/Responses/SearchCriteria/OperatorProperties\">Search\
    \ Criteria Operator Properties</a> for more \ninformation on the valid values\
    \ for each operator.  \n\n##### Fields (ActiveSync)\n\nThis section documents\
    \ search criteria information for ActiveSync discovery connections. The discovery\
    \ connections \nmust be one of the following types: `\"activesync-ldap\"`, `\"\
    activesync-office365\"`, or `\"activesync-powershell\"`.  \n\nThe following table\
    \ outlines the search criteria fields and the available operators for ActiveSync\
    \ connections:\n\n| Field                             | Operators            \
    \                                         |\n| ---------------------------------\
    \ | ------------------------------------------------------------- |\n| `last-sync-time`\
    \                  | `is-within-the-last` ` is-earlier-than`                 \
    \      |\n| `operating-system`                | `contains` ` does-not-contain`\
    \                                |\n| `user`                            | `is`\
    \ ` is-not` ` contains` ` does-not-contain` ` starts-with` |\n\n##### Fields (AWS)\n\
    \nThis section documents search criteria information for AWS discovery connections.\
    \ The discovery connections must be the type `\"aws\"`.  \n\nThe following table\
    \ outlines the search criteria fields and the available operators for AWS connections:\n\
    \n| Field                   | Operators                                      \
    \               |\n| ----------------------- | -------------------------------------------------------------\
    \ |\n| `availability-zone`     | `contains` ` does-not-contain`              \
    \                  |\n| `guest-os-family`       | `contains` ` does-not-contain`\
    \                                |\n| `instance-id`           | `contains` ` does-not-contain`\
    \                                |\n| `instance-name`         | `is` ` is-not`\
    \ ` contains` ` does-not-contain` ` starts-with` |\n| `instance-state`       \
    \ | `in` ` not-in`                                                |\n| `instance-type`\
    \         | `in` ` not-in`                                                |\n\
    | `ip-address`            | `in-range` ` not-in-range` ` is` ` is-not`       \
    \             |\n| `region`                | `in` ` not-in`                  \
    \                              |\n| `vpc-id`                | `is` ` is-not` `\
    \ contains` ` does-not-contain` ` starts-with` |\n\n##### Fields (DHCP)\n\nThis\
    \ section documents search criteria information for DHCP discovery connections.\
    \ The discovery connections must be the type `\"dhcp\"`.  \n\nThe following table\
    \ outlines the search criteria fields and the available operators for DHCP connections:\n\
    \n| Field           | Operators                                              \
    \       |\n| --------------- | -------------------------------------------------------------\
    \ |\n| `host-name`     | `is` ` is-not` ` contains` ` does-not-contain` ` starts-with`\
    \ |\n| `ip-address`    | `in-range` ` not-in-range` ` is` ` is-not`          \
    \          |\n| `mac-address`   | `is` ` is-not` ` contains` ` does-not-contain`\
    \ ` starts-with` |\n\n##### Fields (Sonar)\n\nThis section documents search criteria\
    \ information for Sonar discovery connections. The discovery connections must\
    \ be the type `\"sonar\"`.  \n\nThe following table outlines the search criteria\
    \ fields and the available operators for Sonar connections:\n\n| Field       \
    \        | Operators            |\n| ------------------- | --------------------\
    \ |\n| `search-domain`     | `contains` ` is`     |\n| `ip-address`        | `in-range`\
    \ ` is`     |\n| `sonar-scan-date`   | `is-within-the-last` |\n\n##### Fields\
    \ (vSphere)\n\nThis section documents search criteria information for vSphere\
    \ discovery connections. The discovery connections must be the type `\"vsphere\"\
    `.  \n\nThe following table outlines the search criteria fields and the available\
    \ operators for vSphere connections:\n\n| Field                | Operators   \
    \                                                                            \
    \   |\n| -------------------- | ------------------------------------------------------------------------------------------\
    \ |\n| `cluster`            | `is` ` is-not` ` contains` ` does-not-contain` `\
    \ starts-with`                              |\n| `data-center`        | `is` `\
    \ is-not`                                                                    \
    \         |\n| `discovered-time`    | `is-on-or-before` ` is-on-or-after` ` is-between`\
    \ ` is-earlier-than` ` is-within-the-last` |\n| `guest-os-family`    | `contains`\
    \ ` does-not-contain`                                                        \
    \     |\n| `host-name`          | `is` ` is-not` ` contains` ` does-not-contain`\
    \ ` starts-with`                              |\n| `ip-address`         | `in-range`\
    \ ` not-in-range` ` is` ` is-not`                                            \
    \     |\n| `power-state`        | `in` ` not-in`                             \
    \                                                |\n| `resource-pool-path` | `contains`\
    \ ` does-not-contain`                                                        \
    \     |\n| `last-time-seen`     | `is-on-or-before` ` is-on-or-after` ` is-between`\
    \ ` is-earlier-than` ` is-within-the-last` |\n| `vm`                 | `is` `\
    \ is-not` ` contains` ` does-not-contain` ` starts-with`                     \
    \         |\n\n##### Enumerated Properties (vSphere)\n\nThe following fields have\
    \ enumerated values:\n\n| Field         | Acceptable Values                  \
    \  |\n| ------------- | ------------------------------------ |\n| `power-state`\
    \ | `poweredOn` `poweredOff` `suspended` |\n\n## HATEOAS\n\nThis API follows Hypermedia\
    \ as the Engine of Application State (HATEOAS) principals and is therefore hypermedia\
    \ friendly. \nHyperlinks are returned in the `links` property of any given resource\
    \ and contain a fully-qualified hyperlink to\nthe corresponding resource. The\
    \ format of the hypermedia link adheres to both the\n<a target=\"_blank\" href=\"\
    http://jsonapi.org\">{json:api} v1</a> \n<a target=\"_blank\" href=\"http://jsonapi.org/format/#document-links\"\
    >\"Link Object\"</a> and \n<a target=\"_blank\" href=\"http://json-schema.org/latest/json-schema-hypermedia.html\"\
    >JSON Hyper-Schema</a> \n<a target=\"_blank\" href=\"http://json-schema.org/latest/json-schema-hypermedia.html#rfc.section.5.2\"\
    >\"Link Description Object\"</a>\nformats. For example:\n\n```json\n\"links\"\
    : [{\n  \"rel\": \"<relation>\",\n  \"href\": \"<href>\"\n  ...\n}]\n```\n\nWhere\
    \ appropriate link objects may also contain additional properties than the `rel`\
    \ and `href` properties, such as `id`, `type`, etc.\n\nSee the [Root](#tag/Root)\
    \ resources for the entry points into API discovery.\n"
  title: InsightVM API
  version: '3'
paths:
  /api/3:
    get:
      consumes:
      - application/json
      description: Returns a listing of the resources (endpoints) that are available
        to be invoked in this API.
      operationId: resources
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Resources
      tags:
      - Root
  /api/3/administration/commands:
    post:
      consumes:
      - application/json
      description: Executes a console command against the Security Console. <span
        class="authorization">Global Administrator</span>
      operationId: executeCommand
      parameters:
      - description: The console command to execute.
        in: body
        name: command
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ConsoleCommandOutput'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Console Commands
      tags:
      - Administration
      x-code-samples:
      - lang: Show Host Info
        source: show host info
      - lang: Help
        source: help
  /api/3/administration/info:
    get:
      consumes:
      - application/json
      description: Returns system details, including host and version information.
      operationId: getInfo
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Info'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Information
      tags:
      - Administration
  /api/3/administration/license:
    get:
      consumes:
      - application/json
      description: Returns the enabled features and limits of the current license.
        <span class="authorization">Global Administrator</span>
      operationId: getLicense
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/License'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: License
      tags:
      - Administration
    post:
      consumes:
      - multipart/form-data
      description: Licenses the product with an activation key or a provided license
        file. If both are provided, the license file is preferred. <span class="authorization">Global
        Administrator</span>
      operationId: activateLicense
      parameters:
      - description: The contents of a license (.lic) file.
        in: formData
        name: license
        required: false
        type: file
      - description: A license activation key.
        in: query
        name: key
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: License
      tags:
      - Administration
  /api/3/administration/properties:
    get:
      consumes:
      - application/json
      description: Returns system details, including host and version information.
      operationId: getProperties
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/EnvironmentProperties'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Properties
      tags:
      - Administration
  /api/3/administration/settings:
    get:
      consumes:
      - application/json
      description: Returns the current administration settings. <span class="authorization">Global
        Administrator</span>
      operationId: getSettings
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Settings'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Settings
      tags:
      - Administration
  /api/3/asset_groups:
    get:
      consumes:
      - application/json
      description: Returns all asset groups.
      operationId: getAssetGroups
      parameters:
      - description: The type of asset group.
        in: query
        name: type
        required: false
        type: string
      - description: A search pattern for the name of the asset group. Searches are
          case-insensitive contains.
        in: query
        name: name
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«AssetGroup»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Groups
      tags:
      - Asset Group
    post:
      consumes:
      - application/json
      description: "Creates a new asset group. The `searchCriteria` field can be passed\
        \ no matter what the type of the asset group is. The asset group `type` changes\
        \ when the assets are refreshed. Dynamic asset groups constantly refreshed\
        \ their membership as assets are scanned whereas static asset groups do not\
        \ change membership automatically. \nSee the <a href=\"#section/Responses/SearchCriteria\"\
        >Search Criteria</a> for more information on using dynamic criteria."
      operationId: createAssetGroup
      parameters:
      - description: The details of the asset group.
        in: body
        name: assetGroup
        required: false
        schema:
          $ref: '#/definitions/AssetGroup'
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«AssetGroupID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Groups
      tags:
      - Asset Group
      x-code-samples:
      - lang: An Empty Static Asset Group
        source: "{\n    \"description\": \"A Static Asset Group With No Assets. In\
          \ order to add assets to this group you can POST to the /assets endpoint\
          \ or PUT to the /assets/{assetID} endpoint.\",\n    \"name\": \"Empty Static\
          \ Asset Groups\",\n    \"type\": \"static\"\n}"
      - lang: A static asset group with assets defined by search criteria
        source: "{\n    \"description\": \"A Static Asset Group with Assets that are\
          \ Linux Assets running Containers (With Low Access Complexity Vulnerabilities)\
          \ for remediation purposes.\",\n    \"name\": \"Container Hosts - Linux\"\
          ,\n    \"searchCriteria\": {\n        \"filters\": [\n            { \"field\"\
          : \"operating-system\", \"operator\": \"contains\", \"value\": \"linux\"\
          \ },\n            { \"field\": \"containers\", \"operator\": \"are\", \"\
          value\": 0 },\n            { \"field\": \"cvss-access-complexity\", \"operator\"\
          : \"is\", \"value\": \"L\" }\n        ],\n        \"match\": \"all\"\n \
          \   },\n    \"type\": \"static\"\n}"
      - lang: A dynamic asset group
        source: "{\n    \"description\": \"A Static Asset Group with Assets that are\
          \ Linux Assets running Containers (With Low Access Complexity Vulnerabilities)\
          \ for remediation purposes.\",\n    \"name\": \"Container Hosts - Linux\"\
          ,\n    \"searchCriteria\": {\n        \"filters\": [\n            { \"field\"\
          : \"operating-system\", \"operator\": \"contains\", \"value\": \"linux\"\
          \ },\n            { \"field\": \"containers\", \"operator\": \"are\", \"\
          value\": 0 },\n            { \"field\": \"cvss-access-complexity\", \"operator\"\
          : \"is\", \"value\": \"L\" }\n        ],\n        \"match\": \"all\"\n \
          \   },\n    \"type\": \"dynamic\"\n}"
  /api/3/asset_groups/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the asset group.
      operationId: deleteAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group
      tags:
      - Asset Group
    get:
      consumes:
      - application/json
      description: Returns an asset group.
      operationId: getAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/AssetGroup'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Updates the details of an asset group. See the search criteria
        endpoint (/search_criteria) for more information about building the search
        criteria and examples.
      operationId: updateAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The details of the asset group.
        in: body
        name: assetGroup
        required: false
        schema:
          $ref: '#/definitions/AssetGroup'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/assets:
    delete:
      consumes:
      - application/json
      description: Removes the assets from the given static asset group.
      operationId: removeAllAssetsFromAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Assets
      tags:
      - Asset Group
    get:
      consumes:
      - application/json
      description: Returns hypermedia links for the assets that belong to an asset
        group.
      operationId: getAssetGroupAssets
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«AssetID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Assets
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Updates all the assets that belong to a static asset group.
      operationId: updateAssetGroupAssets
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: 'The assets to place in the asset group. '
        in: body
        name: assets
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Assets
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/assets/{assetId}:
    delete:
      consumes:
      - application/json
      description: Removes an asset from an asset group.
      operationId: removeAssetFromAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Asset
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Adds an asset to a static asset group.
      operationId: addAssetToAssetGroup
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Asset
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/search_criteria:
    get:
      consumes:
      - application/json
      description: Returns the search criteria of a dynamic asset group.For a reference
        of valid search criteria input see the <a href="#operation/getAssetsSearchUsingPOST">Asset
        Search</a> resource.
      operationId: getAssetGroupSearchCriteria
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SearchCriteria'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Search Criteria
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Updates the search criteria of a dynamic asset group. For a reference
        of valid search criteria input see the <a href="#operation/getAssetsSearchUsingPOST">Asset
        Search</a> resource.
      operationId: setAssetGroupSearchCriteria
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The search criteria specification.
        in: body
        name: criteria
        required: false
        schema:
          $ref: '#/definitions/SearchCriteria'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Search Criteria
      tags:
      - Asset Group
      x-code-samples:
      - lang: Unassigned PCI Incompliant Windows Assets
        source: "{\n   \"description\": \"This is an asset group that contains assets\
          \ that have not been recently scanned in our Los Angeles Datacenter that\
          \ are also high risk.\",\n   \"name\": \"Stale Los Angeles Assets (High\
          \ Risk)\",\n   \"type\": \"dynamic\",\n   \"searchCriteria\": {\n      \"\
          match\": \"all\",\n      \"filters\": [\n         { \"field\": \"location-tag\"\
          , \"operator\": \"contains\", \"value\": \"Los Angeles Datacenter\" },\n\
          \         { \"field\": \"risk-score\", \"operator\": \"is-greater-than\"\
          , \"value\": 5000 },\n         { \"field\": \"last-scan-date\", \"operator\"\
          : \"is-on-or-before\", \"value\": \"2016-12-31\" }\n      ]\n   }\n}"
      - lang: Stale Los Angeles Assets (High Risk)
        source: "{\n   \"description\": \"This is an asset group that contains Windows\
          \ Assets that are not PCI compliant and not assigned to an owner.\",\n \
          \  \"name\": \"Unassigned PCI Incompliant Windows Assets\",\n   \"type\"\
          : \"dynamic\",\n   \"searchCriteria\": {\n      \"match\": \"all\",\n  \
          \    \"filters\": [\n         { \"field\": \"pci-compliance\", \"operator\"\
          : \"is\", \"value\": \"0\" },\n         { \"field\": \"owner-tag\", \"operator\"\
          : \"is-not-applied\" },\n         { \"field\": \"operating-system\", \"\
          operator\": \"contains\", \"value\": \"windows\" }\n      ]\n   }\n}"
  /api/3/asset_groups/{id}/tags:
    delete:
      consumes:
      - application/json
      description: Removes all tag associations from the asset group.
      operationId: removeAllAssetGroupTags
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Tags
      tags:
      - Asset Group
    get:
      consumes:
      - application/json
      description: Returns the tags assigned to an asset group.
      operationId: getAssetGroupTags
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«TagID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Tags
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Updates the tags of an asset group.
      operationId: setAssetGroupTags
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The tags to associate to the asset group.
        in: body
        name: tags
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Tags
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/tags/{tagId}:
    delete:
      consumes:
      - application/json
      description: Removes a tag from an asset group.
      operationId: removeAssetGroupTag
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Tag
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Adds a tag to an asset group.
      operationId: addAssetGroupTag
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Tag
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/users:
    get:
      consumes:
      - application/json
      description: Returns hypermedia links for the users with access to this asset
        group.
      operationId: getAssetGroupUsers
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«UserID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Users
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Grants users with sufficient privileges access to an asset group.
      operationId: setAssetGroupUsers
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The users to grant access to the asset group.
        in: body
        name: users
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Users
      tags:
      - Asset Group
  /api/3/asset_groups/{id}/users/{userId}:
    delete:
      consumes:
      - application/json
      description: Removes a user's access from an asset group.
      operationId: removeAssetGroupUser
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the user.
        format: int32
        in: path
        name: userId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group User
      tags:
      - Asset Group
    put:
      consumes:
      - application/json
      description: Grants a user with sufficient privileges access to the asset group.
      operationId: addAssetGroupUser
      parameters:
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the user.
        format: int32
        in: path
        name: userId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group User
      tags:
      - Asset Group
  /api/3/assets:
    get:
      consumes:
      - application/json
      description: Returns all assets for which you have access.
      operationId: getAssets
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Asset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assets
      tags:
      - Asset
  /api/3/assets/search:
    post:
      consumes:
      - application/json
      description: Returns all assets for which you have access that match the given
        search criteria.
      operationId: findAssets
      parameters:
      - description: param1
        in: body
        name: param1
        required: true
        schema:
          $ref: '#/definitions/SearchCriteria'
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Asset»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Search
      tags:
      - Asset
      x-code-samples:
      - lang: Assets Running SSH
        source: "{\n  \"match\": \"all\",\n  \"filters\": [\n     { \"field\": \"\
          service-name\", \"operator\": \"contains\", \"value\": \"ssh\"}\n  ]\n}"
      - lang: High Risk Windows Assets Running SSH
        source: "{\n  \"match\": \"all\",\n  \"filters\": [\n     { \"field\": \"\
          risk-score\", \"operator\": \"is-greater-than\", \"value\": 5000 },\n  \
          \   { \"field\": \"operating-system\", \"operator\": \"contains\", \"value\"\
          : \"windows\" },\n     { \"field\": \"service-name\", \"operator\": \"contains\"\
          , \"value\": \"ssh\" }\n  ]\n}"
      - lang: Windows 10 Assets
        source: "{\n  \"match\": \"all\",\n  \"filters\": [\n     { \"field\": \"\
          operating-system\", \"operator\": \"contains\", \"value\": \"Microsoft Windows\
          \ 10\" }\n  ]\n}"
      - lang: Assets with High CVSS Scores assigned to Bob
        source: "{\n   \"match\": \"all\",\n   \"filters\": [\n      { \"field\":\
          \ \"owner-tag\", \"operator\": \"contains\", \"value\": \"Bob\" },\n   \
          \   { \"field\": \"vulnerability-cvss-score\", \"operator\": \"is-greater-than\"\
          , \"value\": 8 }\n   ]\n}"
      - lang: Assets with SSH running containers in Los Angeles
        source: "{\n   \"match\": \"all\",\n   \"filters\": [\n      { \"field\":\
          \ \"location-tag\", \"operator\": \"contains\", \"value\": \"Los Angeles\
          \ Datacenter\" },\n      { \"field\": \"containers\", \"operator\": \"are\"\
          , \"value\": \"0\" },\n      { \"field\": \"service-name\", \"operator\"\
          : \"contains\", \"value\": \"ssh\" }\n   ]\n}"
  /api/3/assets/{assetId}/policies:
    get:
      consumes:
      - application/json
      description: Retrieves the list of policies with compliance results for the
        specified asset.
      operationId: getPoliciesForAsset
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      - description: An optional boolean parameter indicating the policies retrieved
          should only include those with a policy compliance status of either a PASS
          of FAIL result. Default value is `false`, which will also include policies
          with a compliance status of NOT_APPLICABLE.
        in: query
        name: applicableOnly
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«AssetPolicy»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policies For Asset
      tags:
      - Policy
  /api/3/assets/{assetId}/policies/{policyId}/children:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of either policy rules, or groups, that
        are defined directly underneath the specified policy with rule compliance
        results for the specified asset.
      operationId: getAssetPolicyChildren
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«AssetPolicyItem»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules or Groups Directly Under Policy For Asset
      tags:
      - Policy
  /api/3/assets/{assetId}/policies/{policyId}/groups/{groupId}/children:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of either policy rules, or groups, that
        are defined directly underneath the specified policy group with rule compliance
        results for the specified asset.
      operationId: getAssetPolicyGroupChildren
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«AssetPolicyItem»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules or Groups Directly Under Policy Group For Asset
      tags:
      - Policy
  /api/3/assets/{assetId}/policies/{policyId}/groups/{groupId}/rules:
    get:
      consumes:
      - application/json
      description: Retrieves the list of policy rules defined directly, or indirectly,
        underneath the specified policy group and the compliance results for the specified
        asset.
      operationId: getPolicyGroupRulesWithAssetAssessment
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyRule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules Under Policy Group For Asset
      tags:
      - Policy
  /api/3/assets/{assetId}/policies/{policyId}/rules:
    get:
      consumes:
      - application/json
      description: Retrieves the list of policy rules with compliance results for
        the specified asset and policy.
      operationId: getAssetPolicyRulesSummary
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyRule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules For Asset
      tags:
      - Policy
  /api/3/assets/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified asset.
      operationId: deleteAsset
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset
      tags:
      - Asset
    get:
      consumes:
      - application/json
      description: Returns the specified asset.
      operationId: getAsset
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Asset'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset
      tags:
      - Asset
  /api/3/assets/{id}/databases:
    get:
      consumes:
      - application/json
      description: Returns the databases enumerated on an asset.
      operationId: getAssetDatabases
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Database»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Databases
      tags:
      - Asset
  /api/3/assets/{id}/files:
    get:
      consumes:
      - application/json
      description: Returns the files discovered on an asset.
      operationId: getAssetFiles
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«File»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Files
      tags:
      - Asset
  /api/3/assets/{id}/policy_overrides:
    get:
      consumes:
      - application/json
      description: Retrieves policy overrides defined on policy rules for the specified
        asset.
      operationId: getAssetPolicyOverrides
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«PolicyOverride»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Policy Overrides
      tags:
      - Policy Override
  /api/3/assets/{id}/services:
    get:
      consumes:
      - application/json
      description: Returns the services discovered on an asset.
      operationId: getAssetServices
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«ReferenceWithEndpointIDLink,ServiceLink»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Services
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}:
    get:
      consumes:
      - application/json
      description: Returns the service running a port and protocol on the asset.
      operationId: getAssetService
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Service'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/configurations:
    get:
      consumes:
      - application/json
      description: Returns the configuration (properties) of a port and protocol on
        an asset.
      operationId: getAssetServiceConfigurations
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Configuration»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Configurations
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/databases:
    get:
      consumes:
      - application/json
      description: Returns the databases running on a port and protocol on an asset.
      operationId: getAssetServiceDatabases
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Database»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Databases
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/user_groups:
    get:
      consumes:
      - application/json
      description: Returns the user groups enumerated on a port and protocol on an
        asset.
      operationId: getAssetServiceUserGroups
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«GroupAccount»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service User Groups
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/users:
    get:
      consumes:
      - application/json
      description: Returns the users enumerated on a port and protocol on an asset.
      operationId: getAssetServiceUsers
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«UserAccount»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Users
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Retrieves the vulnerabilities present on a service running on an
        asset. A finding may be `invulnerable` if all instances on the service have
        exceptions applied.
      operationId: getAssetServiceVulnerabilities
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityFinding»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Vulnerabilities
      tags:
      - Vulnerability Result
  /api/3/assets/{id}/services/{protocol}/{port}/web_applications:
    get:
      consumes:
      - application/json
      description: Returns the web applications running on a port and protocol on
        an asset.
      operationId: getAssetServiceWebApplications
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«WebApplicationID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Web Applications
      tags:
      - Asset
  /api/3/assets/{id}/services/{protocol}/{port}/web_applications/{webApplicationId}:
    get:
      consumes:
      - application/json
      description: Returns a web application running on a port and protocol on an
        asset.
      operationId: getAssetServiceWebApplication
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The protocol of the service.
        enum:
        - ip
        - icmp
        - igmp
        - ggp
        - tcp
        - pup
        - udp
        - idp
        - esp
        - nd
        - raw
        in: path
        name: protocol
        required: false
        type: string
      - description: The port of the service.
        format: int32
        in: path
        name: port
        required: false
        type: integer
      - description: The identifier of the web application.
        format: int64
        in: path
        name: webApplicationId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/WebApplication'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Service Web Application
      tags:
      - Asset
  /api/3/assets/{id}/software:
    get:
      consumes:
      - application/json
      description: Returns the software on an asset.
      operationId: getAssetSoftware
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Software»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Software
      tags:
      - Asset
  /api/3/assets/{id}/tags:
    get:
      consumes:
      - application/json
      description: Returns tags assigned to an asset.
      operationId: getAssetTags
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«AssetTag»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Tags
      tags:
      - Asset
  /api/3/assets/{id}/tags/{tagId}:
    delete:
      consumes:
      - application/json
      description: Removes the specified tag from the asset's tags.
      operationId: removeAssetTag
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Tag
      tags:
      - Asset
    put:
      consumes:
      - application/json
      description: Assigns the specified tag to the asset.
      operationId: addAssetTag
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Tag
      tags:
      - Asset
  /api/3/assets/{id}/user_groups:
    get:
      consumes:
      - application/json
      description: Returns user groups enumerated on an asset.
      operationId: getAssetUserGroups
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«GroupAccount»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset User Groups
      tags:
      - Asset
  /api/3/assets/{id}/users:
    get:
      consumes:
      - application/json
      description: Returns users enumerated on an asset.
      operationId: getAssetUsers
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«UserAccount»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Users
      tags:
      - Asset
  /api/3/assets/{id}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Retrieves all vulnerability findings on an asset. A finding may
        be `invulnerable` if all instances have exceptions applied.
      operationId: getAssetVulnerabilities
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityFinding»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerabilities
      tags:
      - Vulnerability Result
  /api/3/assets/{id}/vulnerabilities/{vulnerabilityId}:
    get:
      consumes:
      - application/json
      description: Retrieves the details for a vulnerability finding on an asset.
      operationId: getAssetVulnerability
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityFinding'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability
      tags:
      - Vulnerability Result
  /api/3/assets/{id}/vulnerabilities/{vulnerabilityId}/solution:
    get:
      consumes:
      - application/json
      description: Returns the highest-superceding rollup solutions for a vulnerability
        on an asset. The solution(s) selected will be the most recent and cost-effective
        means by which the vulnerability can be remediated.
      operationId: getAssetVulnerabilitySolutions
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«MatchedSolution»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability Solution
      tags:
      - Remediation
  /api/3/assets/{id}/vulnerabilities/{vulnerabilityId}/validations:
    get:
      consumes:
      - application/json
      description: Returns all vulnerability validations for a vulnerability on an
        asset. The asset must be currently vulnerable to the validated vulnerable
        for the validation to be returned.
      operationId: getVulnerabilityValidations
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«VulnerabilityValidationResource»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability Validations
      tags:
      - Vulnerability Result
    post:
      consumes:
      - application/json
      description: Creates a vulnerability validation for a vulnerability on an asset.
        The validation signifies that the vulnerability has been confirmed exploitable
        by an external tool, such as <a target="_blank" href="https://www.metasploit.com">Metasploit</a>.
      operationId: createVulnerabilityValidation
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      - description: A vulnerability validation for a vulnerability on an asset. The  validation
          signifies that the vulnerability has been confirmed exploitable by an external
          tool, such as <a target="_blank" href="https://www.metasploit.com">Metasploit</a>.
        in: body
        name: validation
        required: false
        schema:
          $ref: '#/definitions/VulnerabilityValidationResource'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«VulnerabilityValidationID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability Validations
      tags:
      - Vulnerability Result
  /api/3/assets/{id}/vulnerabilities/{vulnerabilityId}/validations/{validationId}:
    delete:
      consumes:
      - application/json
      description: Removes a vulnerability validation for a vulnerability from an
        asset.
      operationId: deleteVulnerabilityValidation
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      - description: The identifier of the vulnerability validation.
        format: int64
        in: path
        name: validationId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability Validation
      tags:
      - Vulnerability Result
    get:
      consumes:
      - application/json
      description: Returns a vulnerability validation for a vulnerability on an asset.
        The asset must be currently vulnerable to the validated vulnerable for the
        validation to be returned.
      operationId: getVulnerabilityValidation
      parameters:
      - description: The identifier of the asset.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the vulnerability.
        in: path
        name: vulnerabilityId
        required: false
        type: string
      - description: The identifier of the vulnerability validation.
        format: int64
        in: path
        name: validationId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityValidationResource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Vulnerability Validation
      tags:
      - Vulnerability Result
  /api/3/authentication_sources:
    get:
      consumes:
      - application/json
      description: Returns all available sources of authentication for users.
      operationId: getAuthenticationSources
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«AuthenticationSource»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Authentication Sources
      tags:
      - User
  /api/3/authentication_sources/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for an authentication source.
      operationId: getAuthenticationSource
      parameters:
      - description: The identifier of the authentication source.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/AuthenticationSource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Authentication Source
      tags:
      - User
  /api/3/authentication_sources/{id}/users:
    get:
      consumes:
      - application/json
      description: Returns hypermedia links for the user accounts that use the authentication
        source to authenticate.
      operationId: getAuthenticationSourceUsers
      parameters:
      - description: The identifier of the authentication source.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«UserID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Authentication Source Users
      tags:
      - User
  /api/3/discovery_connections:
    get:
      consumes:
      - application/json
      description: Returns all discovery connections.
      operationId: getDiscoveryConnections
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«DiscoveryConnection»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Discovery Connections
      tags:
      - Asset Discovery
  /api/3/discovery_connections/{id}:
    get:
      consumes:
      - application/json
      description: Returns a discovery connection.
      operationId: getDiscoveryConnection
      parameters:
      - description: The identifier of the discovery connection.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/DiscoveryConnection'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Discovery Connection
      tags:
      - Asset Discovery
  /api/3/discovery_connections/{id}/connect:
    post:
      consumes:
      - application/json
      description: Attempts to reconnect the discovery connection.
      operationId: reconnectDiscoveryConnection
      parameters:
      - description: The identifier of the discovery connection.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Discovery Connection Reconnect
      tags:
      - Asset Discovery
  /api/3/exploits:
    get:
      consumes:
      - application/json
      description: Returns all known exploits.
      operationId: getExploits
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Exploit»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exploits
      tags:
      - Vulnerability
  /api/3/exploits/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for an exploit.
      operationId: getExploit
      parameters:
      - description: The identifier of the exploit.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Exploit'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exploit
      tags:
      - Vulnerability
  /api/3/exploits/{id}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Returns the vulnerabilities exploitable to a exploit.
      operationId: getExploitVulnerabilities
      parameters:
      - description: The identifier of the exploit.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«VulnerabilityNaturalID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exploitable Vulnerabilities
      tags:
      - Vulnerability
  /api/3/malware_kits:
    get:
      consumes:
      - application/json
      description: Returns all known malware kits.
      operationId: getMalwareKits
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«MalwareKit»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Malware Kits
      tags:
      - Vulnerability
  /api/3/malware_kits/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for a malware kit.
      operationId: getMalwareKit
      parameters:
      - description: The identifier of the malware kit.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/MalwareKit'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Malware Kit
      tags:
      - Vulnerability
  /api/3/malware_kits/{id}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Returns the vulnerabilities that are susceptible to being attacked
        by a malware kit.
      operationId: getMalwareKitVulnerabilities
      parameters:
      - description: The identifier of the malware kit.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«VulnerabilityNaturalID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Malware Kit Vulnerabilities
      tags:
      - Vulnerability
  /api/3/operating_systems:
    get:
      consumes:
      - application/json
      description: 'Returns all operating systems discovered across all assets. '
      operationId: getOperatingSystems
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«OperatingSystem»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Operating Systems
      tags:
      - Asset
  /api/3/operating_systems/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for an operating system.
      operationId: getOperatingSystem
      parameters:
      - description: The identifier of the operating system.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/OperatingSystem'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Operating System
      tags:
      - Asset
  /api/3/policies:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of policies.
      operationId: getPolicies
      parameters:
      - description: Filters the retrieved policies with those whose titles that match
          the parameter.
        in: query
        name: filter
        required: false
        type: string
      - description: Flag indicating the policies retrieved should only include those
          with Pass or Fail compliance results. The list of scanned policies is based
          on the user's list of accessible assets.
        in: query
        name: scannedOnly
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Policy»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policies
      tags:
      - Policy
  /api/3/policies/{id}/children:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of either policy rules, or groups, that
        are defined directly underneath the specified policy.
      operationId: getPolicyChildren
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyItem»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules or Groups Directly Under Policy
      tags:
      - Policy
  /api/3/policies/{policyId}:
    get:
      consumes:
      - application/json
      description: Retrieves the specified policy.
      operationId: getPolicy
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Policy'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy
      tags:
      - Policy
  /api/3/policies/{policyId}/assets:
    get:
      consumes:
      - application/json
      description: Retrieves asset resources with rule compliance results for the
        specified policy.
      operationId: getPolicyAssetResults
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: An optional boolean parameter indicating the assets retrieved
          should only include those with rule results of either PASS or FAIL. Default
          value is `false`, which will also include assets with a compliance status
          of NOT_APPLICABLE.
        in: query
        name: applicableOnly
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyAsset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Asset Results
      tags:
      - Policy
  /api/3/policies/{policyId}/assets/{assetId}:
    get:
      consumes:
      - application/json
      description: Retrieves an asset resource with rule compliance results for the
        specified asset and policy.
      operationId: getPolicyAssetResult
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyAsset'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Asset Result
      tags:
      - Policy
  /api/3/policies/{policyId}/groups:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of policy groups for the specified policy.
      operationId: getPolicyGroups
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyGroup»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Groups
      tags:
      - Policy
  /api/3/policies/{policyId}/groups/{groupId}:
    get:
      consumes:
      - application/json
      description: Retrieves the specified policy group.
      operationId: getPolicyGroup
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyGroup'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Group
      tags:
      - Policy
  /api/3/policies/{policyId}/groups/{groupId}/assets:
    get:
      consumes:
      - application/json
      description: Retrieves asset resources with rule compliance status against all
        rules under the specified policy group.
      operationId: getPolicyGroupAssetResults
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      - description: An optional boolean parameter indicating the assets retrieved
          should only include those with rule results of either PASS or FAIL. Default
          value is `false`, which will also include assets with a compliance status
          of NOT_APPLICABLE.
        in: query
        name: applicableOnly
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyAsset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assets Compliance For Policy Rules Under Policy Group
      tags:
      - Policy
  /api/3/policies/{policyId}/groups/{groupId}/assets/{assetId}:
    get:
      consumes:
      - application/json
      description: Retrieves an asset resource with rule compliance status against
        all rules under the specified policy group.
      operationId: getPolicyGroupAssetResult
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyAsset'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Compliance For Policy Rules Under Policy Group
      tags:
      - Policy
  /api/3/policies/{policyId}/groups/{groupId}/children:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of either policy rules, or groups, that
        are defined directly underneath the specified policy group.
      operationId: getPolicyGroupChildren
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyItem»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules or Groups Directly Under Policy Group
      tags:
      - Policy
  /api/3/policies/{policyId}/groups/{groupId}/rules:
    get:
      consumes:
      - application/json
      description: Retrieves the list of policy rules defined directly, or indirectly,
        underneath the specified policy group.
      operationId: getDescendantPolicyRules
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy group.
        format: int64
        in: path
        name: groupId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyRule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules Under Policy Group
      tags:
      - Policy
  /api/3/policies/{policyId}/rules:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of policy rules for the specified policy.
      operationId: getPolicyRules
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyRule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rules
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/disabled:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of disabled policy rules for the specified
        policy.
      operationId: getDisabledPolicyRules
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyRule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Disabled Policy Rules
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}:
    get:
      consumes:
      - application/json
      description: Retrieves the specified policy rule.
      operationId: getPolicyRule
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyRule'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rule
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/assets:
    get:
      consumes:
      - application/json
      description: Retrieves asset resources with rule compliance results for the
        specified policy policy rule.
      operationId: getPolicyRuleAssetResults
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      - description: An optional boolean parameter indicating the assets retrieved
          should only include those with rule results of either PASS or FAIL. Default
          value is `false`, which will also include assets with a compliance status
          of NOT_APPLICABLE.
        in: query
        name: applicableOnly
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyAsset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assets Compliance For Policy Rule
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/assets/{assetId}:
    get:
      consumes:
      - application/json
      description: Retrieves an asset resource with rule compliance results for the
        specified policy policy rule.
      operationId: getPolicyRuleAssetResult
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyAsset'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Compliance For Policy Rule
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/assets/{assetId}/proof:
    get:
      consumes:
      - application/json
      description: Retrieves the policy rule proof captured during evaluation against
        the specified asset.
      operationId: getPolicyRuleAssetResultProof
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - text/html
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rule Proof For Asset
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/controls:
    get:
      consumes:
      - application/json
      description: Retrieves all NIST SP 800-53 controls mappings for each CCE within
        the specified policy rule.
      operationId: getPolicyRuleControls
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyControl»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rule Controls
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/rationale:
    get:
      consumes:
      - application/json
      description: Retrieves the policy rule rationale for the specified policy.
      operationId: getPolicyRuleRationale
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      produces:
      - text/html
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rule Rationale
      tags:
      - Policy
  /api/3/policies/{policyId}/rules/{ruleId}/remediation:
    get:
      consumes:
      - application/json
      description: Retrieves the policy rule remediation for the specified policy.
      operationId: getPolicyRuleRemediation
      parameters:
      - description: The identifier of the policy
        format: int64
        in: path
        name: policyId
        required: false
        type: integer
      - description: The identifier of the policy rule.
        format: int64
        in: path
        name: ruleId
        required: false
        type: integer
      produces:
      - text/html
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Rule Remediation
      tags:
      - Policy
  /api/3/policy/summary:
    get:
      consumes:
      - application/json
      description: Retrieves a compliance summary of all policies.
      operationId: getPolicySummary
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicySummaryResource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Compliance Summaries
      tags:
      - Policy
  /api/3/policy_overrides:
    get:
      consumes:
      - application/json
      description: Retrieves policy overrides defined on policy rules.
      operationId: getPolicyOverrides
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«PolicyOverride»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Overrides
      tags:
      - Policy Override
    post:
      consumes:
      - application/json
      description: Submit a policy override. The policy override can be submitted
        or it can be submitted and approved in a single request.
      operationId: createPolicyOverride
      parameters:
      - description: The specification of a policy override. Allows users to override
          the compliance result of a policy rule.
        in: body
        name: policyOverride
        required: false
        schema:
          $ref: '#/definitions/PolicyOverride'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«PolicyOverrideID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Overrides
      tags:
      - Policy Override
  /api/3/policy_overrides/{id}:
    delete:
      consumes:
      - application/json
      description: Removes a policy override created for a policy rule.
      operationId: deletePolicyOverride
      parameters:
      - description: The identifier of the policy override.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Override
      tags:
      - Policy Override
    get:
      consumes:
      - application/json
      description: Retrieve the specified policy override.
      operationId: getPolicyOverride
      parameters:
      - description: The identifier of the policy override.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PolicyOverride'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Override
      tags:
      - Policy Override
  /api/3/policy_overrides/{id}/expires:
    get:
      consumes:
      - application/json
      description: Get the expiration date for a policy override.
      operationId: getPolicyOverrideExpiration
      parameters:
      - description: The identifier of the policy override.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Override Expiration
      tags:
      - Policy Override
    put:
      consumes:
      - application/json
      description: Set the expiration date for a policy override. This must be a valid
        date in the future.
      operationId: setPolicyOverrideExpiration
      parameters:
      - description: The identifier of the policy override.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The date the policy override is set to expire. Date is represented
          in ISO 8601 format.
        in: body
        name: expiration
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Override Expiration
      tags:
      - Policy Override
  /api/3/policy_overrides/{id}/{status}:
    post:
      consumes:
      - application/json
      description: 'Update the status of the specified policy override. The status
        can be one of the following: `"recall"`, `"approve"`, or `"reject"`.'
      operationId: setPolicyOverrideStatus
      parameters:
      - description: The identifier of the policy override.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: Policy Override Status
        enum:
        - recall
        - approve
        - reject
        in: path
        name: status
        required: false
        type: string
      - description: A comment describing the change of the policy override status.
        in: body
        name: comment
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Policy Override Status
      tags:
      - Policy Override
  /api/3/privileges:
    get:
      consumes:
      - application/json
      description: Returns all privileges that may be granted to a role.
      operationId: getPrivileges
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Privileges'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Privileges
      tags:
      - User
  /api/3/privileges/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for a privilege.
      operationId: getPrivilege
      parameters:
      - description: The identifier of the privilege.
        enum:
        - all-permissions
        - create-reports
        - configure-global-settings
        - manage-sites
        - manage-tags
        - manage-static-asset-groups
        - manage-dynamic-asset-groups
        - manage-scan-templates
        - manage-report-templates
        - manage-scan-engines
        - submit-vulnerability-exceptions
        - approve-vulnerability-exceptions
        - delete-vulnerability-exceptions
        - create-tickets
        - close-tickets
        - assign-ticket-assignee
        - manage-site-access
        - manage-asset-group-access
        - manage-report-access
        - use-restricted-report-sections
        - manage-policies
        - view-asset-group-asset-data
        - manage-asset-group-assets
        - view-site-asset-data
        - specify-site-metadata
        - purge-site-asset-data
        - specify-scan-targets
        - assign-scan-engine
        - assign-scan-template
        - manage-site-credentials
        - manage-scan-alerts
        - schedule-automatic-scans
        - start-unscheduled-scans
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Privilege
      tags:
      - User
  /api/3/privileges/{id}/users:
    get:
      consumes:
      - application/json
      description: Returns hypermedia links for all users granted the specified privilege
        by their role.
      operationId: getUsersWithPrivilege
      parameters:
      - description: The identifier of the privilege.
        enum:
        - all-permissions
        - create-reports
        - configure-global-settings
        - manage-sites
        - manage-tags
        - manage-static-asset-groups
        - manage-dynamic-asset-groups
        - manage-scan-templates
        - manage-report-templates
        - manage-scan-engines
        - submit-vulnerability-exceptions
        - approve-vulnerability-exceptions
        - delete-vulnerability-exceptions
        - create-tickets
        - close-tickets
        - assign-ticket-assignee
        - manage-site-access
        - manage-asset-group-access
        - manage-report-access
        - use-restricted-report-sections
        - manage-policies
        - view-asset-group-asset-data
        - manage-asset-group-assets
        - view-site-asset-data
        - specify-site-metadata
        - purge-site-asset-data
        - specify-scan-targets
        - assign-scan-engine
        - assign-scan-template
        - manage-site-credentials
        - manage-scan-alerts
        - schedule-automatic-scans
        - start-unscheduled-scans
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«UserID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Users With Privilege
      tags:
      - User
  /api/3/report_formats:
    get:
      consumes:
      - application/json
      description: Returns all available report formats. A report format indicates
        an output file format specification (e.g. PDF, XML, etc). Some printable formats
        may be templated, and others may not. The supported templates for each formated
        are provided.
      operationId: getReportFormats
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«AvailableReportFormat»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Formats
      tags:
      - Report
  /api/3/report_templates:
    get:
      consumes:
      - application/json
      description: Returns all available report templates.
      operationId: getReportTemplates
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«ReportTemplate»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Templates
      tags:
      - Report
  /api/3/report_templates/{id}:
    get:
      consumes:
      - application/json
      description: 'Returns the details of a report template. Report templates govern
        the contents generated within a report. '
      operationId: getReportTemplate
      parameters:
      - description: The identifier of the report template;
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReportTemplate'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Template
      tags:
      - Report
  /api/3/reports:
    get:
      consumes:
      - application/json
      description: Returns all defined report configurations.
      operationId: getReports
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Report»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Reports
      tags:
      - Report
    post:
      consumes:
      - application/json
      description: Configures a new report for generation. Report types are controlled
        through either or both a format and template. Non-templatized (`export`) report
        formats do not require a template and have their output format preset. Templatized
        (`document` and `file`) report formats support a report template that governs
        the content of the output and the output format can be chosen from a list
        of supported formats.
      operationId: createReport
      parameters:
      - description: The specification of a report configuration.
        in: body
        name: report
        required: false
        schema:
          $ref: '#/definitions/Report'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«int,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Reports
      tags:
      - Report
      x-code-samples:
      - lang: Nexpose™ Simple XML
        source: "{\n   \"format\": \"nexpose-simple-xml\",\n   \"name\": \"Scan Report\
          \ for February scan\",\n   \"filters\": {\n      \"statuses\": [ \"vulnerable\"\
          , \"vulnerable-version\" ]\n   },\n   \"scope\": {\n      \"scan\": 2\n\
          \   }\n}"
      - lang: Qualys XML
        source: "{\n   \"format\": \"qualys-xml\",\n   \"name\": \"Qualys Export\"\
          ,\n   \"filters\": {\n      \"severity\": \"critical-and-severe\",\n   \
          \   \"categories\": {\n         \"included\": [ \"Adobe\" ]\n      }\n \
          \  },\n   \"scope\": {\n      \"sites\": [ 3 ]\n   }\n}"
      - lang: OVAL XML
        source: "{\n   \"format\": \"oval-xml\",\n   \"name\": \"OVAL XML\",\n   \"\
          policy\": 32, \n   \"scope\": {\n      \"sites\": [ 17 ]\n   }\n}"
      - lang: XCCDF CSV
        source: "{\n   \"format\": \"xccdf-csv\",\n   \"name\": \"XCDDF CSV Report\"\
          ,\n   \"policy\": 89,\n   \"scope\": {\n      \"assets\": [ 4, 7, 9, 22\
          \ ]\n   },\n   \"filters\": {\n      \"severity\": \"critical\"\n   },\n\
          \   \"frequency\": {\n      \"start\": \"2017-11-30\",\n      \"repeat\"\
          : {\n         \"every\": \"week\",\n         \"interval\": 2\n      }\n\
          \   }\n}"
      - lang: XCCDF XML
        source: "{\n   \"format\": \"xccdf-xml\",\n   \"name\": \"XCCDF XML\",\n \
          \  \"policy\": 12,\n   \"organization\": \"Acme Organization\",\n   \"scope\"\
          : {\n      \"tags\": [ 4 ]\n   },\n   \"filters\": {\n      \"severity\"\
          : \"critical\"\n   },\n   \"frequency\": {\n      \"start\": \"2018-11-30\"\
          ,\n      \"repeat\": {\n         \"every\": \"date-of-month\",\n       \
          \  \"interval\": 3,\n         \"dateOfMonth\": \"last\"\n      }\n   }\n\
          }"
  /api/3/reports/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the configuration of a report.
      operationId: deleteReport
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report
      tags:
      - Report
    get:
      consumes:
      - application/json
      description: Returns the configuration details of a report.
      operationId: getReport
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Report'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report
      tags:
      - Report
    put:
      consumes:
      - application/json
      description: Updates the configuration details of a report.
      operationId: updateReport
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The specification of a report configuration.
        in: body
        name: report
        required: false
        schema:
          $ref: '#/definitions/Report'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report
      tags:
      - Report
  /api/3/reports/{id}/generate:
    post:
      consumes:
      - application/json
      description: Generates a configured report and returns the instance identifier
        of the report.
      operationId: generateReport
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWithReportIDLink'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Generation
      tags:
      - Report
  /api/3/reports/{id}/history:
    get:
      consumes:
      - application/json
      description: Returns all historical details for generation of the report over
        time.
      operationId: getReportInstances
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«ReportInstance»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Histories
      tags:
      - Report
  /api/3/reports/{id}/history/{instance}:
    delete:
      consumes:
      - application/json
      description: Returns the details for a generation of the report.
      operationId: deleteReportInstance
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the report instance.
        enum:
        - latest
        - integer <<int32>>
        in: path
        name: instance
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report History
      tags:
      - Report
    get:
      consumes:
      - application/json
      description: Returns the details for a generation of the report.
      operationId: getReportInstance
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the report instance.
        enum:
        - latest
        - integer <<int32>>
        in: path
        name: instance
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReportInstance'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report History
      tags:
      - Report
  /api/3/reports/{id}/history/{instance}/output:
    get:
      consumes:
      - application/json
      description: Returns the contents of a generated report. The report content
        is usually returned in a GZip compressed format.
      operationId: downloadReport
      parameters:
      - description: The identifier of the report.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the report instance.
        enum:
        - latest
        - integer <<int32>>
        in: path
        name: instance
        required: false
        type: string
      produces:
      - application/octet-stream
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            format: byte
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Report Download
      tags:
      - Report
  /api/3/roles:
    get:
      consumes:
      - application/json
      description: Returns all roles for which users may be assigned.
      operationId: getRoles
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Role»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Roles
      tags:
      - User
  /api/3/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Removes a role with the specified identifier. The role must not
        be built-in and cannot be currently assigned to any users.
      operationId: deleteRole
      parameters:
      - description: The identifier of the role.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Role
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Retrieves the details of a role.
      operationId: getRole
      parameters:
      - description: The identifier of the role.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Role
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the details of a role.
      operationId: updateRole
      parameters:
      - description: The details of the role.
        in: body
        name: role
        required: false
        schema:
          $ref: '#/definitions/Role'
      - description: The identifier of the role.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Role
      tags:
      - User
  /api/3/roles/{id}/users:
    get:
      consumes:
      - application/json
      description: Returns hypermedia links for the the users currently assigned a
        role.
      operationId: getRoleUsers
      parameters:
      - description: The identifier of the role.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«UserID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Users With Role
      tags:
      - User
  /api/3/scan_engine_pools:
    get:
      consumes:
      - application/json
      description: Returns engine pools available to use for scanning.
      operationId: getScanEnginePools
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«EnginePool»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pools
      tags:
      - Scan Engine
    post:
      consumes:
      - application/json
      description: Creates a new engine pool.
      operationId: createScanEnginePool
      parameters:
      - description: The details for the scan engine to update.
        in: body
        name: enginePool
        required: false
        schema:
          $ref: '#/definitions/EnginePool'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«EngineID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pools
      tags:
      - Scan Engine
  /api/3/scan_engine_pools/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified engine pool.
      operationId: removeScanEnginePool
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool
      tags:
      - Scan Engine
    get:
      consumes:
      - application/json
      description: Retrieves the details for an engine pool.
      operationId: getEnginePool
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/EnginePool'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool
      tags:
      - Scan Engine
    put:
      consumes:
      - application/json
      description: Updates the specified engine pool.
      operationId: updateScanEnginePool
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The details for the scan engine to update.
        in: body
        name: enginePool
        required: false
        schema:
          $ref: '#/definitions/EnginePool'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool
      tags:
      - Scan Engine
  /api/3/scan_engine_pools/{id}/engines:
    get:
      consumes:
      - application/json
      description: Get the engines in the engine pool.
      operationId: getScanEnginePoolScanEngines
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«EngineID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool Engines
      tags:
      - Scan Engine
    put:
      consumes:
      - application/json
      description: Set the engines in the engine pool.
      operationId: setScanEnginePoolScanEngines
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifiers of the scan engines to place into the engine
          pool.
        in: body
        name: engines
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool Engines
      tags:
      - Scan Engine
  /api/3/scan_engine_pools/{id}/engines/{engineId}:
    delete:
      consumes:
      - application/json
      description: Remove the specified engine from the engine pool.
      operationId: removeScanEnginePoolScanEngine
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: engineId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool Engines
      tags:
      - Scan Engine
    put:
      consumes:
      - application/json
      description: Add an engine to the engine pool.
      operationId: addScanEnginePoolScanEngine
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: engineId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool Engines
      tags:
      - Scan Engine
  /api/3/scan_engine_pools/{id}/sites:
    get:
      consumes:
      - application/json
      description: Returns links to the sites associated with this engine pool.
      operationId: getScanEnginePoolSites
      parameters:
      - description: The identifier of the engine pool.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«SiteID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Engine Pool Sites
      tags:
      - Scan Engine
  /api/3/scan_engines:
    get:
      consumes:
      - application/json
      description: Returns scan engines available to use for scanning.
      operationId: getScanEngines
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«ScanEngine»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engines
      tags:
      - Scan Engine
    post:
      consumes:
      - application/json
      description: Creates a new scan engine.
      operationId: createScanEngine
      parameters:
      - description: The specification of a scan engine.
        in: body
        name: scanEngine
        required: false
        schema:
          $ref: '#/definitions/ScanEngine'
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«EngineID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engines
      tags:
      - Scan Engine
  /api/3/scan_engines/shared_secret:
    delete:
      consumes:
      - application/json
      description: Revokes the current valid shared secret, if one exists.
      operationId: deleteSharedSecret
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Shared Secret
      tags:
      - Scan Engine
    get:
      consumes:
      - application/json
      description: Returns the current valid shared secret, if one has been previously
        generated and it has not yet expired; otherwise the endpoint will respond
        with a 404 status code. Use this endpoint to detect whether a previously-generated
        shared secret is still valid.
      operationId: getCurrentSharedSecret
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Shared Secret
      tags:
      - Scan Engine
    post:
      consumes:
      - application/json
      description: 'Returns the current valid shared secret or generates a new shared
        secret. The endpoint returns an existing shared secret if one was previously
        generated and it has not yet expired. Conversely, the endpoint will generate
        and return a new shared secret for either of the following conditions: a shared
        secret was not previously generated or the previously-generated shared secret
        has expired. The shared secret is valid for 60 minutes from the moment it
        is generated.'
      operationId: createSharedSecret
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            type: string
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Shared Secret
      tags:
      - Scan Engine
  /api/3/scan_engines/shared_secret/time_to_live:
    get:
      consumes:
      - application/json
      description: Returns the number of seconds remaining for the current shared
        secret before it expires, if one has been previously generated and it has
        not yet expired; otherwise the endpoint will respond with a 404 status code.
      operationId: getCurrentSharedSecretTimeToLive
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            format: int64
            type: integer
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Shared Secret Time to live
      tags:
      - Scan Engine
  /api/3/scan_engines/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified scan engine.
      operationId: deleteScanEngine
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine
      tags:
      - Scan Engine
    get:
      consumes:
      - application/json
      description: Retrieves the details for a scan engine.
      operationId: getScanEngine
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanEngine'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine
      tags:
      - Scan Engine
    put:
      consumes:
      - application/json
      description: Updates the specified scan engine.
      operationId: updateScanEngine
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The specification of the scan engine to update.
        in: body
        name: scanEngine
        required: false
        schema:
          $ref: '#/definitions/ScanEngine'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine
      tags:
      - Scan Engine
  /api/3/scan_engines/{id}/scan_engine_pools:
    get:
      consumes:
      - application/json
      description: Retrieves the list of engine pools the scan engine is currently
        assigned to.
      operationId: getAssignedEnginePools
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«EnginePool»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assigned Engine Pools
      tags:
      - Scan Engine
  /api/3/scan_engines/{id}/scans:
    get:
      consumes:
      - application/json
      description: Returns the scans that have been run on a scan engine.
      operationId: getScanEngineScans
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Scan»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Scans
      tags:
      - Scan Engine
  /api/3/scan_engines/{id}/sites:
    get:
      consumes:
      - application/json
      description: Retrieves the list of sites the specified scan engine is assigned
        to.
      operationId: getScanEngineSites
      parameters:
      - description: The identifier of the scan engine.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Site»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Engine Sites
      tags:
      - Scan Engine
  /api/3/scan_templates:
    get:
      consumes:
      - application/json
      description: Returns all scan templates.
      operationId: getScanTemplates
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«ScanTemplate»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Templates
      tags:
      - Scan Template
    post:
      consumes:
      - application/json
      description: Creates a new scan template.
      operationId: createScanTemplate
      parameters:
      - description: The details of the scan template.
        in: body
        name: scanTemplate
        required: false
        schema:
          $ref: '#/definitions/ScanTemplate'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«ScanTemplateID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Templates
      tags:
      - Scan Template
  /api/3/scan_templates/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a scan template.
      operationId: deleteScanTemplate
      parameters:
      - description: The identifier of the scan template
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Template
      tags:
      - Scan Template
    get:
      consumes:
      - application/json
      description: Returns a scan template.
      operationId: getScanTemplate
      parameters:
      - description: The identifier of the scan template
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanTemplate'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Template
      tags:
      - Scan Template
    put:
      consumes:
      - application/json
      description: Updates a scan template.
      operationId: updateScanTemplate
      parameters:
      - description: The identifier of the scan template
        in: path
        name: id
        required: false
        type: string
      - description: The details of the scan template.
        in: body
        name: scanTemplate
        required: false
        schema:
          $ref: '#/definitions/ScanTemplate'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Template
      tags:
      - Scan Template
  /api/3/scans:
    get:
      consumes:
      - application/json
      description: Returns all scans.
      operationId: getScans
      parameters:
      - default: false
        description: Return running scans or past scans (true/false value).
        enum:
        - 'true'
        - 'false'
        in: query
        name: active
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«GlobalScan»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scans
      tags:
      - Scan
  /api/3/scans/{id}:
    get:
      consumes:
      - application/json
      description: Returns the specified scan.
      operationId: getScan
      parameters:
      - description: The identifier of the scan.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Scan'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan
      tags:
      - Scan
  /api/3/scans/{id}/{status}:
    post:
      consumes:
      - application/json
      description: Updates the scan status. Can pause, resume, and stop scans using
        this resource. In order to stop a scan the scan must be running or paused.
        In order to resume a scan the scan must be paused. In order to pause a scan
        the scan must be running.
      operationId: setScanStatus
      parameters:
      - description: The identifier of the scan.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The status of the scan.
        enum:
        - pause
        - stop
        - resume
        in: path
        name: status
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Scan Status
      tags:
      - Scan
  /api/3/shared_credentials:
    delete:
      consumes:
      - application/json
      description: Deletes all shared credentials.
      operationId: deleteAllSharedCredentials
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credentials
      tags:
      - Credential
    get:
      consumes:
      - application/json
      description: Retrieves all defined shared credential resources.
      operationId: getSharedCredentials
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SharedCredential»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credentials
      tags:
      - Credential
    post:
      consumes:
      - application/json
      description: Creates a new shared credential.
      operationId: createSharedCredential
      parameters:
      - description: The specification of a shared credential.
        in: body
        name: credential
        required: false
        schema:
          $ref: '#/definitions/SharedCredential'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«CredentialID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credentials
      tags:
      - Credential
      x-code-samples:
      - lang: A CIFS credential
        source: "{\n  \"name\": \"CIFS Administrator\",\n  \"description\": \"This\
          \ is a cifs credential for an administrator\",\n  \"account\": {\n    \"\
          service\": \"cifs\",\n    \"username\": \"joe_smith@acme.com\",\n    \"\
          password\": \"******\",\n    \"domain\": \"acme\"\n  },\n  \"siteAssignment\"\
          : \"all-sites\"\n}"
      - lang: A Microsoft SQL Server credential
        source: "{\n  \"name\": \"MS SQL Administrator\",\n  \"description\": \"This\
          \ is an administrator credential for a Microsoft SQL Server database. Configured\
          \ to use windows authentication. Credential is not assigned to any sites\
          \ by default.\",\n  \"account\": {\n    \"service\": \"ms-sql\",\n    \"\
          database\": \"usersdb\",\n    \"useWindowsAuthentication\": true,\n    \"\
          domain\": \"acme\",\n    \"username\": \"admin\",\n    \"password\": \"\
          ******\"\n  },\n  \"siteAssignment\": \"specific-sites\",\n  \"hostRestriction\"\
          : \"machine1.acme.com\"\n}\n"
      - lang: An Oracle database credential
        source: "{\n  \"name\": \"Oracle DB Administrator\",\n  \"description\": \"\
          This is an administrator credential for an Oracle database. Credential is\
          \ assigned to a single site.\",\n  \"account\": {\n    \"service\": \"oracle\"\
          ,\n    \"sid\": \"usersdb\",\n    \"username\": \"admin\",\n    \"password\"\
          : \"******\",\n    \"enumerateSids\": true,\n    \"oracleListenerPassword\"\
          : \"******\"\n  },\n  \"siteAssignment\": \"specific-sites\",\n  \"sites\"\
          : [1],\n  \"hostRestriction\": \"192.168.1.1\"\n}\n"
      - lang: An SNMPv3 credential
        source: "{\n  \"name\": \"SNMP v3 Administator\",\n  \"account\": {\n    \"\
          service\": \"snmpv3\",\n    \"authenticationType\": \"md5\",\n    \"username\"\
          : \"admin\",\n    \"password\": \"******\",\n    \"privacyType\": \"aes-256\"\
          ,\n    \"privacyPassword\": \"******\"\n  },\n  \"siteAssignment\": \"all-sites\"\
          \n}\n"
      - lang: An SSH credential
        source: "{\n  \"name\": \"SSH Administrator\",\n  \"description\": \"This\
          \ is an SSH credential for an administrator. Credential is assigned to all\
          \ sites.\",\n  \"account\": {\n    \"service\": \"ssh\",\n    \"username\"\
          : \"admin\",\n    \"password\": \"******\"\n  },\n  \"siteAssignment\":\
          \ \"all-sites\"\n}\n"
      - lang: An SSH credential using sudo+su permission elevation
        source: "{\n  \"name\": \"SSH User (permission elevation with sudo+su)\",\n\
          \  \"description\": \"This is an SSH credential for an non-administrative\
          \ user. Credential is configured to perform permission elevation using sudo+su\
          \ for additional access.\",\n  \"account\": {\n    \"service\": \"ssh\"\
          ,\n    \"username\": \"jsmith\",\n    \"password\": \"******\",\n    \"\
          permissionElevation\": \"sudosu\",\n    \"permissionElevationUsername\"\
          : \"root\",\n    \"permissionElevationPassword\": \"******\"\n  },\n  \"\
          siteAssignment\": \"all-sites\"\n}\n"
      - lang: An SSH public key credential
        source: "{\n  \"name\": \"SSH Public Key credential (permission elevation\
          \ with sudo)\",\n  \"description\": \"This is an SSH credential for a non-administrative\
          \ user using a PEM-format private key. Credential is also configured to\
          \ elevate permissions using sudo.\",\n  \"account\": {\n    \"service\"\
          : \"ssh-key\",\n    \"username\": \"admin\",\n    \"privateKeyPassword\"\
          : \"*******\",\n    \"pemKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nProc-Type:\
          \ 4,ENCRYPTED\\nDEK-Info: AES-128-CBC,0D364155CB54D4B485BDB3B11B76BF59\\\
          n\\nGLH7n9qeWzZ43g8d5ZNo9BcSWGXo7i8yd3ig9SLKXJd9GoxOrI4OepxZbhOJFDC9\\nXer799R8M4+ZGUwIC14R4lfzgKjcqEBCzya/c99MxK9Haz8pt5BjTMtUQRWO5y+/\\\
          nyySosHRVebB05TuMhmLnJkNnDfTYwT+Hnvdhu/2ArEm2FN9Rr+guumwhQeGxUha5\\n7zjjSimLYjuU2uayjgFLfnh9g/Fe24qmHCw80z+nuHsm9WMWeoeOdmMrMmxhLxUb\\\
          nb+zYZs/xRYjKgBMTRiXNSK9UIy21t2+7TUzeyDwfvHq0f5KpinhD1vzYSL+N0k/H\\ndg6vqM1gD/DLb+eKoAGpXTE0gpHWcXLg526ivlyZEpAxbuyGPVQ+7IIGytjxN7lG\\\
          nJyvbk3fpKDwIJLDOFN4eb9DUaUoqyarqVl44BZhcs7mM0Cvn49IA7PfhcznLv4rJ\\netAoZ2Tjt0AiM774+4X29EaYBGXKGC3SYKfiznoEEy1Jpi6Akwxz4FKCEazH1wce\\\
          nUaUS/N8VbquMPTqcLjCfoztdOgk65j4FczGt22CtGz4Ns8XB0KRM9fcVQFD4ZmRQ\\ni9Sr2onZUAMuvg3R6ZNdpm7FtQhNEpqV432TJdNZEMbXlDmG61P2vgILugKmu56r\\\
          ngZfgI1QMUSUzZrnH+DXn0GY9KycRKTpY6L8PSUeTVyhDUFlTrTchvbnFf7LpVRRj\\n0+99EUxQFIogXt2rNuj6qioEpabh6rGtIPjICEkue75n2Y4Eu+pdPpSFAPNXLuMB\\\
          nCcvoydmxWkBcq/wrCWcTKdKbGKXEj1xvHXAdUwcmlhXpn1igxcwRtcpwrN8cyRRB\\nddc1dDX6X/6iEnnWdDDWHZYjaMLUWVO0pPXzSEsZMFhS3wPvY1lg1Ertiag6DD0Q\\\
          nwnJq19fJ5M8ehu9qMBdHgPIWdcZBMXSvaQqZ8gBtMO5UyuLA5BTP0yb6Jh3foXCq\\nCPihqYSCGUtXzupJCr/oE+jOaYNWjL5icEU0llA6lr71WWdj3b1OwrUTlrmgA0nK\\\
          nxZu6LrqRT+nxbd4phYbkqmhXccq9H/d8pcZwKwPtF+z8HoZXSddaACYFAqY4eaxa\\nNRk2Zt1JJ+tUsNT9LLV1tUrQ+q1JsKlJp7LW60loljiex8uadsvzwnKIdoom8q0I\\\
          nroXHdrwwqyubf4yYApRckbgzW9gLPbclKSqsVFGsDB+KysDYmg3QlTpkrgGl2555\\naQ7Z2TWWvcVL3y7z1l1F238m11LxKUY8Uvu7enpQ/gTrqQ1qqIi2/yv+LvZmAXWV\\\
          nCFO2lMafpmmHjHEAI5ifXYzZlHCXYBHGHYJdGALFuhODiQqF4pOJI8CX/00msnlJ\\nbMH0+dGnk2AviiaLXb7eCZ7mELCX+Ah+00UU75Vdv7O3vhGHpjuMULvbLW2uo+cw\\\
          n6rogJ4SfUBb0t+yS970Xty650DgpHYxCzDwZZzrQqPuX6SeOD8AnXuJL3cl3B5YU\\n60IPVJPsONIwvJlvZuiij4V8L95usGtvDVsexBKQlj3sSVZ5egICMBjkduEyDl3O\\\
          nxOZtdnqktsWNF5XYUfa/8/HUYnN35g0UktpmKlg0yxhAxUAn4lENAY8xvhMGsSCO\\n-----END\
          \ RSA PRIVATE KEY-----\",\n    \"permissionElevation\": \"sudo\",\n    \"\
          permissionElevationUsername\": \"root\",\n    \"permissionElevationPassword\"\
          : \"*******\"\n  },\n  \"siteAssignment\": \"all-sites\"\n}\n"
  /api/3/shared_credentials/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified shared scan credential.
      operationId: deleteSharedCredential
      parameters:
      - description: The identifier of the credential.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credential
      tags:
      - Credential
    get:
      consumes:
      - application/json
      description: Retrieves the specified shared credential.
      operationId: getSharedCredential
      parameters:
      - description: The identifier of the credential.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SharedCredential'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credential
      tags:
      - Credential
    put:
      consumes:
      - application/json
      description: Updates the specified shared credential.
      operationId: updateSharedCredential
      parameters:
      - description: The identifier of the credential.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The specification of the shared credential to update.
        in: body
        name: credential
        required: false
        schema:
          $ref: '#/definitions/SharedCredential'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Shared Credential
      tags:
      - Credential
  /api/3/sites:
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of accessible sites.
      operationId: getSites
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Site»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sites
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new site with the specified configuration.
      operationId: createSite
      parameters:
      - description: Resource for creating a site configuration.
        in: body
        name: site
        required: false
        schema:
          $ref: '#/definitions/SiteCreateResource'
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«SiteID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sites
      tags:
      - Site
  /api/3/sites/{id}:
    delete:
      consumes:
      - application/json
      description: site.delete.description
      operationId: deleteSite
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the site with the specified identifier.
      operationId: getSite
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Site'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the configuration of the site with the specified identifier.
      operationId: updateSite
      parameters:
      - description: Resource for updating a site configuration.
        in: body
        name: site
        required: false
        schema:
          $ref: '#/definitions/SiteUpdateResource'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site
      tags:
      - Site
  /api/3/sites/{id}/alerts:
    delete:
      consumes:
      - application/json
      description: Deletes all alerts from the site.
      operationId: deleteAllSiteAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Alerts
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieve all alerts defined in the site.
      operationId: getSiteAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Alert»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Alerts
      tags:
      - Site
  /api/3/sites/{id}/alerts/smtp:
    delete:
      consumes:
      - application/json
      description: Deletes all SMTP alerts from the site.
      operationId: deleteAllSiteSmtpAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alerts
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves all SMTP alerts defined in the site.
      operationId: getSiteSmtpAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SmtpAlert»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alerts
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new SMTP alert for the specified site.
      operationId: createSiteSmtpAlert
      parameters:
      - description: Resource for creating a new SMTP alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SmtpAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«AlertID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alerts
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates all SMTP alerts for the specified site in a single request
        using the array of resources defined in the request body.
      operationId: setSiteSmtpAlerts
      parameters:
      - description: Array of resources for updating all SMTP alerts defined in the
          site. Alerts defined in the site that are omitted from this request will
          be deleted from the site.
        in: body
        name: alert
        required: false
        schema:
          items:
            $ref: '#/definitions/SmtpAlert'
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alerts
      tags:
      - Site
  /api/3/sites/{id}/alerts/smtp/{alertId}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified SMTP alert from the site.
      operationId: deleteSiteSmtpAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alert
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the specified SMTP alert.
      operationId: getSiteSmtpAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SmtpAlert'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alert
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the specified SMTP alert.
      operationId: updateSiteSmtpAlert
      parameters:
      - description: Resource for updating the specified SMTP alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SmtpAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SMTP Alert
      tags:
      - Site
  /api/3/sites/{id}/alerts/snmp:
    delete:
      consumes:
      - application/json
      description: Deletes all SNMP alerts from the site.
      operationId: deleteAllSiteSnmpAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alerts
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves all SNMP alerts defined in the site.
      operationId: getSiteSnmpAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SnmpAlert»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alerts
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new SNMP alert for the specified site.
      operationId: createSiteSnmpAlert
      parameters:
      - description: Resource for creating a new SNMP alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SnmpAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«AlertID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alerts
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates all SNMP alerts for the specified site in a single request
        using the array of resources defined in the request body.
      operationId: setSiteSnmpAlerts
      parameters:
      - description: Array of resources for updating all SNMP alerts defined in the
          site. Alerts defined in the site that are omitted from this request will
          be deleted from the site.
        in: body
        name: alert
        required: false
        schema:
          items:
            $ref: '#/definitions/SnmpAlert'
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alerts
      tags:
      - Site
  /api/3/sites/{id}/alerts/snmp/{alertId}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified SNMP alert from the site.
      operationId: deleteSiteSnmpAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alert
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the specified SNMP alert.
      operationId: getSiteSnmpAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SnmpAlert'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alert
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the specified SNMP alert.
      operationId: updateSiteSnmpAlert
      parameters:
      - description: Resource for updating the specified SNMP alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SnmpAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site SNMP Alert
      tags:
      - Site
  /api/3/sites/{id}/alerts/syslog:
    delete:
      consumes:
      - application/json
      description: Deletes all Syslog alerts from the site.
      operationId: deleteAllSiteSyslogAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alerts
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves all Syslog alerts defined in the site.
      operationId: getSiteSyslogAlerts
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SyslogAlert»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alerts
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new Syslog alert for the specified site.
      operationId: createSiteSyslogAlert
      parameters:
      - description: Resource for creating a new Syslog alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SyslogAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«AlertID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alerts
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates all Syslog alerts for the specified site in a single request
        using the array of resources defined in the request body.
      operationId: setSiteSyslogAlerts
      parameters:
      - description: Array of resources for updating all Syslog alerts defined in
          the site. Alerts defined in the site that are omitted from this request
          will be deleted from the site.
        in: body
        name: alert
        required: false
        schema:
          items:
            $ref: '#/definitions/SyslogAlert'
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alerts
      tags:
      - Site
  /api/3/sites/{id}/alerts/syslog/{alertId}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified Syslog alert from the site.
      operationId: deleteSiteSyslogAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alert
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the specified Syslog alert.
      operationId: getSiteSyslogAlert
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SyslogAlert'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alert
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the specified Syslog alert.
      operationId: updateSiteSyslogAlert
      parameters:
      - description: Resource for updating the specified Syslog alert.
        in: body
        name: alert
        required: false
        schema:
          $ref: '#/definitions/SyslogAlert'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the alert.
        format: int32
        in: path
        name: alertId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Syslog Alert
      tags:
      - Site
  /api/3/sites/{id}/assets:
    delete:
      consumes:
      - application/json
      description: Removes all assets from the specified site. Assets will be deleted
        entirely from the Security Console if either Asset Linking is disabled or
        if Asset Linking is enabled and the asset only existed in this site.
      operationId: removeSiteAssets
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Assets
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves a paged resource of assets linked with the specified
        site.
      operationId: getSiteAssets
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Asset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Assets
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates or updates an asset with the specified details.
      operationId: createAsset
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: "The details of the asset being added or updated. \nThe operating\
          \ system can be specified in one of three ways, with the order of precedence:\
          \ `\"osFingerprint\"`, `\"os\"`, `\"cpe\"`"
        in: body
        name: asset
        required: false
        schema:
          $ref: '#/definitions/AssetCreate'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference'
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedOrUpdatedReference'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assets
      tags:
      - Asset
  /api/3/sites/{id}/assets/{assetId}:
    delete:
      consumes:
      - application/json
      description: Removes an asset from a site. The asset will only be deleted if
        it belongs to no other sites.
      operationId: removeAssetFromSite
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Asset
      tags:
      - Site
  /api/3/sites/{id}/discovery_connection:
    get:
      consumes:
      - application/json
      description: Retrieves the discovery connection assigned to the site.
      operationId: getSiteDiscoveryConnection
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SiteDiscoveryConnection'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Discovery Connection
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the discovery connection assigned to the site.
      operationId: setSiteDiscoveryConnection
      parameters:
      - description: The identifier of the discovery connection.
        in: body
        name: connectionId
        required: false
        schema:
          format: int64
          type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Discovery Connection
      tags:
      - Site
  /api/3/sites/{id}/discovery_search_criteria:
    get:
      consumes:
      - application/json
      description: Retrieve the search criteria of the dynamic site.
      operationId: getSiteDiscoverySearchCriteria
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/DiscoverySearchCriteria'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Discovery Search Criteria
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Update the search criteria of the dynamic site.
      operationId: setSiteDiscoverySearchCriteria
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: param1
        in: body
        name: param1
        required: true
        schema:
          $ref: '#/definitions/DiscoverySearchCriteria'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Discovery Search Criteria
      tags:
      - Site
  /api/3/sites/{id}/excluded_asset_groups:
    delete:
      consumes:
      - application/json
      description: Removes all excluded asset groups from the specified static site.
      operationId: removeAllExcludedAssetGroups
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Asset Groups
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the excluded asset groups in a static site.
      operationId: getExcludedAssetGroups
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«AssetGroup»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Asset Groups
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the excluded asset groups in a static site.
      operationId: updateExcludedAssetGroups
      parameters:
      - description: Array of asset group identifiers.
        in: body
        name: assetGroupIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Asset Groups
      tags:
      - Site
  /api/3/sites/{id}/excluded_asset_groups/{assetGroupId}:
    delete:
      consumes:
      - application/json
      description: Removes the specified asset group from the excluded asset groups
        configured in the static site.
      operationId: removeExcludedAssetGroup
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Asset Group
      tags:
      - Site
  /api/3/sites/{id}/excluded_targets:
    get:
      consumes:
      - application/json
      description: Retrieves the excluded targets in a static site.
      operationId: getExcludedTargets
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanTargetsResource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Targets
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the excluded targets in a static site.
      operationId: updateExcludedTargets
      parameters:
      - description: List of addresses to be the site's new excluded scan targets.
          Each address is a string that can represent either a hostname, ipv4 address,
          ipv4 address range, ipv6 address, or CIDR notation.
        in: body
        name: scanTargets
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Excluded Targets
      tags:
      - Site
  /api/3/sites/{id}/included_asset_groups:
    delete:
      consumes:
      - application/json
      description: Removes all included asset groups from the specified static site.
      operationId: removeAllIncludedAssetGroups
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Asset Groups
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the included asset groups in a static site.
      operationId: getIncludedAssetGroups
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«AssetGroup»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Asset Groups
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the included asset groups in a static site.
      operationId: updateIncludedAssetGroups
      parameters:
      - description: Array of asset group identifiers.
        in: body
        name: assetGroupIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Asset Groups
      tags:
      - Site
  /api/3/sites/{id}/included_asset_groups/{assetGroupId}:
    delete:
      consumes:
      - application/json
      description: Removes the specified asset group from the included asset groups
        configured in the static site.
      operationId: removeIncludedAssetGroup
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Asset Group
      tags:
      - Site
  /api/3/sites/{id}/included_targets:
    get:
      consumes:
      - application/json
      description: Retrieves the included targets in a static site.
      operationId: getIncludedTargets
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanTargetsResource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Targets
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the included targets in a static site.
      operationId: updateIncludedTargets
      parameters:
      - description: List of addresses to be the site's new included scan targets.
          Each address is a string that can represent either a hostname, ipv4 address,
          ipv4 address range, ipv6 address, or CIDR notation.
        in: body
        name: scanTargets
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Included Targets
      tags:
      - Site
  /api/3/sites/{id}/organization:
    get:
      consumes:
      - application/json
      description: Retrieves the site organization information.
      operationId: getSiteOrganization
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SiteOrganization'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Organization Information
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the site organization information.
      operationId: updateSiteOrganization
      parameters:
      - description: Resource for updating the specified site's organization information.
        in: body
        name: siteOrganization
        required: false
        schema:
          $ref: '#/definitions/SiteOrganization'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Organization Information
      tags:
      - Site
  /api/3/sites/{id}/scan_engine:
    get:
      consumes:
      - application/json
      description: Retrieves the resource of the scan engine assigned to the site.
      operationId: getSiteScanEngine
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanEngine'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Engine
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the assigned scan engine to the site.
      operationId: setSiteScanEngine
      parameters:
      - description: The identifier of the scan engine.
        in: body
        name: scanEngineId
        required: false
        schema:
          format: int32
          type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Engine
      tags:
      - Site
  /api/3/sites/{id}/scan_schedules:
    delete:
      consumes:
      - application/json
      description: Deletes all scan schedules from the site.
      operationId: deleteAllSiteScanSchedules
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedules
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Returns all scan schedules for the site.
      operationId: getSiteScanSchedules
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«ScanSchedule»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedules
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new scan schedule for the specified site.
      operationId: createSiteScanSchedule
      parameters:
      - description: Resource for a scan schedule.
        in: body
        name: scanSchedule
        required: false
        schema:
          $ref: '#/definitions/ScanSchedule'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«ScanScheduleID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedules
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates all scan schedules for the specified site in a single request
        using the array of resources defined in the request body.
      operationId: setSiteScanSchedules
      parameters:
      - description: Array of resources for updating all scan schedules defined in
          the site. Scan schedules defined in the site that are omitted from this
          request will be deleted from the site.
        in: body
        name: scanSchedules
        required: false
        schema:
          items:
            $ref: '#/definitions/ScanSchedule'
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedules
      tags:
      - Site
  /api/3/sites/{id}/scan_schedules/{scheduleId}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified scan schedule from the site.
      operationId: deleteSiteScanSchedule
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the scan schedule.
        format: int32
        in: path
        name: scheduleId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedule
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the specified scan schedule.
      operationId: getSiteScanSchedule
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the scan schedule.
        format: int32
        in: path
        name: scheduleId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanSchedule'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedule
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the specified scan schedule.
      operationId: updateSiteScanSchedule
      parameters:
      - description: Resource for updating the specified scan schedule.
        in: body
        name: scanSchedule
        required: false
        schema:
          $ref: '#/definitions/ScanSchedule'
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the scan schedule.
        format: int32
        in: path
        name: scheduleId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Schedule
      tags:
      - Site
  /api/3/sites/{id}/scan_template:
    get:
      consumes:
      - application/json
      description: Retrieves the resource of the scan template assigned to the site.
      operationId: getSiteScanTemplate
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ScanTemplate'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Template
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the assigned scan template to the site.
      operationId: setSiteScanTemplate
      parameters:
      - description: The identifier of the scan template.
        in: body
        name: scanTemplateId
        required: false
        schema:
          type: string
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Template
      tags:
      - Site
  /api/3/sites/{id}/scans:
    get:
      consumes:
      - application/json
      description: Returns the scans for the specified site.
      operationId: getSiteScans
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - default: false
        description: Return running scans or past scans (true/false value).
        enum:
        - 'true'
        - 'false'
        in: query
        name: active
        required: false
        type: boolean
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Scan»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scans
      tags:
      - Scan
    post:
      consumes:
      - application/json
      description: Starts a scan for the specified site.
      operationId: startScan
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - default: false
        description: ${override.blackout}
        enum:
        - 'true'
        - 'false'
        in: query
        name: overrideBlackout
        required: false
        type: boolean
      - description: The details for the scan.
        in: body
        name: scan
        required: false
        schema:
          $ref: '#/definitions/AdhocScan'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«ScanID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scans
      tags:
      - Scan
  /api/3/sites/{id}/shared_credentials:
    get:
      consumes:
      - application/json
      description: Retrieve all of the shared credentials assigned to the site. These
        shared credentials can be enabled/disabled for the site's scan.
      operationId: getSiteSharedCredentials
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SiteSharedCredential»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assigned Shared Credentials
      tags:
      - Site
  /api/3/sites/{id}/shared_credentials/{credentialId}/enabled:
    put:
      consumes:
      - application/json
      description: Enable or disable the shared credential for the site's scans.
      operationId: enableSharedCredentialOnSite
      parameters:
      - description: Flag indicating whether the shared credential is enabled for
          the site's scans.
        in: body
        name: status
        required: false
        schema:
          type: boolean
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the shared credential.
        format: int32
        in: path
        name: credentialId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Assigned Shared Credential Enablement
      tags:
      - Site
  /api/3/sites/{id}/site_credentials:
    delete:
      consumes:
      - application/json
      description: Deletes all site credentials from the site.
      operationId: deleteAllSiteCredentials
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credentials
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves all defined site credential resources.
      operationId: getSiteCredentials
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SiteCredential»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credentials
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Creates a new site credential.
      operationId: createSiteCredential
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The specification of a site credential.
        in: body
        name: siteCredential
        required: false
        schema:
          $ref: '#/definitions/SiteCredential'
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«CredentialID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credentials
      tags:
      - Site
      x-code-samples:
      - lang: A CIFS credential
        source: "{\n  \"name\": \"CIFS Administrator\",\n  \"description\": \"This\
          \ is a cifs credential for an administrator. Credential is disabled for\
          \ use in site scans and restricted to a single host for authentication.\"\
          ,\n  \"enabled\": false,\n  \"account\": {\n    \"service\": \"cifs\",\n\
          \    \"username\": \"joe_smith@acme.com\",\n    \"password\": \"******\"\
          ,\n    \"domain\": \"acme\"\n  },\n  \"hostRestriction\": \"machine1.acme.com\"\
          \n}"
      - lang: A Microsoft SQL Server credential
        source: "{\n  \"name\": \"MS SQL Administrator\",\n  \"description\": \"This\
          \ is an administrator credential for a Microsoft SQL Server database. Configured\
          \ to use windows authentication. Credential is disabled for use in site\
          \ scans.\",\n  \"enabled\": false,\n  \"account\": {\n    \"service\": \"\
          ms-sql\",\n    \"database\": \"usersdb\",\n    \"useWindowsAuthentication\"\
          : true,\n    \"domain\": \"acme\",\n    \"username\": \"admin\",\n    \"\
          password\": \"******\"\n  },\n  \"hostRestriction\": \"machine1.acme.com\"\
          \n}\n"
      - lang: An Oracle database credential
        source: "{\n  \"name\": \"Oracle DB Administrator\",\n  \"description\": \"\
          This is an administrator credential for an Oracle database. Credential is\
          \ restricted to a single host and port for authentication.\",\n  \"enabled\"\
          : true,\n  \"account\": {\n    \"service\": \"oracle\",\n    \"sid\": \"\
          usersdb\",\n    \"username\": \"admin\",\n    \"password\": \"******\",\n\
          \    \"enumerateSids\": true,\n    \"oracleListenerPassword\": \"******\"\
          \n  },\n  \"hostRestriction\": \"192.168.1.1\",\n  \"portRestriction\":\
          \ 1521\n}\n"
      - lang: An SNMPv3 credential
        source: "{\n  \"name\": \"SNMP v3 Administator\",\n  \"enabled\": true,\n\
          \  \"account\": {\n    \"service\": \"snmpv3\",\n    \"authenticationType\"\
          : \"md5\",\n    \"username\": \"admin\",\n    \"password\": \"******\",\n\
          \    \"privacyType\": \"aes-256\",\n    \"privacyPassword\": \"******\"\n\
          \  }\n}\n"
      - lang: An SSH credential
        source: "{\n  \"name\": \"SSH Administrator\",\n  \"description\": \"This\
          \ is an SSH credential for an administrator. Credential is enabled for use\
          \ in site scans.\",\n  \"enabled\": true,\n  \"account\": {\n    \"service\"\
          : \"ssh\",\n    \"username\": \"admin\",\n    \"password\": \"******\"\n\
          \  }\n}\n"
      - lang: An SSH credential using sudo+su permission elevation
        source: "{\n  \"name\": \"SSH User (permission elevation with sudo+su)\",\n\
          \  \"description\": \"This is an SSH credential for an non-administrative\
          \ user. Credential is configured to perform permission elevation using sudo+su\
          \ for additional access.\",\n  \"enabled\": true,\n  \"account\": {\n  \
          \  \"service\": \"ssh\",\n    \"username\": \"jsmith\",\n    \"password\"\
          : \"******\",\n    \"permissionElevation\": \"sudosu\",\n    \"permissionElevationUsername\"\
          : \"root\",\n    \"permissionElevationPassword\": \"******\"\n  }\n}\n"
      - lang: An SSH public key credential
        source: "{\n  \"name\": \"SSH Public Key credential (permission elevation\
          \ with sudo)\",\n  \"description\": \"This is an SSH credential for a non-administrative\
          \ user using a PEM-format private key. Credential is also configured to\
          \ elevate permissions using sudo.\",\n  \"enabled\": true,\n  \"account\"\
          : {\n    \"service\": \"ssh-key\",\n    \"username\": \"admin\",\n    \"\
          privateKeyPassword\": \"*******\",\n    \"pemKey\": \"-----BEGIN RSA PRIVATE\
          \ KEY-----\\nProc-Type: 4,ENCRYPTED\\nDEK-Info: AES-128-CBC,0D364155CB54D4B485BDB3B11B76BF59\\\
          n\\nGLH7n9qeWzZ43g8d5ZNo9BcSWGXo7i8yd3ig9SLKXJd9GoxOrI4OepxZbhOJFDC9\\nXer799R8M4+ZGUwIC14R4lfzgKjcqEBCzya/c99MxK9Haz8pt5BjTMtUQRWO5y+/\\\
          nyySosHRVebB05TuMhmLnJkNnDfTYwT+Hnvdhu/2ArEm2FN9Rr+guumwhQeGxUha5\\n7zjjSimLYjuU2uayjgFLfnh9g/Fe24qmHCw80z+nuHsm9WMWeoeOdmMrMmxhLxUb\\\
          nb+zYZs/xRYjKgBMTRiXNSK9UIy21t2+7TUzeyDwfvHq0f5KpinhD1vzYSL+N0k/H\\ndg6vqM1gD/DLb+eKoAGpXTE0gpHWcXLg526ivlyZEpAxbuyGPVQ+7IIGytjxN7lG\\\
          nJyvbk3fpKDwIJLDOFN4eb9DUaUoqyarqVl44BZhcs7mM0Cvn49IA7PfhcznLv4rJ\\netAoZ2Tjt0AiM774+4X29EaYBGXKGC3SYKfiznoEEy1Jpi6Akwxz4FKCEazH1wce\\\
          nUaUS/N8VbquMPTqcLjCfoztdOgk65j4FczGt22CtGz4Ns8XB0KRM9fcVQFD4ZmRQ\\ni9Sr2onZUAMuvg3R6ZNdpm7FtQhNEpqV432TJdNZEMbXlDmG61P2vgILugKmu56r\\\
          ngZfgI1QMUSUzZrnH+DXn0GY9KycRKTpY6L8PSUeTVyhDUFlTrTchvbnFf7LpVRRj\\n0+99EUxQFIogXt2rNuj6qioEpabh6rGtIPjICEkue75n2Y4Eu+pdPpSFAPNXLuMB\\\
          nCcvoydmxWkBcq/wrCWcTKdKbGKXEj1xvHXAdUwcmlhXpn1igxcwRtcpwrN8cyRRB\\nddc1dDX6X/6iEnnWdDDWHZYjaMLUWVO0pPXzSEsZMFhS3wPvY1lg1Ertiag6DD0Q\\\
          nwnJq19fJ5M8ehu9qMBdHgPIWdcZBMXSvaQqZ8gBtMO5UyuLA5BTP0yb6Jh3foXCq\\nCPihqYSCGUtXzupJCr/oE+jOaYNWjL5icEU0llA6lr71WWdj3b1OwrUTlrmgA0nK\\\
          nxZu6LrqRT+nxbd4phYbkqmhXccq9H/d8pcZwKwPtF+z8HoZXSddaACYFAqY4eaxa\\nNRk2Zt1JJ+tUsNT9LLV1tUrQ+q1JsKlJp7LW60loljiex8uadsvzwnKIdoom8q0I\\\
          nroXHdrwwqyubf4yYApRckbgzW9gLPbclKSqsVFGsDB+KysDYmg3QlTpkrgGl2555\\naQ7Z2TWWvcVL3y7z1l1F238m11LxKUY8Uvu7enpQ/gTrqQ1qqIi2/yv+LvZmAXWV\\\
          nCFO2lMafpmmHjHEAI5ifXYzZlHCXYBHGHYJdGALFuhODiQqF4pOJI8CX/00msnlJ\\nbMH0+dGnk2AviiaLXb7eCZ7mELCX+Ah+00UU75Vdv7O3vhGHpjuMULvbLW2uo+cw\\\
          n6rogJ4SfUBb0t+yS970Xty650DgpHYxCzDwZZzrQqPuX6SeOD8AnXuJL3cl3B5YU\\n60IPVJPsONIwvJlvZuiij4V8L95usGtvDVsexBKQlj3sSVZ5egICMBjkduEyDl3O\\\
          nxOZtdnqktsWNF5XYUfa/8/HUYnN35g0UktpmKlg0yxhAxUAn4lENAY8xvhMGsSCO\\n-----END\
          \ RSA PRIVATE KEY-----\",\n    \"permissionElevation\": \"sudo\",\n    \"\
          permissionElevationUsername\": \"root\",\n    \"permissionElevationPassword\"\
          : \"*******\"\n  }\n}\n"
    put:
      consumes:
      - application/json
      description: Updates multiple site credentials.
      operationId: setSiteCredentials
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: A list of site credentials resources.
        in: body
        name: siteCredentials
        required: false
        schema:
          items:
            $ref: '#/definitions/SiteCredential'
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credentials
      tags:
      - Site
  /api/3/sites/{id}/site_credentials/{credentialId}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified site credential.
      operationId: deleteSiteCredential
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site credential.
        format: int32
        in: path
        name: credentialId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credential
      tags:
      - Site
    get:
      consumes:
      - application/json
      description: Retrieves the specified site credential.
      operationId: getSiteCredential
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site credential.
        format: int32
        in: path
        name: credentialId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SiteCredential'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credential
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the specified site credential.
      operationId: updateSiteCredential
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site credential.
        format: int32
        in: path
        name: credentialId
        required: false
        type: integer
      - description: The specification of the site credential to update.
        in: body
        name: siteCredential
        required: false
        schema:
          $ref: '#/definitions/SiteCredential'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Scan Credential
      tags:
      - Site
  /api/3/sites/{id}/site_credentials/{credentialId}/enabled:
    put:
      consumes:
      - application/json
      description: Enable or disable the site credential for scans.
      operationId: enableSiteCredential
      parameters:
      - description: Flag indicating whether the credential is enabled for use during
          the scan.
        in: body
        name: status
        required: false
        schema:
          type: boolean
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site credential.
        format: int32
        in: path
        name: credentialId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Credential Enablement
      tags:
      - Site
  /api/3/sites/{id}/tags:
    get:
      consumes:
      - application/json
      description: Retrieves the list of tags added to the sites.
      operationId: getSiteTags
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Tag»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Tags
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the site's list of tags.
      operationId: setSiteTags
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: A list of tag identifiers to replace the site's tags.
        in: body
        name: tags
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Tags
      tags:
      - Site
  /api/3/sites/{id}/tags/{tagId}:
    delete:
      consumes:
      - application/json
      description: Removes the specified tag from the site's tags.
      operationId: removeSiteTag
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Tag
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Adds a tag to the site.
      operationId: addSiteTag
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the tag.
        format: int32
        in: path
        name: tagId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Tag
      tags:
      - Site
  /api/3/sites/{id}/users:
    get:
      consumes:
      - application/json
      description: Retrieve the list of non-administrator users that have access to
        the site.
      operationId: getSiteUsers
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«User»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Users Access
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Grants a non-administrator user access to the specified site.
      operationId: addSiteUser
      parameters:
      - description: The identifier of the user.
        in: body
        name: param0
        required: false
        schema:
          format: int32
          type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«UserID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Users Access
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Updates the site's access list.
      operationId: setSiteUsers
      parameters:
      - description: A list of user identifiers to replace the site's access list.
        in: body
        name: users
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Users Access
      tags:
      - Site
  /api/3/sites/{id}/users/{userId}:
    delete:
      consumes:
      - application/json
      description: Removes the specified user from the site's access list.
      operationId: removeSiteUser
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the user.
        format: int32
        in: path
        name: userId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site User Access
      tags:
      - Site
  /api/3/sites/{id}/web_authentication/html_forms:
    get:
      consumes:
      - application/json
      description: Retrieves all HTML form authentications configured in the site.
      operationId: getWebAuthHtmlForms
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«WebFormAuthentication»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Web Authentication HTML Forms
      tags:
      - Site
  /api/3/sites/{id}/web_authentication/http_headers:
    get:
      consumes:
      - application/json
      description: Retrieves all HTTP header authentications configured in the site.
      operationId: getWebAuthHTTPHeaders
      parameters:
      - description: The identifier of the site.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«WebHeaderAuthentication»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Web Authentication HTTP Headers
      tags:
      - Site
  /api/3/software:
    get:
      consumes:
      - application/json
      description: Returns all software enumerated on any asset.
      operationId: getSoftwares
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Software»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Software
      tags:
      - Asset
  /api/3/software/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for software.
      operationId: getSoftware
      parameters:
      - description: The identifier of the software.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Software'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Software
      tags:
      - Asset
  /api/3/solutions:
    get:
      consumes:
      - application/json
      description: Returns the details for all solutions.
      operationId: getSolutions
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Solution»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Solutions
      tags:
      - Vulnerability
  /api/3/solutions/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for a solution that can remediate one or more
        vulnerabilities.
      operationId: getSolution
      parameters:
      - description: The identifier of the solution.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Solution'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Solution
      tags:
      - Vulnerability
  /api/3/solutions/{id}/prerequisites:
    get:
      consumes:
      - application/json
      description: Returns the solutions that must be executed in order for a solution
        to resolve a vulnerability.
      operationId: getPrerequisiteSolutions
      parameters:
      - description: The identifier of the solution.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«SolutionNaturalID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Solution Prerequisites
      tags:
      - Vulnerability
  /api/3/solutions/{id}/supersedes:
    get:
      consumes:
      - application/json
      description: Returns the solutions that are superseded by this solution.
      operationId: getSupersededSolutions
      parameters:
      - description: The identifier of the solution.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Solution»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Superseded Solutions
      tags:
      - Vulnerability
  /api/3/solutions/{id}/superseding:
    get:
      consumes:
      - application/json
      description: Returns the solutions that supersede this solution.
      operationId: getSupersedingSolutions
      parameters:
      - description: The identifier of the solution.
        in: path
        name: id
        required: false
        type: string
      - default: true
        description: Whether to return only highest-level "rollup" superseding solutions.
        in: query
        name: rollup
        required: false
        type: boolean
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«Solution»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Superseding Solutions
      tags:
      - Vulnerability
  /api/3/sonar_queries:
    get:
      consumes:
      - application/json
      description: Returns all sonar queries.
      operationId: getSonarQueries
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«SonarQuery»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Queries
      tags:
      - Asset Discovery
    post:
      consumes:
      - application/json
      description: Creates a sonar query.
      operationId: createSonarQuery
      parameters:
      - description: The criteria for a Sonar query.
        in: body
        name: query
        required: false
        schema:
          $ref: '#/definitions/SonarQuery'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«DiscoveryQueryID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Queries
      tags:
      - Asset Discovery
      x-code-samples:
      - lang: Assets in IP Range
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"ip-address-range\", \"lower\": \"192.168.1.1\", \"upper\": \"\
          192.168.1.254\" }\n        ]\n    },\n    \"name\": \"Assets In IP Range\"\
          \n}"
      - lang: Recently Scanned Rapid7 Assets
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"domain-contains\", \"domain\": \"acme.com\" },\n            {\
          \ \"type\": \"scan-date-within-the-last\", \"days\": \"30\" }\n        ]\n\
          \    },\n    \"name\": \"Recently Scanned ACME Assets\"\n}"
      - lang: Recently Scanned Assets in IP Range
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"ip-address-range\", \"lower\": \"192.168.1.1\", \"upper\": \"\
          192.168.1.254\" },\n            { \"type\": \"scan-date-within-the-last\"\
          , \"days\": \"30\" }\n        ]\n    },\n    \"name\": \"Recently Scanned\
          \ Assets in IP Range\"\n}"
  /api/3/sonar_queries/search:
    post:
      consumes:
      - application/json
      description: Executes a Sonar query to discover assets with the given search
        criteria.
      operationId: sonarQuerySearch
      parameters:
      - description: The criteria for a Sonar query.
        in: body
        name: query
        required: false
        schema:
          $ref: '#/definitions/SonarCriteria'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            items:
              $ref: '#/definitions/DiscoveryAsset'
            type: array
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Query Search
      tags:
      - Asset Discovery
      x-code-samples:
      - lang: Assets in IP Range
        source: "{\n    \"filters\": [\n        { \"type\": \"ip-address-range\",\
          \ \"lower\": \"192.168.1.1\", \"upper\": \"192.168.1.254\" }\n    ]\n}"
      - lang: Recently Scanned Rapid7 Assets
        source: "{\n    \"filters\": [\n        { \"type\": \"domain-contains\", \"\
          domain\": \"acme.com\"},\n        { \"type\": \"scan-date-within-the-last\"\
          , \"days\": \"30\"}\n    ]\n}"
      - lang: Recently Scanned Assets in IP Range
        source: "{\n    \"filters\": [\n        { \"type\": \"ip-address-range\",\
          \ \"lower\": \"192.168.1.1\", \"upper\": \"192.168.1.254\" },\n        {\
          \ \"type\": \"scan-date-within-the-last\", \"days\": \"30\" }\n    ]\n}"
  /api/3/sonar_queries/{id}:
    delete:
      consumes:
      - application/json
      description: Removes a sonar query.
      operationId: deleteSonarQuery
      parameters:
      - description: The identifier of the Sonar query.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Query
      tags:
      - Asset Discovery
    get:
      consumes:
      - application/json
      description: Returns a sonar query.
      operationId: getSonarQuery
      parameters:
      - description: The identifier of the Sonar query.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SonarQuery'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Query
      tags:
      - Asset Discovery
    put:
      consumes:
      - application/json
      description: Updates a sonar query.
      operationId: updateSonarQuery
      parameters:
      - description: The identifier of the Sonar query.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      - description: The criteria for a Sonar query.
        in: body
        name: query
        required: false
        schema:
          $ref: '#/definitions/SonarQuery'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Query
      tags:
      - Asset Discovery
      x-code-samples:
      - lang: Assets in IP Range
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"ip-address-range\", \"lower\": \"192.168.1.1\", \"upper\": \"\
          192.168.1.254\" }\n        ]\n    },\n    \"name\": \"Assets In IP Range\"\
          \n}"
      - lang: Recently Scanned Rapid7 Assets
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"domain-contains\", \"domain\": \"acme.com\" },\n            {\
          \ \"type\": \"scan-date-within-the-last\", \"days\": \"30\" }\n        ]\n\
          \    },\n    \"name\": \"Recently Scanned ACME Assets\"\n}"
      - lang: Recently Scanned Assets in IP Range
        source: "{\n    \"criteria\": {\n        \"filters\": [\n            { \"\
          type\": \"ip-address-range\", \"lower\": \"192.168.1.1\", \"upper\": \"\
          192.168.1.254\" },\n            { \"type\": \"scan-date-within-the-last\"\
          , \"days\": \"30\" }\n        ]\n    },\n    \"name\": \"Recently Scanned\
          \ Assets in IP Range\"\n}"
  /api/3/sonar_queries/{id}/assets:
    get:
      consumes:
      - application/json
      description: Returns the assets that are discovered by a Sonar query.
      operationId: getSonarQueryAssets
      parameters:
      - description: The identifier of the Sonar query.
        format: int64
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Resources«DiscoveryAsset»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sonar Query Assets
      tags:
      - Asset Discovery
  /api/3/tags:
    get:
      consumes:
      - application/json
      description: Returns all tags.
      operationId: getTags
      parameters:
      - description: name
        in: query
        name: name
        required: false
        type: string
      - description: type
        in: query
        name: type
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Tag»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tags
      tags:
      - Tag
    post:
      consumes:
      - application/json
      description: Creates a new tag.
      operationId: createTag
      parameters:
      - description: The details of the tag.
        in: body
        name: tag
        required: false
        schema:
          $ref: '#/definitions/Tag'
      produces:
      - application/json;charset=UTF-8
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferenceWith«TagID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tags
      tags:
      - Tag
  /api/3/tags/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the tag.
      operationId: deleteTag
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag
      tags:
      - Tag
    get:
      consumes:
      - application/json
      description: Returns a tag.
      operationId: getTag
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Tag'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Updates the details of a tag. For more information about accepted
        fields for the tag search criteria see the PUT /search_criteria documentation.
      operationId: updateTag
      parameters:
      - description: The details of the tag.
        in: body
        name: tag
        required: false
        schema:
          $ref: '#/definitions/Tag'
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag
      tags:
      - Tag
  /api/3/tags/{id}/asset_groups:
    delete:
      consumes:
      - application/json
      description: Removes the associations between the tag and all asset groups.
      operationId: untagAllAssetGroups
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset Groups
      tags:
      - Tag
    get:
      consumes:
      - application/json
      description: Returns the asset groups associated with the tag.
      operationId: getTagAssetGroups
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«AssetGroupID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset Groups
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Sets the asset groups associated with the tag.
      operationId: setTaggedAssetGroups
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The asset groups to add to the tag.
        in: body
        name: assetGroupIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset Groups
      tags:
      - Tag
  /api/3/tags/{id}/asset_groups/{assetGroupId}:
    delete:
      consumes:
      - application/json
      description: Removes an asset group from this tag.
      operationId: untagAssetGroup
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The asset group identifier.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset Group
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Adds an asset group to this tag.
      operationId: tagAssetGroup
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The asset group identifier.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset Group
      tags:
      - Tag
  /api/3/tags/{id}/assets:
    get:
      consumes:
      - application/json
      description: Returns the assets tagged with a tag.
      operationId: getTaggedAssets
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/TaggedAssetReferences'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Assets
      tags:
      - Tag
  /api/3/tags/{id}/assets/{assetId}:
    delete:
      consumes:
      - application/json
      description: 'Removes an asset from the tag. Note: The asset must be added through
        the asset or tag, if the asset is added using a site, asset group, or search
        criteria this will not remove the asset.'
      operationId: untagAsset
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Adds an asset to the tag.
      operationId: tagAsset
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset.
        format: int64
        in: path
        name: assetId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Asset
      tags:
      - Tag
  /api/3/tags/{id}/search_criteria:
    delete:
      consumes:
      - application/json
      description: Removes the search criteria associated with the tag.
      operationId: removeTagSearchCriteria
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Search Criteria
      tags:
      - Tag
    get:
      consumes:
      - application/json
      description: Returns the search criteria associated with the tag.
      operationId: getTagSearchCriteria
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/SearchCriteria'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Search Criteria
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: "Updates the search criteria associated with the tag. \n\nThe following\
        \ table outlines the search criteria fields and the available operators: \n\
        | Field | Operators | \n| ---------- | ---------------- | \n| asset name |\
        \ is,is not,starts with,ends with,contains,does not contain,is empty,is not\
        \ empty,is like,not like | \n| asset risk score | is,is not,in range,greater\
        \ than,less than | \n| container image | is,is not,starts with,ends with,contains,does\
        \ not contain,is like,not like | \n| container status | is,is not | \n| containers\
        \ | are | \n| CVE IDs | is,is not,contains,does not contain | \n| CVSS Access\
        \ Complexity | is,is not |\n| CVSS Authentication Required | is,is not |\n\
        | CVSS Access Vector | is,is not |\n| CVSS Availability Impact | is,is not\
        \ |\n| CVSS Confidentiality Impact | is,is not |\n| CVSS Integrity Impact\
        \ | is,is not |\n| CVSS Access Complexity | is,is not |\n| host type | in,not\
        \ in | \n| asset IP Address | is,is not,in range,not in range,is like,not\
        \ like | \n| asset IP Address Type | in,not in | \n| asset last scan date\
        \ | is on or before,is on or after,is between,is earlier than,is within the\
        \ last | \n| mobile device last sync time | is within the last,is earlier\
        \ than | \n| open ports | is,is not,in range | \n| asset operating system\
        \ | contains,does not contain,is empty,is not empty | \n| asset alternate\
        \ address type | in | \n| asset PCI compliance | is | \n| asset service name\
        \ | contains,does not contain | \n| asset site ID | in,not in | \n| asset\
        \ software | contains,does not contain| \n| asset Criticality tag | is,is\
        \ not,is greater than,is less than,is applied,is not applied | \n| asset Custom\
        \ tag | is,is not,starts with, ends with,contains,does not contain,is applied,is\
        \ not applied | \n| asset Location tag | is,is not,starts with,ends with,contains,does\
        \ not contain,is applied,is not applied | \n| asset Owner tag | is,is not,starts\
        \ with,ends with,contains,does not contain,is applied,is not applied | \n\
        | asset vulnerability validated status | are | \n| asset VAsset cluster |\
        \ is,is not,contains,does not contain,starts with | \n| asset VAsset datacenter\
        \ | is,is not | \n| asset VAsset host name | is,is not,contains,does not contain,starts\
        \ with | \n| asset VAsset power state | in,not in | \n| asset VAsset resource\
        \ pool path | contains,does not contain | \n| asset vulnerability assessed\
        \ | is on or before,is on or after,is between,is earlier than,is within the\
        \ last | \n| asset vulnerability category | is,is not,starts with,ends with,contains,does\
        \ not contain| \n| asset vulnerability CVSS score | is,is not,in range,is\
        \ greater than,is less than | \n| asset vulnerability exposures | includes,does\
        \ not include | \n| asset vulnerability title | contains,does not contain,is,is\
        \ not,starts with,ends with | \n\nThe following table outlines the operators\
        \ and the values associated with them: \n| Operator | Values | \n| --------\
        \ | ------ | \n| are | A single string property named \"value\" | \n| is between\
        \ | A number property named \"lower\" and a number property named \"upper\"\
        \ | \n| contains | A single string property named \"value\" | \n| does not\
        \ contain | A single string property named \"value\" | \n| is earlier than\
        \ | A single number property named \"value\" | \n| ends with | A single string\
        \ property named \"value\" | \n| is greater than | A single number property\
        \ named \"value\" | \n| in | An array property named \"values\" | \n| not\
        \ in | An array property named \"values\" | \n| in range | A number property\
        \ named \"lower\" and a number property named \"upper\" | \n| includes | An\
        \ array property named \"values\" | \n| is | A single string property named\
        \ \"value\" | \n| is not | A single string property named \"value\" | \n|\
        \ is applied | No value | \n| is not applied | No value | \n| is empty | No\
        \ value | \n| is not empty | No value | \n| less than | A single number property\
        \ named \"value\" | \n| like | A single string property named \"value\" |\
        \ \n| not contains | A single string property named \"value\" | \n| not in\
        \ range | A number property named \"lower\" and a number property named \"\
        upper\" | \n| not like | A single string property named \"value\" | \n| is\
        \ on or after | A single string property named \"value\", which is the date\
        \ in ISO8601 format (yyyy-MM-dd) | \n| is on or before | A single string property\
        \ named \"value\", which is the date in ISO8601 format (yyyy-MM-dd) | \n|\
        \ starts with | A single string property named \"value\" | \n| is within the\
        \ last | A single number property named \"value\" | \n\nThe following fields\
        \ have enumerated values: \n| Field | Acceptable Values | \n| ----- | -----------------\
        \ | \n| containers | 0=present, 1=not present | \n| asset vulnerability validated\
        \ status | 0=present, 1=not present | \n| asset PCI compliance | 0=fail, 1=pass\
        \ | \n| asset alternate address type | 0=IPv4, 1=IPv6 | \n| asset IP Address\
        \ Type | 0=IPv4, 1=IPv6 | \n| host type | 0=Unknown, 1=Guest, 2=Hypervisor,\
        \ 3=Physical, 4=Mobile | \n| CVSS Access Complexity | L=Low, M=Medium, H=High\
        \ | \n| CVSS Integrity Impact | N=None, P=Partial, C=Complete | \n| CVSS Confidentiality\
        \ Impact | N=None, P=Partial, C=Complete | \n| CVSS Availability Impact |\
        \ N=None, P=Partial, C=Complete | \n| CVSS Access Vector | L=Local, A=Adjacent,\
        \ N=Network | \n| CVSS Authentication Required | N=None, S=Single, M=Multiple\
        \ | \n| CVSS Access Complexity | L=Low, M=Medium, H=High | \n| container status\
        \ | created, running, paused, restarting, exited, dead, unknown | \n"
      operationId: updateTagSearchCriteria
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The details of the search criteria.
        in: body
        name: criterial
        required: false
        schema:
          $ref: '#/definitions/SearchCriteria'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Search Criteria
      tags:
      - Tag
  /api/3/tags/{id}/sites:
    delete:
      consumes:
      - application/json
      description: Removes the associations between the tag and the sites.
      operationId: removeTaggedSites
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Sites
      tags:
      - Tag
    get:
      consumes:
      - application/json
      description: Returns the sites associated with the tag.
      operationId: getTaggedSites
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«SiteID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Sites
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Sets the sites associated with the tag.
      operationId: setTaggedSites
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The sites to add to the tag.
        in: body
        name: sites
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Sites
      tags:
      - Tag
  /api/3/tags/{id}/sites/{siteId}:
    delete:
      consumes:
      - application/json
      description: Removes a site from this tag.
      operationId: untagSite
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: siteId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Site
      tags:
      - Tag
    put:
      consumes:
      - application/json
      description: Adds a site to this tag.
      operationId: tagSite
      parameters:
      - description: The identifier of the tag.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: siteId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Tag Site
      tags:
      - Tag
  /api/3/users:
    get:
      consumes:
      - application/json
      description: Returns all defined users. <span class="authorization">Global Administrator</span>
      operationId: getUsers
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«User»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user. <span class="authorization">Global Administrator</span>
      operationId: createUser
      parameters:
      - description: The details of the user.
        in: body
        name: user
        required: false
        schema:
          $ref: '#/definitions/UserEdit'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«UserID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Users
      tags:
      - User
  /api/3/users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user account.<span class="authorization">Global Administrator</span>
      operationId: deleteUser
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the details for a user.<span class="authorization">Global
        Administrator, Current User</span>
      operationId: getUser
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the details of a user. <span class="authorization">Global
        Administrator</span>
      operationId: updateUser
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The details of the user.
        in: body
        name: user
        required: false
        schema:
          $ref: '#/definitions/UserEdit'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: User
      tags:
      - User
  /api/3/users/{id}/2FA:
    get:
      consumes:
      - application/json
      description: Retrieves the current authentication token seed (key) for the user,
        if configured.
      operationId: getTwoFactorAuthenticationKey
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/TokenResource'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Two-Factor Authentication
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Regenerates a new authentication token seed (key) and updates it
        for the user. This key may be then be used in the appropriate 2FA authenticator.
      operationId: regenerateTwoFactorAuthentication
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/TokenResource'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Two-Factor Authentication
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Sets the authentication token seed (key) for the user. This key
        may be then be used in the appropriate 2FA authenticator.
      operationId: setTwoFactorAuthentication
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The authentication token seed (key) to use for the user.
        in: body
        name: token
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Two-Factor Authentication
      tags:
      - User
  /api/3/users/{id}/asset_groups:
    delete:
      consumes:
      - application/json
      description: Revokes access to all asset groups from the user.
      operationId: removeAllUserAssetGroups
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Groups Access
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the asset groups to which the user has access.
      operationId: getUserAssetGroups
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«AssetGroupID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Groups Access
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the asset groups to which the user has access. Individual
        asset group access cannot be granted to users with the `allAssetGroups` permission.
        <span class="authorization">Global Administrator</span>
      operationId: setUserAssetGroups
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifiers of the asset groups to grant the user access
          to. Ignored if user has access to `allAssetGroups`.
        in: body
        name: assetGroupIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Groups Access
      tags:
      - User
  /api/3/users/{id}/asset_groups/{assetGroupId}:
    delete:
      consumes:
      - application/json
      description: Grants the user access to the asset group. Individual asset group
        access cannot be granted to users with the `allAssetGroups` permission. <span
        class="authorization">Global Administrator</span>
      operationId: removeUserAssetGroup
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Access
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Grants the user access to the asset group. Individual asset group
        access cannot be granted to users with the `allAssetGroups` permission. <span
        class="authorization">Global Administrator</span>
      operationId: addUserAssetGroup
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the asset group.
        format: int32
        in: path
        name: assetGroupId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Asset Group Access
      tags:
      - User
  /api/3/users/{id}/lock:
    delete:
      consumes:
      - application/json
      description: Unlocks a locked user account that has too many failed authentication
        attempts. Disabled accounts may not be unlocked.
      operationId: unlockUser
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Unlock Account
      tags:
      - User
  /api/3/users/{id}/password:
    put:
      consumes:
      - application/json
      description: Changes the password for the user. Users may only change their
        own password.
      operationId: resetPassword
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The new password to set.
        in: body
        name: password
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Password Reset
      tags:
      - User
  /api/3/users/{id}/privileges:
    get:
      consumes:
      - application/json
      description: Returns the privileges granted to the user by their role. <span
        class="authorization">Global Administrator</span>
      operationId: getUserPrivileges
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Privileges'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: User Privileges
      tags:
      - User
  /api/3/users/{id}/sites:
    delete:
      consumes:
      - application/json
      description: Revokes access to all sites from the user.
      operationId: removeAllUserSites
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sites Access
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the sites to which the user has access.
      operationId: getUserSites
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«SiteID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sites Access
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the sites to which the user has access. Individual site
        access cannot be granted to users with the `allSites` permission. <span class="authorization">Global
        Administrator</span>
      operationId: setUserSites
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifiers of the sites to grant the user access to. Ignored
          if the user has access to `allSites`.
        in: body
        name: siteIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Sites Access
      tags:
      - User
  /api/3/users/{id}/sites/{siteId}:
    delete:
      consumes:
      - application/json
      description: Grants the user access to the site. Individual site access cannot
        be granted to users with the `allSites` permission. <span class="authorization">Global
        Administrator</span>
      operationId: removeUserSite
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: siteId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Access
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Grants the user access to the site. Individual site access cannot
        be granted to users with the `allSites` permission. <span class="authorization">Global
        Administrator</span>
      operationId: addUserSite
      parameters:
      - description: The identifier of the user.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      - description: The identifier of the site.
        format: int32
        in: path
        name: siteId
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Site Access
      tags:
      - User
  /api/3/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Returns all vulnerabilities that can be assessed during a scan.
      operationId: getVulnerabilities
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Vulnerability»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerabilities
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for a vulnerability.
      operationId: getVulnerability
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Vulnerability'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}/assets:
    get:
      consumes:
      - application/json
      description: Get the assets affected by the vulnerability.
      operationId: getAffectedAssets
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«AssetID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability Affected Assets
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}/checks:
    get:
      consumes:
      - application/json
      description: Returns the vulnerability checks that assess for a specific vulnerability
        during a scan.
      operationId: getVulnerabilityChecksForVulnerability
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«VulnerabilityCheckID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability Checks
      tags:
      - Vulnerability Check
  /api/3/vulnerabilities/{id}/exploits:
    get:
      consumes:
      - application/json
      description: Returns the exploits that can be used to exploit a vulnerability.
      operationId: getVulnerabilityExploits
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Exploit»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability Exploits
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}/malware_kits:
    get:
      consumes:
      - application/json
      description: Returns the malware kits that are known to be used to exploit the
        vulnerability.
      operationId: getVulnerabilityMalwareKits
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«MalwareKit»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability Malware Kits
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}/references:
    get:
      consumes:
      - application/json
      description: Returns the external references that may be associated to a vulnerability.
      operationId: getVulnerabilityReferences_1
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityReference»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability References
      tags:
      - Vulnerability
  /api/3/vulnerabilities/{id}/solutions:
    get:
      consumes:
      - application/json
      description: Returns all solutions (across all platforms) that may be used to
        remediate this vulnerability.
      operationId: getVulnerabilitySolutions
      parameters:
      - description: The identifier of the vulnerability.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«SolutionNaturalID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Vulnerability Solutions
      tags:
      - Vulnerability
  /api/3/vulnerability_categories:
    get:
      consumes:
      - application/json
      description: Returns all vulnerabilities categories that can be assigned to
        a vulnerability. These categories group and label vulnerabilities by general
        purpose, affected systems, vendor, etc.
      operationId: getVulnerabilityCategories
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityCategory»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Categories
      tags:
      - Vulnerability
  /api/3/vulnerability_categories/{id}:
    get:
      consumes:
      - application/json
      description: Returns the details for a vulnerability category.
      operationId: getVulnerabilityCategory
      parameters:
      - description: The identifier of the vulnerability category.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityCategory'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Category
      tags:
      - Vulnerability
  /api/3/vulnerability_categories/{id}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Returns hypermedia links to the vulnerabilities that are in a vulnerability
        category.
      operationId: getVulnerabilityCategoryVulnerabilities
      parameters:
      - description: The identifier of the vulnerability category.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«VulnerabilityNaturalID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Category Vulnerabilities
      tags:
      - Vulnerability
  /api/3/vulnerability_checks:
    get:
      consumes:
      - application/json
      description: Returns vulnerability checks. Optional search and filtering parameters
        may be supplied to refine the results. Searching allows full text search of
        the vulnerability details a check is related to.
      operationId: getVulnerabilityChecks
      parameters:
      - description: Vulnerability search term to find vulnerability checks for. e.g.
          `"ssh"`.
        in: query
        name: search
        required: false
        type: string
      - description: Whether to return vulnerability checks that are considered "safe"
          to run. Defaults to return safe and unsafe checks.
        in: query
        name: safe
        required: false
        type: boolean
      - description: Whether to only return checks that result in potentially vulnerable
          results. Defaults to return all checks.
        in: query
        name: potential
        required: false
        type: boolean
      - description: Whether to only return checks that require credentials in order
          to successfully execute. Defaults to return all checks.
        in: query
        name: requiresCredentials
        required: false
        type: boolean
      - description: Whether to only return checks that guarantee to be executed once-and-only
          once on a host resulting in a unique result. False returns checks that can
          result in multiple occurrences of the same vulnerability on a host.
        in: query
        name: unique
        required: false
        type: boolean
      - description: The type of vulnerability checks to return. See <a href="#operation/vulnerabilityCheckTypesUsingGET">Check
          Types</a> for all available types.
        in: query
        name: type
        required: false
        type: string
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityCheck»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Checks
      tags:
      - Vulnerability Check
  /api/3/vulnerability_checks/{id}:
    get:
      consumes:
      - application/json
      description: Returns the vulnerability check.
      operationId: vulnerabilityCheck
      parameters:
      - description: The identifier of the vulnerability check.
        in: path
        name: id
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityCheck'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Check
      tags:
      - Vulnerability Check
  /api/3/vulnerability_checks_types:
    get:
      consumes:
      - application/json
      description: Returns the vulnerability check types. The type groups related
        vulnerability checks by their purpose, property, or related characteristic.
      operationId: getVulnerabilityCheckTypes
      parameters: []
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ReferencesWith«VulnerabilityCheckTypeID,Link»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Check Types
      tags:
      - Vulnerability Check
  /api/3/vulnerability_exceptions:
    get:
      consumes:
      - application/json
      description: Returns all exceptions defined on vulnerabilities.
      operationId: getVulnerabilityExceptions
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityException»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exceptions
      tags:
      - Vulnerability Exception
    post:
      consumes:
      - application/json
      description: Creates a vulnerability exception.
      operationId: createVulnerabilityException
      parameters:
      - description: The vulnerability exception to create.
        in: body
        name: vulnerabilityException
        required: false
        schema:
          $ref: '#/definitions/VulnerabilityException'
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/CreatedReference«VulnerabilityExceptionID,Link»'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exceptions
      tags:
      - Vulnerability Exception
  /api/3/vulnerability_exceptions/{id}:
    delete:
      consumes:
      - application/json
      description: Removes an exception made on a vulnerability.
      operationId: removeVulnerabilityException
      parameters:
      - description: id
        format: int32
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exception
      tags:
      - Vulnerability Exception
    get:
      consumes:
      - application/json
      description: Returns an exception made on a vulnerability.
      operationId: getVulnerabilityException
      parameters:
      - description: The identifier of the vulnerability exception.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityException'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exception
      tags:
      - Vulnerability Exception
  /api/3/vulnerability_exceptions/{id}/expires:
    get:
      consumes:
      - application/json
      description: Get the expiration date for a vulnerability exception.
      operationId: getVulnerabilityExceptionExpiration
      parameters:
      - description: id
        format: int32
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exception Expiration
      tags:
      - Vulnerability Exception
    put:
      consumes:
      - application/json
      description: Set the expiration date for a vulnerability exception. This must
        be a valid date in the future.
      operationId: updateVulnerabilityExceptionExpiration
      parameters:
      - description: id
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: param1
        in: body
        name: param1
        required: true
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exception Expiration
      tags:
      - Vulnerability Exception
  /api/3/vulnerability_exceptions/{id}/{status}:
    post:
      consumes:
      - application/json
      description: 'Update the status of the vulnerability exception. The status can
        be one of: `"recall"`, `"approve"`, or `"reject"`.'
      operationId: updateVulnerabilityExceptionStatus
      parameters:
      - description: id
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: Exception Status
        enum:
        - recall
        - approve
        - reject
        in: path
        name: status
        required: false
        type: string
      - description: param2
        in: body
        name: param2
        required: false
        schema:
          type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/Links'
        '400':
          description: Bad Request
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/BadRequestError'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Exception Status
      tags:
      - Vulnerability Exception
  /api/3/vulnerability_references:
    get:
      consumes:
      - application/json
      description: Returns the external references that may be associated to a vulnerability.
      operationId: getVulnerabilityReferences
      parameters:
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«VulnerabilityReference»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: References
      tags:
      - Vulnerability
  /api/3/vulnerability_references/{id}:
    get:
      consumes:
      - application/json
      description: Returns an external vulnerability reference.
      operationId: getVulnerabilityReference
      parameters:
      - description: The identifier of the vulnerability reference.
        format: int32
        in: path
        name: id
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/VulnerabilityReference'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Reference
      tags:
      - Vulnerability
  /api/3/vulnerability_references/{id}/vulnerabilities:
    get:
      consumes:
      - application/json
      description: Returns the vulnerabilities that are referenced by an external
        reference.
      operationId: getVulnerabilityReferenceVulnerabilities
      parameters:
      - description: id
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - default: 0
        description: The index of the page (zero-based) to retrieve.
        format: int32
        in: query
        name: page
        required: false
        type: integer
      - default: 10
        description: The number of records per page to retrieve.
        format: int32
        in: query
        name: size
        required: false
        type: integer
      - collectionFormat: multi
        description: 'The criteria to sort the records by, in the format: `property[,ASC|DESC]`.
          The default sort order is ascending. Multiple sort criteria can be specified
          using multiple sort query parameters.'
        in: query
        items:
          type: string
        name: sort
        required: false
        type: array
      produces:
      - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/PageOf«Vulnerability»'
        '401':
          description: Unauthorized
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '404':
          description: Not Found
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/NotFoundError'
        '500':
          description: Internal Server Error
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/InternalServerError'
        '503':
          description: Service Unavailable
          examples: {}
          headers: {}
          schema:
            $ref: '#/definitions/ServiceUnavailableError'
      schemes: []
      security: []
      summary: Reference Vulnerabilities
      tags:
      - Vulnerability
produces: []
schemes: []
securityDefinitions:
  Basic:
    type: basic
swagger: '2.0'
tags:
- description: Provides access to primary entry point for discovering the available
    resources in this API.
  name: Root
- description: Resources and operations for managing assets. Assets can be created
    under the <a href="#operation/createAssetUsingPOST">Site Assets</a> resource.
  name: Asset
- description: Resources for managing and viewing the mechanisms used to automatically
    discover assets.
  name: Asset Discovery
- description: Asset Group Tag
  name: Asset Group
- description: Resources and operations for managing shared credentials.
  name: Credential
- description: Resources and operations for managing policies.
  name: Policy
- description: Policy Override Resource Controller
  name: Policy Override
- description: Resources for determining the details required to remediate vulnerabilities.
  name: Remediation
- description: Resources and operations for managing and generating reports. Reports
    are broadly categorized into `document`, `export`, and `file` types. `document`
    reports use section-based report templates to control the output and can be generated
    in several formats. `export` reports are designed to output their contents into
    a specific file format. `file` reports are templatized reports that output based
    on the format of a template file. Reports can be configured to generate on a schedule
    and be distributed via email to specific recipients.
  name: Report
- description: Resources and operations for managing scans.
  name: Scan
- description: Resources and operations for managing scan engines.
  name: Scan Engine
- description: Scan Template Resource Controller
  name: Scan Template
- description: Resources and operations for managing sites.
  name: Site
- description: Resources and operations for managing tags.
  name: Tag
- description: Resources and operations for managing users, permissions, and privileges.
  name: User
- description: Resources and operations for viewing vulnerability content and managing
    exceptions.
  name: Vulnerability
- description: Resources and operations for view vulnerability checks that can be
    run as a part of vulnerability content.
  name: Vulnerability Check
- description: Vulnerability Exception Resource Controller
  name: Vulnerability Exception
- description: Resources and operations for retrieving vulnerability results on assessed
    assets.
  name: Vulnerability Result
- description: Provides access administrative operations and procedures.
  name: Administration
